// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		501368F32423C5C800CF0C4B /* Bus.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366082423C5C500CF0C4B /* Bus.cpp */; };
		501368F42423C5C800CF0C4B /* DecodeNumber2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366092423C5C500CF0C4B /* DecodeNumber2.cpp */; };
		501368F52423C5C800CF0C4B /* Egg.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013660A2423C5C500CF0C4B /* Egg.cpp */; };
		501368F62423C5C800CF0C4B /* VectorOddEven.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013660B2423C5C500CF0C4B /* VectorOddEven.cpp */; };
		501368F72423C5C800CF0C4B /* Jinzhi.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013660C2423C5C500CF0C4B /* Jinzhi.cpp */; };
		501368F82423C5C800CF0C4B /* GoodNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013660D2423C5C500CF0C4B /* GoodNumber.cpp */; };
		501368F92423C5C800CF0C4B /* SumArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013660E2423C5C500CF0C4B /* SumArray.cpp */; };
		501368FA2423C5C800CF0C4B /* OrderPair.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013660F2423C5C500CF0C4B /* OrderPair.cpp */; };
		501368FB2423C5C800CF0C4B /* MinKSet.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366102423C5C500CF0C4B /* MinKSet.cpp */; };
		501368FC2423C5C800CF0C4B /* PickRepre.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366112423C5C500CF0C4B /* PickRepre.cpp */; };
		501368FD2423C5C800CF0C4B /* StrMaze.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366122423C5C500CF0C4B /* StrMaze.cpp */; };
		501368FE2423C5C800CF0C4B /* DecodeNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366132423C5C500CF0C4B /* DecodeNumber.cpp */; };
		501368FF2423C5C800CF0C4B /* 5_数对.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366142423C5C500CF0C4B /* 5_数对.cpp */; };
		501369002423C5C800CF0C4B /* Latex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366152423C5C500CF0C4B /* Latex.cpp */; };
		501369012423C5C800CF0C4B /* NumberOfOne.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366162423C5C500CF0C4B /* NumberOfOne.cpp */; };
		501369022423C5C800CF0C4B /* ABCstr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366172423C5C500CF0C4B /* ABCstr.cpp */; };
		501369032423C5C800CF0C4B /* PalStr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366182423C5C500CF0C4B /* PalStr.cpp */; };
		501369042423C5C800CF0C4B /* sukudo.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366192423C5C500CF0C4B /* sukudo.cpp */; };
		501369052423C5C800CF0C4B /* BitCoinBuy.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013661A2423C5C500CF0C4B /* BitCoinBuy.cpp */; };
		501369062423C5C800CF0C4B /* LinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013661B2423C5C500CF0C4B /* LinkedList.cpp */; };
		501369072423C5C800CF0C4B /* ReverseStr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013661C2423C5C500CF0C4B /* ReverseStr.cpp */; };
		501369082423C5C800CF0C4B /* IncludeStr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013661D2423C5C500CF0C4B /* IncludeStr.cpp */; };
		501369092423C5C800CF0C4B /* DayOfYear.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013661E2423C5C500CF0C4B /* DayOfYear.cpp */; };
		5013690A2423C5C800CF0C4B /* ThirdNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013661F2423C5C500CF0C4B /* ThirdNumber.cpp */; };
		5013690B2423C5C800CF0C4B /* AddSub.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366202423C5C500CF0C4B /* AddSub.cpp */; };
		5013690C2423C5C800CF0C4B /* Block.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366212423C5C500CF0C4B /* Block.cpp */; };
		5013690D2423C5C800CF0C4B /* Find.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366222423C5C500CF0C4B /* Find.cpp */; };
		5013690E2423C5C800CF0C4B /* CatFood.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366232423C5C500CF0C4B /* CatFood.cpp */; };
		5013690F2423C5C800CF0C4B /* LIS.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366242423C5C500CF0C4B /* LIS.cpp */; };
		501369102423C5C800CF0C4B /* ListCombi.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366252423C5C500CF0C4B /* ListCombi.cpp */; };
		501369112423C5C800CF0C4B /* AssestPackage.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366262423C5C500CF0C4B /* AssestPackage.cpp */; };
		501369122423C5C800CF0C4B /* Clock.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366272423C5C500CF0C4B /* Clock.cpp */; };
		501369132423C5C800CF0C4B /* 3_安置路灯.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366282423C5C500CF0C4B /* 3_安置路灯.cpp */; };
		501369142423C5C800CF0C4B /* 4_迷路的牛牛.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366292423C5C500CF0C4B /* 4_迷路的牛牛.cpp */; };
		501369152423C5C800CF0C4B /* OrderArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013662A2423C5C500CF0C4B /* OrderArray.cpp */; };
		501369162423C5C800CF0C4B /* MinStore.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013662B2423C5C500CF0C4B /* MinStore.cpp */; };
		501369172423C5C800CF0C4B /* 1_twoSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013662C2423C5C500CF0C4B /* 1_twoSum.cpp */; };
		501369182423C5C800CF0C4B /* LeftStr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013662D2423C5C500CF0C4B /* LeftStr.cpp */; };
		501369192423C5C800CF0C4B /* PrimeD.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013662F2423C5C500CF0C4B /* PrimeD.cpp */; };
		5013691A2423C5C800CF0C4B /* SubString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366302423C5C500CF0C4B /* SubString.cpp */; };
		5013691B2423C5C800CF0C4B /* Brackets.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366312423C5C500CF0C4B /* Brackets.cpp */; };
		5013691C2423C5C800CF0C4B /* MagicDepth.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366322423C5C500CF0C4B /* MagicDepth.cpp */; };
		5013691D2423C5C800CF0C4B /* LIS2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366332423C5C500CF0C4B /* LIS2.cpp */; };
		5013691E2423C5C800CF0C4B /* Poster.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366342423C5C500CF0C4B /* Poster.cpp */; };
		5013691F2423C5C800CF0C4B /* ArrayJump.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366352423C5C500CF0C4B /* ArrayJump.cpp */; };
		501369202423C5C800CF0C4B /* StairsClimb.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366362423C5C500CF0C4B /* StairsClimb.cpp */; };
		501369212423C5C800CF0C4B /* 1_牛牛找工作.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366372423C5C500CF0C4B /* 1_牛牛找工作.cpp */; };
		501369222423C5C800CF0C4B /* Prime.c in Sources */ = {isa = PBXBuildFile; fileRef = 501366382423C5C500CF0C4B /* Prime.c */; };
		501369232423C5C800CF0C4B /* test1.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366392423C5C500CF0C4B /* test1.cpp */; };
		501369242423C5C800CF0C4B /* SortOne.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013663A2423C5C500CF0C4B /* SortOne.cpp */; };
		501369252423C5C800CF0C4B /* 2_被3整除.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013663B2423C5C500CF0C4B /* 2_被3整除.cpp */; };
		501369262423C5C800CF0C4B /* BubbleSort.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013663C2423C5C500CF0C4B /* BubbleSort.cpp */; };
		501369272423C5C800CF0C4B /* PalStr2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013663D2423C5C500CF0C4B /* PalStr2.cpp */; };
		501369282423C5C800CF0C4B /* BucketSort.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013663E2423C5C500CF0C4B /* BucketSort.cpp */; };
		501369292423C5C800CF0C4B /* DayBetweenYear.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013663F2423C5C500CF0C4B /* DayBetweenYear.cpp */; };
		5013692A2423C5C800CF0C4B /* UniString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366412423C5C500CF0C4B /* UniString.cpp */; };
		5013692B2423C5C800CF0C4B /* Boat.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366422423C5C500CF0C4B /* Boat.cpp */; };
		5013692C2423C5C800CF0C4B /* OrderStr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366432423C5C500CF0C4B /* OrderStr.cpp */; };
		5013692D2423C5C800CF0C4B /* StrMutiply.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366442423C5C500CF0C4B /* StrMutiply.cpp */; };
		5013692E2423C5C800CF0C4B /* Card.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366452423C5C500CF0C4B /* Card.cpp */; };
		5013692F2423C5C800CF0C4B /* MinSqr3.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366472423C5C500CF0C4B /* MinSqr3.cpp */; };
		501369302423C5C800CF0C4B /* MajorityArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366482423C5C500CF0C4B /* MajorityArray.cpp */; };
		501369312423C5C800CF0C4B /* Divide.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366492423C5C500CF0C4B /* Divide.cpp */; };
		501369322423C5C800CF0C4B /* iplusplusi.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013664A2423C5C500CF0C4B /* iplusplusi.cpp */; };
		501369332423C5C800CF0C4B /* PhtotoY.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013664B2423C5C500CF0C4B /* PhtotoY.cpp */; };
		501369342423C5C800CF0C4B /* AddNo.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013664C2423C5C500CF0C4B /* AddNo.cpp */; };
		501369352423C5C800CF0C4B /* Candy.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013664D2423C5C500CF0C4B /* Candy.cpp */; };
		501369362423C5C800CF0C4B /* matrix.c in Sources */ = {isa = PBXBuildFile; fileRef = 5013664E2423C5C500CF0C4B /* matrix.c */; };
		501369372423C5C800CF0C4B /* StrAdd.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013664F2423C5C500CF0C4B /* StrAdd.cpp */; };
		501369382423C5C800CF0C4B /* GoodNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366512423C5C500CF0C4B /* GoodNumber.cpp */; };
		501369392423C5C800CF0C4B /* SumArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366522423C5C500CF0C4B /* SumArray.cpp */; };
		5013693A2423C5C800CF0C4B /* Latex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366532423C5C500CF0C4B /* Latex.cpp */; };
		5013693B2423C5C800CF0C4B /* ABCstr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366542423C5C500CF0C4B /* ABCstr.cpp */; };
		5013693C2423C5C800CF0C4B /* PalStr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366552423C5C500CF0C4B /* PalStr.cpp */; };
		5013693D2423C5C800CF0C4B /* sukudo.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366562423C5C500CF0C4B /* sukudo.cpp */; };
		5013693E2423C5C800CF0C4B /* BitCoinBuy.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366572423C5C500CF0C4B /* BitCoinBuy.cpp */; };
		5013693F2423C5C800CF0C4B /* IncludeStr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366582423C5C500CF0C4B /* IncludeStr.cpp */; };
		501369402423C5C800CF0C4B /* DayOfYear.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366592423C5C500CF0C4B /* DayOfYear.cpp */; };
		501369412423C5C800CF0C4B /* AddSub.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013665A2423C5C500CF0C4B /* AddSub.cpp */; };
		501369422423C5C800CF0C4B /* Block.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013665B2423C5C500CF0C4B /* Block.cpp */; };
		501369432423C5C800CF0C4B /* CatFood.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013665C2423C5C500CF0C4B /* CatFood.cpp */; };
		501369442423C5C800CF0C4B /* LIS.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013665D2423C5C500CF0C4B /* LIS.cpp */; };
		501369452423C5C800CF0C4B /* OrderArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013665E2423C5C500CF0C4B /* OrderArray.cpp */; };
		501369462423C5C800CF0C4B /* MinStore.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013665F2423C5C500CF0C4B /* MinStore.cpp */; };
		501369472423C5C800CF0C4B /* MagicDepth.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366612423C5C500CF0C4B /* MagicDepth.cpp */; };
		501369482423C5C800CF0C4B /* Prime.c in Sources */ = {isa = PBXBuildFile; fileRef = 501366622423C5C500CF0C4B /* Prime.c */; };
		501369492423C5C800CF0C4B /* PalStr2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366632423C5C500CF0C4B /* PalStr2.cpp */; };
		5013694A2423C5C800CF0C4B /* BucketSort.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366642423C5C500CF0C4B /* BucketSort.cpp */; };
		5013694B2423C5C800CF0C4B /* UniString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366662423C5C500CF0C4B /* UniString.cpp */; };
		5013694C2423C5C800CF0C4B /* OrderStr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366672423C5C500CF0C4B /* OrderStr.cpp */; };
		5013694D2423C5C800CF0C4B /* Divide.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366692423C5C500CF0C4B /* Divide.cpp */; };
		5013694E2423C5C800CF0C4B /* 518_CoinChange2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013666C2423C5C500CF0C4B /* 518_CoinChange2.cpp */; };
		5013694F2423C5C800CF0C4B /* 342_PowerOfFour.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013666D2423C5C500CF0C4B /* 342_PowerOfFour.cpp */; };
		501369502423C5C800CF0C4B /* countOfSmallerNumbersAfterSelf.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013666F2423C5C500CF0C4B /* countOfSmallerNumbersAfterSelf.cpp */; };
		501369512423C5C800CF0C4B /* RectangleArea.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366712423C5C500CF0C4B /* RectangleArea.cpp */; };
		501369522423C5C800CF0C4B /* MaximalSquare.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366732423C5C500CF0C4B /* MaximalSquare.cpp */; };
		501369532423C5C800CF0C4B /* TimeBasedKeyValueStore.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366752423C5C500CF0C4B /* TimeBasedKeyValueStore.cpp */; };
		501369542423C5C800CF0C4B /* CousinsInBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366772423C5C500CF0C4B /* CousinsInBinaryTree.cpp */; };
		501369552423C5C800CF0C4B /* 2_addTwoNumbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366782423C5C500CF0C4B /* 2_addTwoNumbers.cpp */; };
		501369562423C5C800CF0C4B /* 211_AddAndSearchWord.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366792423C5C500CF0C4B /* 211_AddAndSearchWord.cpp */; };
		501369572423C5C800CF0C4B /* 557_reverseWordsInAStringIii.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013667A2423C5C500CF0C4B /* 557_reverseWordsInAStringIii.cpp */; };
		501369582423C5C800CF0C4B /* removeDuplicatesFromSortedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013667C2423C5C500CF0C4B /* removeDuplicatesFromSortedList.cpp */; };
		501369592423C5C800CF0C4B /* removeDuplicatesFromSortedList.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013667D2423C5C500CF0C4B /* removeDuplicatesFromSortedList.II.cpp */; };
		5013695A2423C5C800CF0C4B /* searchForRange.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013667F2423C5C500CF0C4B /* searchForRange.cpp */; };
		5013695B2423C5C800CF0C4B /* removeElement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366812423C5C500CF0C4B /* removeElement.cpp */; };
		5013695C2423C5C800CF0C4B /* FirstBadVersion.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366832423C5C500CF0C4B /* FirstBadVersion.cpp */; };
		5013695D2423C5C800CF0C4B /* convertSortedListToBinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366852423C5C500CF0C4B /* convertSortedListToBinarySearchTree.cpp */; };
		5013695E2423C5C800CF0C4B /* SmallestStringStartingFromLeaf.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366882423C5C500CF0C4B /* SmallestStringStartingFromLeaf.cpp */; };
		5013695F2423C5C800CF0C4B /* 47_permutations.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366892423C5C500CF0C4B /* 47_permutations.II.cpp */; };
		501369602423C5C800CF0C4B /* 46_permutations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013668A2423C5C500CF0C4B /* 46_permutations.cpp */; };
		501369612423C5C800CF0C4B /* excelSheetColumnTitle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013668C2423C5C500CF0C4B /* excelSheetColumnTitle.cpp */; };
		501369622423C5C800CF0C4B /* MostCommonWord.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013668E2423C5C500CF0C4B /* MostCommonWord.cpp */; };
		501369632423C5C800CF0C4B /* largestPerimeterTriangle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366902423C5C500CF0C4B /* largestPerimeterTriangle.cpp */; };
		501369642423C5C800CF0C4B /* 49_GroupAnagrams.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366912423C5C500CF0C4B /* 49_GroupAnagrams.cpp */; };
		501369652423C5C800CF0C4B /* 991_BrokenCalculator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366922423C5C500CF0C4B /* 991_BrokenCalculator.cpp */; };
		501369662423C5C800CF0C4B /* PalindromicSubstrings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366942423C5C500CF0C4B /* PalindromicSubstrings.cpp */; };
		501369672423C5C800CF0C4B /* pathSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366962423C5C500CF0C4B /* pathSum.cpp */; };
		501369682423C5C800CF0C4B /* pathSum.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366972423C5C600CF0C4B /* pathSum.II.cpp */; };
		501369692423C5C800CF0C4B /* PeekingIterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366992423C5C600CF0C4B /* PeekingIterator.cpp */; };
		5013696A2423C5C800CF0C4B /* SerializeAndDeserializeBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013669B2423C5C600CF0C4B /* SerializeAndDeserializeBinaryTree.cpp */; };
		5013696B2423C5C800CF0C4B /* repeatedDNASequences.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013669D2423C5C600CF0C4B /* repeatedDNASequences.cpp */; };
		5013696C2423C5C800CF0C4B /* 106_ConstructBinaryTreeFromInorderAndPostorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013669E2423C5C600CF0C4B /* 106_ConstructBinaryTreeFromInorderAndPostorderTraversal.cpp */; };
		5013696D2423C5C800CF0C4B /* 122_bestTimeToBuyAndSellStock.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013669F2423C5C600CF0C4B /* 122_bestTimeToBuyAndSellStock.II.cpp */; };
		5013696E2423C5C800CF0C4B /* grayCode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366A12423C5C600CF0C4B /* grayCode.cpp */; };
		5013696F2423C5C800CF0C4B /* mergeIntervals.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366A32423C5C600CF0C4B /* mergeIntervals.cpp */; };
		501369702423C5C800CF0C4B /* restoreIPAddresses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366A52423C5C600CF0C4B /* restoreIPAddresses.cpp */; };
		501369712423C5C800CF0C4B /* 173_binarySearchTreeIterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366A62423C5C600CF0C4B /* 173_binarySearchTreeIterator.cpp */; };
		501369722423C5C800CF0C4B /* validPalindrome.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366A82423C5C600CF0C4B /* validPalindrome.cpp */; };
		501369732423C5C800CF0C4B /* SlidingWindowMaximum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366AA2423C5C600CF0C4B /* SlidingWindowMaximum.cpp */; };
		501369742423C5C800CF0C4B /* textJustification.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366AC2423C5C600CF0C4B /* textJustification.cpp */; };
		501369752423C5C800CF0C4B /* 77_Combinations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366AD2423C5C600CF0C4B /* 77_Combinations.cpp */; };
		501369762423C5C800CF0C4B /* PerfectSquares.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366AF2423C5C600CF0C4B /* PerfectSquares.cpp */; };
		501369772423C5C800CF0C4B /* LongestTurbulentSubarray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366B12423C5C600CF0C4B /* LongestTurbulentSubarray.cpp */; };
		501369782423C5C800CF0C4B /* maximalRectangle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366B32423C5C600CF0C4B /* maximalRectangle.cpp */; };
		501369792423C5C800CF0C4B /* IntervalListIntersections.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366B52423C5C600CF0C4B /* IntervalListIntersections.cpp */; };
		5013697A2423C5C800CF0C4B /* ImplementTriePrefixTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366B72423C5C600CF0C4B /* ImplementTriePrefixTree.cpp */; };
		5013697B2423C5C800CF0C4B /* StringWithoutAAAOrBBB.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366B92423C5C600CF0C4B /* StringWithoutAAAOrBBB.cpp */; };
		5013697C2423C5C800CF0C4B /* 23_mergeKSortedLists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366BA2423C5C600CF0C4B /* 23_mergeKSortedLists.cpp */; };
		5013697D2423C5C800CF0C4B /* surroundedRegions.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366BC2423C5C600CF0C4B /* surroundedRegions.cpp */; };
		5013697E2423C5C800CF0C4B /* ProductOfArrayExceptSelf.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366BE2423C5C600CF0C4B /* ProductOfArrayExceptSelf.cpp */; };
		5013697F2423C5C800CF0C4B /* DecodeString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366C02423C5C600CF0C4B /* DecodeString.cpp */; };
		501369802423C5C800CF0C4B /* VerifyPreorderSerializationOfABinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366C22423C5C600CF0C4B /* VerifyPreorderSerializationOfABinaryTree.cpp */; };
		501369812423C5C800CF0C4B /* wordSearch.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366C42423C5C600CF0C4B /* wordSearch.cpp */; };
		501369822423C5C800CF0C4B /* wordSearch.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366C52423C5C600CF0C4B /* wordSearch.II.cpp */; };
		501369832423C5C800CF0C4B /* InsertDeleteGetrandomO1.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366C72423C5C600CF0C4B /* InsertDeleteGetrandomO1.cpp */; };
		501369842423C5C800CF0C4B /* InsertDeleteGetrandomO1DuplicatesAllowed.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366C82423C5C600CF0C4B /* InsertDeleteGetrandomO1DuplicatesAllowed.cpp */; };
		501369852423C5C800CF0C4B /* longestSubstringWithAtMostTwoDistinctCharacters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366CA2423C5C600CF0C4B /* longestSubstringWithAtMostTwoDistinctCharacters.cpp */; };
		501369862423C5C800CF0C4B /* totalHammingDistance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366CC2423C5C600CF0C4B /* totalHammingDistance.cpp */; };
		501369872423C5C800CF0C4B /* minimumWindowSubstring.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366CE2423C5C600CF0C4B /* minimumWindowSubstring.cpp */; };
		501369882423C5C800CF0C4B /* sumRootToLeafNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366D02423C5C600CF0C4B /* sumRootToLeafNumber.cpp */; };
		501369892423C5C800CF0C4B /* 1108_defangingAnIpAddress.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366D12423C5C600CF0C4B /* 1108_defangingAnIpAddress.cpp */; };
		5013698A2423C5C800CF0C4B /* LowestCommonAncestorOfABinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366D32423C5C600CF0C4B /* LowestCommonAncestorOfABinaryTree.cpp */; };
		5013698B2423C5C800CF0C4B /* interleavingString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366D52423C5C600CF0C4B /* interleavingString.cpp */; };
		5013698C2423C5C800CF0C4B /* 5_longestPalindromicSubstring.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366D62423C5C600CF0C4B /* 5_longestPalindromicSubstring.cpp */; };
		5013698D2423C5C800CF0C4B /* LongestAbsoluteFilePath.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366D82423C5C600CF0C4B /* LongestAbsoluteFilePath.cpp */; };
		5013698E2423C5C800CF0C4B /* 43_multiplyStrings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366D92423C5C600CF0C4B /* 43_multiplyStrings.cpp */; };
		5013698F2423C5C800CF0C4B /* 135_candy.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366DA2423C5C600CF0C4B /* 135_candy.cpp */; };
		501369902423C5C800CF0C4B /* 260_singleNumberIii.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366DB2423C5C600CF0C4B /* 260_singleNumberIii.cpp */; };
		501369912423C5C800CF0C4B /* validSudoku.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366DD2423C5C600CF0C4B /* validSudoku.cpp */; };
		501369922423C5C800CF0C4B /* 18_4Sum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366DE2423C5C600CF0C4B /* 18_4Sum.cpp */; };
		501369932423C5C800CF0C4B /* 219_ContainsDuplicate.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366E02423C5C600CF0C4B /* 219_ContainsDuplicate.II.cpp */; };
		501369942423C5C800CF0C4B /* RansomNote.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366E22423C5C600CF0C4B /* RansomNote.cpp */; };
		501369952423C5C800CF0C4B /* 174_dungeonGame.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366E32423C5C600CF0C4B /* 174_dungeonGame.cpp */; };
		501369962423C5C800CF0C4B /* validNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366E52423C5C600CF0C4B /* validNumber.cpp */; };
		501369972423C5C800CF0C4B /* CountOfRangeSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366E72423C5C600CF0C4B /* CountOfRangeSum.cpp */; };
		501369982423C5C800CF0C4B /* 201_BitwiseAndOfNumbersRange.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366E82423C5C600CF0C4B /* 201_BitwiseAndOfNumbersRange.cpp */; };
		501369992423C5C800CF0C4B /* PerfectRectangle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366EA2423C5C600CF0C4B /* PerfectRectangle.cpp */; };
		5013699A2423C5C800CF0C4B /* 78_subsets.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366EB2423C5C600CF0C4B /* 78_subsets.cpp */; };
		5013699B2423C5C800CF0C4B /* evaluateReversePolishNotation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366ED2423C5C600CF0C4B /* evaluateReversePolishNotation.cpp */; };
		5013699C2423C5C800CF0C4B /* gasStation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366EF2423C5C600CF0C4B /* gasStation.cpp */; };
		5013699D2423C5C800CF0C4B /* 213_houseRobber.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366F02423C5C600CF0C4B /* 213_houseRobber.II.cpp */; };
		5013699E2423C5C800CF0C4B /* NumberOfIslands.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366F22423C5C600CF0C4B /* NumberOfIslands.cpp */; };
		5013699F2423C5C800CF0C4B /* MinimumSizeSubarraySum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366F42423C5C600CF0C4B /* MinimumSizeSubarraySum.cpp */; };
		501369A02423C5C800CF0C4B /* FindMedianFromDataStream.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366F62423C5C600CF0C4B /* FindMedianFromDataStream.cpp */; };
		501369A12423C5C800CF0C4B /* distinctSubsequences.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366F82423C5C600CF0C4B /* distinctSubsequences.cpp */; };
		501369A22423C5C800CF0C4B /* reorderList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366FA2423C5C600CF0C4B /* reorderList.cpp */; };
		501369A32423C5C800CF0C4B /* missingRanges.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366FC2423C5C600CF0C4B /* missingRanges.cpp */; };
		501369A42423C5C800CF0C4B /* 441_arrangingCoins.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366FD2423C5C600CF0C4B /* 441_arrangingCoins.cpp */; };
		501369A52423C5C800CF0C4B /* InvertBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501366FF2423C5C600CF0C4B /* InvertBinaryTree.cpp */; };
		501369A62423C5C800CF0C4B /* linkedListCycle.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367012423C5C600CF0C4B /* linkedListCycle.II.cpp */; };
		501369A72423C5C800CF0C4B /* linkedListCycle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367022423C5C600CF0C4B /* linkedListCycle.cpp */; };
		501369A82423C5C800CF0C4B /* validateBinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367042423C5C600CF0C4B /* validateBinarySearchTree.cpp */; };
		501369A92423C5C800CF0C4B /* 42_trappingRainWater.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367052423C5C600CF0C4B /* 42_trappingRainWater.cpp */; };
		501369AA2423C5C800CF0C4B /* 11_containerWithMostWater.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367062423C5C600CF0C4B /* 11_containerWithMostWater.cpp */; };
		501369AB2423C5C800CF0C4B /* MinimumCostForTickets.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367082423C5C600CF0C4B /* MinimumCostForTickets.cpp */; };
		501369AC2423C5C800CF0C4B /* 102_binaryTreeLevelOrderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367092423C5C600CF0C4B /* 102_binaryTreeLevelOrderTraversal.cpp */; };
		501369AD2423C5C800CF0C4B /* factorialTrailingZeroes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013670B2423C5C600CF0C4B /* factorialTrailingZeroes.cpp */; };
		501369AE2423C5C800CF0C4B /* 509_fibonacciNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013670C2423C5C600CF0C4B /* 509_fibonacciNumber.cpp */; };
		501369AF2423C5C800CF0C4B /* 714_BestTimeToBuyAndSellStockWithTransactionFee.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013670D2423C5C600CF0C4B /* 714_BestTimeToBuyAndSellStockWithTransactionFee.cpp */; };
		501369B02423C5C800CF0C4B /* reverseLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013670F2423C5C600CF0C4B /* reverseLinkedList.cpp */; };
		501369B12423C5C800CF0C4B /* reverseLinkedList.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367102423C5C600CF0C4B /* reverseLinkedList.II.cpp */; };
		501369B22423C5C800CF0C4B /* numberOf1Bits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367122423C5C600CF0C4B /* numberOf1Bits.cpp */; };
		501369B32423C5C800CF0C4B /* SumOfLeftLeaves.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367142423C5C600CF0C4B /* SumOfLeftLeaves.cpp */; };
		501369B42423C5C800CF0C4B /* 227_BasicCalculator.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367152423C5C600CF0C4B /* 227_BasicCalculator.II.cpp */; };
		501369B52423C5C800CF0C4B /* TheSkylineProblem.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367172423C5C600CF0C4B /* TheSkylineProblem.cpp */; };
		501369B62423C5C800CF0C4B /* 165_compareVersionNumbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367182423C5C600CF0C4B /* 165_compareVersionNumbers.cpp */; };
		501369B72423C5C800CF0C4B /* search2DMatrix.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013671A2423C5C600CF0C4B /* search2DMatrix.II.cpp */; };
		501369B82423C5C800CF0C4B /* search2DMatrix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013671B2423C5C600CF0C4B /* search2DMatrix.cpp */; };
		501369B92423C5C800CF0C4B /* MiniParser.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013671D2423C5C600CF0C4B /* MiniParser.cpp */; };
		501369BA2423C5C800CF0C4B /* convertSortedArrayToBinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013671F2423C5C600CF0C4B /* convertSortedArrayToBinarySearchTree.cpp */; };
		501369BB2423C5C800CF0C4B /* 220_ContainsDuplicate.III.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367202423C5C600CF0C4B /* 220_ContainsDuplicate.III.cpp */; };
		501369BC2423C5C800CF0C4B /* 123_bestTimeToBuyAndSellStock.III.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367212423C5C600CF0C4B /* 123_bestTimeToBuyAndSellStock.III.cpp */; };
		501369BD2423C5C800CF0C4B /* SatisfiabilityOfEqualityEquations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367232423C5C600CF0C4B /* SatisfiabilityOfEqualityEquations.cpp */; };
		501369BE2423C5C800CF0C4B /* topKFrequentElements.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367252423C5C600CF0C4B /* topKFrequentElements.cpp */; };
		501369BF2423C5C800CF0C4B /* sortList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367272423C5C600CF0C4B /* sortList.cpp */; };
		501369C02423C5C800CF0C4B /* SquaresOfASortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367292423C5C600CF0C4B /* SquaresOfASortedArray.cpp */; };
		501369C12423C5C800CF0C4B /* 413_ArithmeticSlices.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013672B2423C5C600CF0C4B /* 413_ArithmeticSlices.cpp */; };
		501369C22423C5C800CF0C4B /* moveZeroes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013672D2423C5C600CF0C4B /* moveZeroes.cpp */; };
		501369C32423C5C800CF0C4B /* findPeakElement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013672F2423C5C600CF0C4B /* findPeakElement.cpp */; };
		501369C42423C5C800CF0C4B /* CountNumbersWithUniqueDigits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367312423C5C600CF0C4B /* CountNumbersWithUniqueDigits.cpp */; };
		501369C52423C5C800CF0C4B /* 306_AdditiveNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367322423C5C600CF0C4B /* 306_AdditiveNumber.cpp */; };
		501369C62423C5C800CF0C4B /* minStack.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367342423C5C600CF0C4B /* minStack.cpp */; };
		501369C72423C5C800CF0C4B /* flattenBinaryTreeToLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367362423C5C600CF0C4B /* flattenBinaryTreeToLinkedList.cpp */; };
		501369C82423C5C800CF0C4B /* recoverATreeFromPreorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367382423C5C600CF0C4B /* recoverATreeFromPreorderTraversal.cpp */; };
		501369C92423C5C800CF0C4B /* nextPermutation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013673A2423C5C600CF0C4B /* nextPermutation.cpp */; };
		501369CA2423C5C800CF0C4B /* RangeSumQueryMutable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013673D2423C5C600CF0C4B /* RangeSumQueryMutable.cpp */; };
		501369CB2423C5C800CF0C4B /* rangeSumQuery-Immutable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013673E2423C5C600CF0C4B /* rangeSumQuery-Immutable.cpp */; };
		501369CC2423C5C800CF0C4B /* 44_wildcardMatching.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013673F2423C5C600CF0C4B /* 44_wildcardMatching.cpp */; };
		501369CD2423C5C800CF0C4B /* 326_PowerOfThree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367402423C5C600CF0C4B /* 326_PowerOfThree.cpp */; };
		501369CE2423C5C800CF0C4B /* 322_CoinChange.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367412423C5C600CF0C4B /* 322_CoinChange.cpp */; };
		501369CF2423C5C800CF0C4B /* 6_zigZagConversion.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367422423C5C600CF0C4B /* 6_zigZagConversion.cpp */; };
		501369D02423C5C800CF0C4B /* 121_bestTimeToBuyAndSellStock.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367432423C5C600CF0C4B /* 121_bestTimeToBuyAndSellStock.cpp */; };
		501369D12423C5C800CF0C4B /* 39_combinationSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367442423C5C600CF0C4B /* 39_combinationSum.cpp */; };
		501369D22423C5C800CF0C4B /* N-Repeated-Element-in-Size-2N-Array.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367462423C5C600CF0C4B /* N-Repeated-Element-in-Size-2N-Array.cpp */; };
		501369D32423C5C800CF0C4B /* pascalTriangle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367482423C5C600CF0C4B /* pascalTriangle.cpp */; };
		501369D42423C5C800CF0C4B /* pascalTriangle.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367492423C5C600CF0C4B /* pascalTriangle.II.cpp */; };
		501369D52423C5C800CF0C4B /* EliminationGame.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013674B2423C5C600CF0C4B /* EliminationGame.cpp */; };
		501369D62423C5C800CF0C4B /* IsSubsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013674D2423C5C600CF0C4B /* IsSubsequence.cpp */; };
		501369D72423C5C800CF0C4B /* uniqueBinarySearchTrees.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013674F2423C5C600CF0C4B /* uniqueBinarySearchTrees.II.cpp */; };
		501369D82423C5C800CF0C4B /* uniqueBinarySearchTrees.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367502423C5C600CF0C4B /* uniqueBinarySearchTrees.cpp */; };
		501369D92423C5C800CF0C4B /* 13_romanToInteger.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367512423C5C600CF0C4B /* 13_romanToInteger.cpp */; };
		501369DA2423C5C800CF0C4B /* DeleteNodeInALinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367532423C5C600CF0C4B /* DeleteNodeInALinkedList.cpp */; };
		501369DB2423C5C800CF0C4B /* triangle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367552423C5C600CF0C4B /* triangle.cpp */; };
		501369DC2423C5C800CF0C4B /* longestConsecutiveSequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367572423C5C600CF0C4B /* longestConsecutiveSequence.cpp */; };
		501369DD2423C5C800CF0C4B /* ExpressionAddOperators.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367592423C5C600CF0C4B /* ExpressionAddOperators.cpp */; };
		501369DE2423C5C800CF0C4B /* 167_twoSum.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013675A2423C5C600CF0C4B /* 167_twoSum.II.cpp */; };
		501369DF2423C5C800CF0C4B /* UTF8Validation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013675C2423C5C600CF0C4B /* UTF8Validation.cpp */; };
		501369E02423C5C800CF0C4B /* countAndSay.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013675E2423C5C600CF0C4B /* countAndSay.cpp */; };
		501369E12423C5C800CF0C4B /* 4_medianOfTwoSortedArrays.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013675F2423C5C600CF0C4B /* 4_medianOfTwoSortedArrays.cpp */; };
		501369E22423C5C800CF0C4B /* 136_singleNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367602423C5C600CF0C4B /* 136_singleNumber.cpp */; };
		501369E32423C5C800CF0C4B /* sortColors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367622423C5C600CF0C4B /* sortColors.cpp */; };
		501369E42423C5C800CF0C4B /* reverseBits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367642423C5C600CF0C4B /* reverseBits.cpp */; };
		501369E52423C5C800CF0C4B /* 17_letterCombinationsOfAPhoneNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367652423C5C600CF0C4B /* 17_letterCombinationsOfAPhoneNumber.cpp */; };
		501369E62423C5C800CF0C4B /* FlattenNestedListIterator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367672423C5C600CF0C4B /* FlattenNestedListIterator.cpp */; };
		501369E72423C5C800CF0C4B /* editDistance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367692423C5C600CF0C4B /* editDistance.cpp */; };
		501369E82423C5C800CF0C4B /* MinimumAsciiDeleteSumForTwoStrings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013676B2423C5C600CF0C4B /* MinimumAsciiDeleteSumForTwoStrings.cpp */; };
		501369E92423C5C800CF0C4B /* sameTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013676D2423C5C600CF0C4B /* sameTree.cpp */; };
		501369EA2423C5C800CF0C4B /* nimGame.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013676F2423C5C600CF0C4B /* nimGame.cpp */; };
		501369EB2423C5C800CF0C4B /* maximumDepthOfBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367712423C5C600CF0C4B /* maximumDepthOfBinaryTree.cpp */; };
		501369EC2423C5C800CF0C4B /* 41_firstMissingPositive.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367722423C5C600CF0C4B /* 41_firstMissingPositive.cpp */; };
		501369ED2423C5C800CF0C4B /* 859_BuddyStrings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367732423C5C600CF0C4B /* 859_BuddyStrings.cpp */; };
		501369EE2423C5C800CF0C4B /* 1_twoSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367742423C5C600CF0C4B /* 1_twoSum.cpp */; };
		501369EF2423C5C800CF0C4B /* 3_longestSubstringWithoutRepeatingCharacters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367752423C5C600CF0C4B /* 3_longestSubstringWithoutRepeatingCharacters.cpp */; };
		501369F02423C5C800CF0C4B /* 12_integerToRoman.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367762423C5C600CF0C4B /* 12_integerToRoman.cpp */; };
		501369F12423C5C800CF0C4B /* CountCompleteTreeNodes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367782423C5C600CF0C4B /* CountCompleteTreeNodes.cpp */; };
		501369F22423C5C800CF0C4B /* 520_detectCapital.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367792423C5C600CF0C4B /* 520_detectCapital.cpp */; };
		501369F32423C5C800CF0C4B /* 1170_CompareStringsByFrequencyOfTheSmallestCharacter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013677A2423C5C600CF0C4B /* 1170_CompareStringsByFrequencyOfTheSmallestCharacter.cpp */; };
		501369F42423C5C800CF0C4B /* TwoCityScheduling.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013677C2423C5C600CF0C4B /* TwoCityScheduling.cpp */; };
		501369F52423C5C800CF0C4B /* MaximumAverageSubarray.I.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013677E2423C5C600CF0C4B /* MaximumAverageSubarray.I.cpp */; };
		501369F62423C5C800CF0C4B /* maximumGap.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367802423C5C600CF0C4B /* maximumGap.cpp */; };
		501369F72423C5C800CF0C4B /* IslandPerimeter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367822423C5C600CF0C4B /* IslandPerimeter.cpp */; };
		501369F82423C5C800CF0C4B /* 107_binaryTreeLevelOrderTraversal.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367832423C5C600CF0C4B /* 107_binaryTreeLevelOrderTraversal.II.cpp */; };
		501369F92423C5C800CF0C4B /* 110_balancedBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367842423C5C600CF0C4B /* 110_balancedBinaryTree.cpp */; };
		501369FA2423C5C800CF0C4B /* 224_BasicCalculator.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367852423C5C600CF0C4B /* 224_BasicCalculator.cpp */; };
		501369FB2423C5C800CF0C4B /* 15_3Sum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367862423C5C600CF0C4B /* 15_3Sum.cpp */; };
		501369FC2423C5C800CF0C4B /* 50_pow(x,n).cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367872423C5C600CF0C4B /* 50_pow(x,n).cpp */; };
		501369FD2423C5C800CF0C4B /* 105_ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367882423C5C600CF0C4B /* 105_ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp */; };
		501369FE2423C5C800CF0C4B /* LowestCommonAncestorOfABinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013678A2423C5C600CF0C4B /* LowestCommonAncestorOfABinarySearchTree.cpp */; };
		501369FF2423C5C800CF0C4B /* singleNumber.III.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013678C2423C5C600CF0C4B /* singleNumber.III.cpp */; };
		50136A002423C5C800CF0C4B /* singleNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013678D2423C5C600CF0C4B /* singleNumber.cpp */; };
		50136A012423C5C800CF0C4B /* WiggleSort.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013678F2423C5C600CF0C4B /* WiggleSort.II.cpp */; };
		50136A022423C5C800CF0C4B /* PeakIndexInAMountainArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367912423C5C600CF0C4B /* PeakIndexInAMountainArray.cpp */; };
		50136A032423C5C800CF0C4B /* RemoveDuplicateLetters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367932423C5C600CF0C4B /* RemoveDuplicateLetters.cpp */; };
		50136A042423C5C800CF0C4B /* sqrt.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367952423C5C600CF0C4B /* sqrt.cpp */; };
		50136A052423C5C800CF0C4B /* simplifyPath.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367972423C5C600CF0C4B /* simplifyPath.cpp */; };
		50136A062423C5C800CF0C4B /* LexicographicalNumbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367992423C5C600CF0C4B /* LexicographicalNumbers.cpp */; };
		50136A072423C5C800CF0C4B /* substringWithConcatenationOfAllWords.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013679B2423C5C600CF0C4B /* substringWithConcatenationOfAllWords.cpp */; };
		50136A082423C5C800CF0C4B /* findTheDuplicateNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013679D2423C5C600CF0C4B /* findTheDuplicateNumber.cpp */; };
		50136A092423C5C800CF0C4B /* 24_swapNodesInPairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013679E2423C5C600CF0C4B /* 24_swapNodesInPairs.cpp */; };
		50136A0A2423C5C800CF0C4B /* NthDigit.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367A02423C5C600CF0C4B /* NthDigit.cpp */; };
		50136A0B2423C5C800CF0C4B /* minimumPathSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367A22423C5C600CF0C4B /* minimumPathSum.cpp */; };
		50136A0C2423C5C800CF0C4B /* 40_combinationSum.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367A32423C5C600CF0C4B /* 40_combinationSum.II.cpp */; };
		50136A0D2423C5C800CF0C4B /* lengthOfLastWord.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367A52423C5C600CF0C4B /* lengthOfLastWord.cpp */; };
		50136A0E2423C5C800CF0C4B /* 8_stringToIntegerAtoi.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367A62423C5C600CF0C4B /* 8_stringToIntegerAtoi.cpp */; };
		50136A0F2423C5C800CF0C4B /* 70_climbStairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367A72423C5C600CF0C4B /* 70_climbStairs.cpp */; };
		50136A102423C5C800CF0C4B /* MinCostClimbingStairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367A92423C5C600CF0C4B /* MinCostClimbingStairs.cpp */; };
		50136A112423C5C800CF0C4B /* increasingTripletSubsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367AB2423C5C600CF0C4B /* increasingTripletSubsequence.cpp */; };
		50136A122423C5C800CF0C4B /* FrogJump.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367AD2423C5C600CF0C4B /* FrogJump.cpp */; };
		50136A132423C5C800CF0C4B /* searchInRotatedSortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367AF2423C5C600CF0C4B /* searchInRotatedSortedArray.cpp */; };
		50136A142423C5C800CF0C4B /* searchInRotatedSortedArray.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367B02423C5C600CF0C4B /* searchInRotatedSortedArray.II.cpp */; };
		50136A152423C5C800CF0C4B /* 401_BinaryWatch.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367B12423C5C600CF0C4B /* 401_BinaryWatch.cpp */; };
		50136A162423C5C800CF0C4B /* ImplementQueueUsingStacks.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367B32423C5C600CF0C4B /* ImplementQueueUsingStacks.cpp */; };
		50136A172423C5C800CF0C4B /* RemoveKDigits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367B52423C5C600CF0C4B /* RemoveKDigits.cpp */; };
		50136A182423C5C800CF0C4B /* 156_binaryTreeUpsideDown.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367B62423C5C600CF0C4B /* 156_binaryTreeUpsideDown.cpp */; };
		50136A192423C5C800CF0C4B /* 275_h-Index.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367B72423C5C600CF0C4B /* 275_h-Index.II.cpp */; };
		50136A1A2423C5C800CF0C4B /* 989_AddToArrayFormOfInteger.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367B82423C5C600CF0C4B /* 989_AddToArrayFormOfInteger.cpp */; };
		50136A1B2423C5C800CF0C4B /* 1342_numberOfStepsToReduceANumberToZero.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367B92423C5C600CF0C4B /* 1342_numberOfStepsToReduceANumberToZero.cpp */; };
		50136A1C2423C5C800CF0C4B /* ReconstructItinerary.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367BB2423C5C600CF0C4B /* ReconstructItinerary.cpp */; };
		50136A1D2423C5C800CF0C4B /* 188_bestTimeToBuyAndSellStock.IV.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367BC2423C5C600CF0C4B /* 188_bestTimeToBuyAndSellStock.IV.cpp */; };
		50136A1E2423C5C800CF0C4B /* removeDuplicatesFromSortedArray.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367BE2423C5C600CF0C4B /* removeDuplicatesFromSortedArray.II.cpp */; };
		50136A1F2423C5C800CF0C4B /* removeDuplicatesFromSortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367BF2423C5C600CF0C4B /* removeDuplicatesFromSortedArray.cpp */; };
		50136A202423C5C800CF0C4B /* MirrorReflection.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367C12423C5C600CF0C4B /* MirrorReflection.cpp */; };
		50136A212423C5C800CF0C4B /* VerticalOrderTraversalOfABinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367C32423C5C600CF0C4B /* VerticalOrderTraversalOfABinaryTree.cpp */; };
		50136A222423C5C800CF0C4B /* 337_houseRobberIII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367C42423C5C600CF0C4B /* 337_houseRobberIII.cpp */; };
		50136A232423C5C800CF0C4B /* SumOfEvenNumbersAfterQueries.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367C62423C5C600CF0C4B /* SumOfEvenNumbersAfterQueries.cpp */; };
		50136A242423C5C800CF0C4B /* recoverBinarySearchTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367C82423C5C600CF0C4B /* recoverBinarySearchTree.cpp */; };
		50136A252423C5C800CF0C4B /* 144_binaryTreePreorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367C92423C5C600CF0C4B /* 144_binaryTreePreorderTraversal.cpp */; };
		50136A262423C5C800CF0C4B /* LongestPalindrome.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367CB2423C5C600CF0C4B /* LongestPalindrome.cpp */; };
		50136A272423C5C800CF0C4B /* insertInterval.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367CD2423C5C600CF0C4B /* insertInterval.cpp */; };
		50136A282423C5C800CF0C4B /* MinimumFallingPathSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367CF2423C5C600CF0C4B /* MinimumFallingPathSum.cpp */; };
		50136A292423C5C800CF0C4B /* 133_cloneGraph.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367D02423C5C600CF0C4B /* 133_cloneGraph.cpp */; };
		50136A2A2423C5C800CF0C4B /* mergeTwoSortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367D22423C5C600CF0C4B /* mergeTwoSortedArray.cpp */; };
		50136A2B2423C5C800CF0C4B /* CourseSchedule.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367D42423C5C600CF0C4B /* CourseSchedule.cpp */; };
		50136A2C2423C5C800CF0C4B /* course_schedule.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367D62423C5C600CF0C4B /* course_schedule.cpp */; };
		50136A2D2423C5C800CF0C4B /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367D72423C5C600CF0C4B /* main.cpp */; };
		50136A2E2423C5C800CF0C4B /* CourseSchedule.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367D82423C5C600CF0C4B /* CourseSchedule.II.cpp */; };
		50136A2F2423C5C800CF0C4B /* KthLargestElementInAnArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367DA2423C5C600CF0C4B /* KthLargestElementInAnArray.cpp */; };
		50136A302423C5C800CF0C4B /* 20_validParentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367DB2423C5C600CF0C4B /* 20_validParentheses.cpp */; };
		50136A312423C5C800CF0C4B /* UniquePaths.III.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367DD2423C5C600CF0C4B /* UniquePaths.III.cpp */; };
		50136A322423C5C800CF0C4B /* uniquePaths.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367DE2423C5C600CF0C4B /* uniquePaths.cpp */; };
		50136A332423C5C800CF0C4B /* uniquePaths.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367DF2423C5C600CF0C4B /* uniquePaths.II.cpp */; };
		50136A342423C5C800CF0C4B /* MinimumHeightTrees.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367E12423C5C600CF0C4B /* MinimumHeightTrees.cpp */; };
		50136A352423C5C800CF0C4B /* SummaryRanges.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367E32423C5C600CF0C4B /* SummaryRanges.cpp */; };
		50136A362423C5C800CF0C4B /* 312_BurstBalloons.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367E42423C5C600CF0C4B /* 312_BurstBalloons.cpp */; };
		50136A372423C5C800CF0C4B /* 21_mergeTwoSortedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367E52423C5C600CF0C4B /* 21_mergeTwoSortedList.cpp */; };
		50136A382423C5C800CF0C4B /* 844_BackspaceStringCompare.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367E62423C5C600CF0C4B /* 844_BackspaceStringCompare.cpp */; };
		50136A392423C5C800CF0C4B /* populatingNextRightPointersInEachNode.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367E82423C5C600CF0C4B /* populatingNextRightPointersInEachNode.II.cpp */; };
		50136A3A2423C5C800CF0C4B /* populatingNextRightPointersInEachNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367E92423C5C600CF0C4B /* populatingNextRightPointersInEachNode.cpp */; };
		50136A3B2423C5C800CF0C4B /* PartitionEqualSubsetSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367EB2423C5C600CF0C4B /* PartitionEqualSubsetSum.cpp */; };
		50136A3C2423C5C800CF0C4B /* rotateList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367ED2423C5C600CF0C4B /* rotateList.cpp */; };
		50136A3D2423C5C800CF0C4B /* HappyNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367EF2423C5C600CF0C4B /* HappyNumber.cpp */; };
		50136A3E2423C5C800CF0C4B /* MaximumProductOfWordLengths.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367F12423C5C600CF0C4B /* MaximumProductOfWordLengths.cpp */; };
		50136A3F2423C5C800CF0C4B /* copyListWithRandomPointer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367F32423C5C600CF0C4B /* copyListWithRandomPointer.cpp */; };
		50136A402423C5C800CF0C4B /* DifferentWaysToAddParentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367F52423C5C600CF0C4B /* DifferentWaysToAddParentheses.cpp */; };
		50136A412423C5C800CF0C4B /* 300_longestIncreasingSubsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367F62423C5C600CF0C4B /* 300_longestIncreasingSubsequence.cpp */; };
		50136A422423C5C800CF0C4B /* insertionSortList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367F82423C5C600CF0C4B /* insertionSortList.cpp */; };
		50136A432423C5C800CF0C4B /* IsomorphicStrings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367FA2423C5C600CF0C4B /* IsomorphicStrings.cpp */; };
		50136A442423C5C800CF0C4B /* searchInsertPosition.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367FC2423C5C600CF0C4B /* searchInsertPosition.cpp */; };
		50136A452423C5C800CF0C4B /* FindTheDifference.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501367FE2423C5C600CF0C4B /* FindTheDifference.cpp */; };
		50136A462423C5C800CF0C4B /* IntegerReplacement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368002423C5C600CF0C4B /* IntegerReplacement.cpp */; };
		50136A472423C5C800CF0C4B /* 415_AddStrings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368012423C5C600CF0C4B /* 415_AddStrings.cpp */; };
		50136A482423C5C800CF0C4B /* 199_binaryTreeRightSideView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368022423C5C600CF0C4B /* 199_binaryTreeRightSideView.cpp */; };
		50136A492423C5C800CF0C4B /* 343_IntegerBreak.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368032423C5C600CF0C4B /* 343_IntegerBreak.cpp */; };
		50136A4A2423C5C800CF0C4B /* 90_subsets.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368042423C5C600CF0C4B /* 90_subsets.II.cpp */; };
		50136A4B2423C5C800CF0C4B /* RotateFunction.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368062423C5C600CF0C4B /* RotateFunction.cpp */; };
		50136A4C2423C5C800CF0C4B /* divideTwoInt.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368082423C5C600CF0C4B /* divideTwoInt.cpp */; };
		50136A4D2423C5C800CF0C4B /* ShuffleAnArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013680A2423C5C600CF0C4B /* ShuffleAnArray.cpp */; };
		50136A4E2423C5C800CF0C4B /* maximumProductSubarray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013680C2423C5C600CF0C4B /* maximumProductSubarray.cpp */; };
		50136A4F2423C5C800CF0C4B /* 377_CombinationSumIV.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013680D2423C5C600CF0C4B /* 377_CombinationSumIV.cpp */; };
		50136A502423C5C800CF0C4B /* 258_addDigits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013680E2423C5C600CF0C4B /* 258_addDigits.cpp */; };
		50136A512423C5C800CF0C4B /* findMinimumInRotatedSortedArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368102423C5C600CF0C4B /* findMinimumInRotatedSortedArray.cpp */; };
		50136A522423C5C800CF0C4B /* findMinimumInRotatedSortedArray.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368112423C5C600CF0C4B /* findMinimumInRotatedSortedArray.II.cpp */; };
		50136A532423C5C800CF0C4B /* 319_bulbSwitcher.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368122423C5C600CF0C4B /* 319_bulbSwitcher.cpp */; };
		50136A542423C5C800CF0C4B /* GameOfLife.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368142423C5C600CF0C4B /* GameOfLife.cpp */; };
		50136A552423C5C800CF0C4B /* 14_longestCommonPrefix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368152423C5C600CF0C4B /* 14_longestCommonPrefix.cpp */; };
		50136A562423C5C800CF0C4B /* RemoveInvalidParentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368172423C5C600CF0C4B /* RemoveInvalidParentheses.cpp */; };
		50136A572423C5C800CF0C4B /* rotateArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368192423C5C600CF0C4B /* rotateArray.cpp */; };
		50136A582423C5C800CF0C4B /* ImplementStackUsingQueues.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013681B2423C5C600CF0C4B /* ImplementStackUsingQueues.cpp */; };
		50136A592423C5C800CF0C4B /* SplitArrayLargestSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013681D2423C5C600CF0C4B /* SplitArrayLargestSum.cpp */; };
		50136A5A2423C5C800CF0C4B /* sudokuSolver.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013681F2423C5C600CF0C4B /* sudokuSolver.cpp */; };
		50136A5B2423C5C800CF0C4B /* IntegerToEnglishWords.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368212423C5C600CF0C4B /* IntegerToEnglishWords.cpp */; };
		50136A5C2423C5C800CF0C4B /* setMatrixZeroes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368232423C5C600CF0C4B /* setMatrixZeroes.cpp */; };
		50136A5D2423C5C800CF0C4B /* majorityElement.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368252423C5C600CF0C4B /* majorityElement.II.cpp */; };
		50136A5E2423C5C800CF0C4B /* majorityElement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368262423C5C600CF0C4B /* majorityElement.cpp */; };
		50136A5F2423C5C800CF0C4B /* SuperUglyNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368282423C5C600CF0C4B /* SuperUglyNumber.cpp */; };
		50136A602423C5C800CF0C4B /* partitionList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013682A2423C5C600CF0C4B /* partitionList.cpp */; };
		50136A612423C5C800CF0C4B /* permutationSequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013682C2423C5C600CF0C4B /* permutationSequence.cpp */; };
		50136A622423C5C800CF0C4B /* 7_reverseInteger.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013682D2423C5C600CF0C4B /* 7_reverseInteger.cpp */; };
		50136A632423C5C800CF0C4B /* strStr.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013682F2423C5C600CF0C4B /* strStr.cpp */; };
		50136A642423C5C800CF0C4B /* wordBreak.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368312423C5C600CF0C4B /* wordBreak.cpp */; };
		50136A652423C5C800CF0C4B /* wordBreak.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368322423C5C600CF0C4B /* wordBreak.II.cpp */; };
		50136A662423C5C800CF0C4B /* largestRectangleInHistogram.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368342423C5C600CF0C4B /* largestRectangleInHistogram.cpp */; };
		50136A672423C5C800CF0C4B /* 216_combinationSum.III.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368352423C5C600CF0C4B /* 216_combinationSum.III.cpp */; };
		50136A682423C5C800CF0C4B /* PatchingArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368372423C5C600CF0C4B /* PatchingArray.cpp */; };
		50136A692423C5C800CF0C4B /* DistributeCoinsInBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368392423C5C600CF0C4B /* DistributeCoinsInBinaryTree.cpp */; };
		50136A6A2423C5C800CF0C4B /* LongestIncreasingPathInAMatrix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013683B2423C5C600CF0C4B /* LongestIncreasingPathInAMatrix.cpp */; };
		50136A6B2423C5C800CF0C4B /* 103_binaryTreeZigzagLevelOrderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013683C2423C5C600CF0C4B /* 103_binaryTreeZigzagLevelOrderTraversal.cpp */; };
		50136A6C2423C5C800CF0C4B /* maxPointsOnALine.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013683E2423C5C600CF0C4B /* maxPointsOnALine.cpp */; };
		50136A6D2423C5C800CF0C4B /* wordLadder.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368402423C5C600CF0C4B /* wordLadder.II.cpp */; };
		50136A6E2423C5C800CF0C4B /* wordLadder.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368412423C5C600CF0C4B /* wordLadder.cpp */; };
		50136A6F2423C5C800CF0C4B /* scrambleString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368432423C5C600CF0C4B /* scrambleString.cpp */; };
		50136A702423C5C800CF0C4B /* LongestSubstringWithAtLeastKRepeatingCharacters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368452423C5C600CF0C4B /* LongestSubstringWithAtLeastKRepeatingCharacters.cpp */; };
		50136A712423C5C800CF0C4B /* MaxAreaOfIsland.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368472423C5C600CF0C4B /* MaxAreaOfIsland.cpp */; };
		50136A722423C5C800CF0C4B /* NumberOfDigitOne.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368492423C5C600CF0C4B /* NumberOfDigitOne.cpp */; };
		50136A732423C5C800CF0C4B /* 917_reverseOnlyLetters.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013684A2423C5C600CF0C4B /* 917_reverseOnlyLetters.cpp */; };
		50136A742423C5C800CF0C4B /* excelSheetColumnNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013684C2423C5C600CF0C4B /* excelSheetColumnNumber.cpp */; };
		50136A752423C5C800CF0C4B /* 274_h-Index.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013684D2423C5C600CF0C4B /* 274_h-Index.cpp */; };
		50136A762423C5C800CF0C4B /* MissingNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013684F2423C5C600CF0C4B /* MissingNumber.cpp */; };
		50136A772423C5C800CF0C4B /* LRUCache.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368512423C5C600CF0C4B /* LRUCache.cpp */; };
		50136A782423C5C800CF0C4B /* 242_ValidAnagram.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368522423C5C600CF0C4B /* 242_ValidAnagram.cpp */; };
		50136A792423C5C800CF0C4B /* FriendCircles.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368542423C5C600CF0C4B /* FriendCircles.cpp */; };
		50136A7A2423C5C800CF0C4B /* oneEditDistance.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368562423C5C600CF0C4B /* oneEditDistance.cpp */; };
		50136A7B2423C5C800CF0C4B /* KthSmallestElementInABst.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368582423C5C600CF0C4B /* KthSmallestElementInABst.cpp */; };
		50136A7C2423C5C800CF0C4B /* UglyNumber.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013685A2423C5C600CF0C4B /* UglyNumber.II.cpp */; };
		50136A7D2423C5C800CF0C4B /* UglyNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013685B2423C5C600CF0C4B /* UglyNumber.cpp */; };
		50136A7E2423C5C800CF0C4B /* spiralMatrix.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013685D2423C5C600CF0C4B /* spiralMatrix.II.cpp */; };
		50136A7F2423C5C800CF0C4B /* spiralMatrix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013685E2423C5C600CF0C4B /* spiralMatrix.cpp */; };
		50136A802423C5C800CF0C4B /* 217_ContainsDuplicate.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013685F2423C5C600CF0C4B /* 217_ContainsDuplicate.cpp */; };
		50136A812423C5C800CF0C4B /* 67_addBinary.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368602423C5C600CF0C4B /* 67_addBinary.cpp */; };
		50136A822423C5C800CF0C4B /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368632423C5C600CF0C4B /* main.cpp */; };
		50136A832423C5C800CF0C4B /* sentenceScreenFitting.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368642423C5C600CF0C4B /* sentenceScreenFitting.cpp */; };
		50136A842423C5C800CF0C4B /* QueueReconstructionByHeight.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368662423C5C600CF0C4B /* QueueReconstructionByHeight.cpp */; };
		50136A852423C5C800CF0C4B /* wiggleSubsequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368682423C5C600CF0C4B /* wiggleSubsequence.cpp */; };
		50136A862423C5C800CF0C4B /* RangeSumQuery2dImmutable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013686A2423C5C600CF0C4B /* RangeSumQuery2dImmutable.cpp */; };
		50136A872423C5C800CF0C4B /* CountPrimes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013686C2423C5C600CF0C4B /* CountPrimes.cpp */; };
		50136A882423C5C800CF0C4B /* CreateMaximumNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013686E2423C5C600CF0C4B /* CreateMaximumNumber.cpp */; };
		50136A892423C5C800CF0C4B /* WordPattern.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368702423C5C600CF0C4B /* WordPattern.cpp */; };
		50136A8A2423C5C800CF0C4B /* 198_houseRobber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368712423C5C600CF0C4B /* 198_houseRobber.cpp */; };
		50136A8B2423C5C800CF0C4B /* longestValidParentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368732423C5C600CF0C4B /* longestValidParentheses.cpp */; };
		50136A8C2423C5C800CF0C4B /* LinkedListRandomNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368752423C5C600CF0C4B /* LinkedListRandomNode.cpp */; };
		50136A8D2423C5C800CF0C4B /* symmetricTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368772423C5C600CF0C4B /* symmetricTree.cpp */; };
		50136A8E2423C5C800CF0C4B /* 209_bullsAndCows.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368782423C5C600CF0C4B /* 209_bullsAndCows.cpp */; };
		50136A8F2423C5C800CF0C4B /* plusOne.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013687A2423C5C600CF0C4B /* plusOne.cpp */; };
		50136A902423C5C800CF0C4B /* 1227_numberOfEquivalentDominoPairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013687B2423C5C600CF0C4B /* 1227_numberOfEquivalentDominoPairs.cpp */; };
		50136A912423C5C800CF0C4B /* 94_binaryTreeInorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013687C2423C5C600CF0C4B /* 94_binaryTreeInorderTraversal.cpp */; };
		50136A922423C5C800CF0C4B /* maximumSubArray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013687E2423C5C600CF0C4B /* maximumSubArray.cpp */; };
		50136A932423C5C800CF0C4B /* 804_UniqueMorseCodeWords.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013687F2423C5C600CF0C4B /* 804_UniqueMorseCodeWords.cpp */; };
		50136A942423C5C800CF0C4B /* intersectionOfTwoLinkedLists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368812423C5C600CF0C4B /* intersectionOfTwoLinkedLists.cpp */; };
		50136A952423C5C800CF0C4B /* 16_3SumClosest.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368822423C5C600CF0C4B /* 16_3SumClosest.cpp */; };
		50136A962423C5C800CF0C4B /* FirstUniqueCharacterInAString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368842423C5C600CF0C4B /* FirstUniqueCharacterInAString.cpp */; };
		50136A972423C5C800CF0C4B /* 19_removeNthNodeFromEndOfList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368852423C5C600CF0C4B /* 19_removeNthNodeFromEndOfList.cpp */; };
		50136A982423C5C800CF0C4B /* minimumDepthOfBinaryTree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368872423C5C700CF0C4B /* minimumDepthOfBinaryTree.cpp */; };
		50136A992423C5C800CF0C4B /* palindromePartitioning.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368892423C5C700CF0C4B /* palindromePartitioning.II.cpp */; };
		50136A9A2423C5C800CF0C4B /* palindromePartitioning.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013688A2423C5C700CF0C4B /* palindromePartitioning.cpp */; };
		50136A9B2423C5C800CF0C4B /* reverseNodesInKGroup.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013688C2423C5C700CF0C4B /* reverseNodesInKGroup.cpp */; };
		50136A9C2423C5C800CF0C4B /* RandomPickIndex.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013688E2423C5C700CF0C4B /* RandomPickIndex.cpp */; };
		50136A9D2423C5C800CF0C4B /* 744_findSmallestLetterGreaterThanTarget.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013688F2423C5C700CF0C4B /* 744_findSmallestLetterGreaterThanTarget.cpp */; };
		50136A9E2423C5C800CF0C4B /* 771_JewelsAndStones.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368902423C5C700CF0C4B /* 771_JewelsAndStones.cpp */; };
		50136A9F2423C5C800CF0C4B /* nQueuens.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368922423C5C700CF0C4B /* nQueuens.II.cpp */; };
		50136AA02423C5C800CF0C4B /* nQueuens.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368932423C5C700CF0C4B /* nQueuens.cpp */; };
		50136AA12423C5C800CF0C4B /* largestNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368952423C5C700CF0C4B /* largestNumber.cpp */; };
		50136AA22423C5C800CF0C4B /* SortArrayByParity.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368972423C5C700CF0C4B /* SortArrayByParity.II.cpp */; };
		50136AA32423C5C800CF0C4B /* SortArrayByParity.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368982423C5C700CF0C4B /* SortArrayByParity.cpp */; };
		50136AA42423C5C800CF0C4B /* PalindromeLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013689A2423C5C700CF0C4B /* PalindromeLinkedList.cpp */; };
		50136AA52423C5C800CF0C4B /* readNCharactersGivenRead4.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013689C2423C5C700CF0C4B /* readNCharactersGivenRead4.cpp */; };
		50136AA62423C5C800CF0C4B /* readNCharactersGivenRead4.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013689D2423C5C700CF0C4B /* readNCharactersGivenRead4.II.cpp */; };
		50136AA72423C5C800CF0C4B /* Unique-Number-of-Occurrences.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 5013689F2423C5C700CF0C4B /* Unique-Number-of-Occurrences.cpp */; };
		50136AA82423C5C800CF0C4B /* 345_reverseVowelsOfAString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368A02423C5C700CF0C4B /* 345_reverseVowelsOfAString.cpp */; };
		50136AA92423C5C800CF0C4B /* SumOfTwoIntegers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368A22423C5C700CF0C4B /* SumOfTwoIntegers.cpp */; };
		50136AAA2423C5C800CF0C4B /* 309_BestTimeToBuyAndSellStockWithCooldown.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368A32423C5C700CF0C4B /* 309_BestTimeToBuyAndSellStockWithCooldown.cpp */; };
		50136AAB2423C5C800CF0C4B /* 22_generateParentheses.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368A42423C5C700CF0C4B /* 22_generateParentheses.cpp */; };
		50136AAC2423C5C800CF0C4B /* intersectionOfTwoArraysII.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368A62423C5C700CF0C4B /* intersectionOfTwoArraysII.cpp */; };
		50136AAD2423C5C800CF0C4B /* intersectionOfTwoArrays.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368A72423C5C700CF0C4B /* intersectionOfTwoArrays.cpp */; };
		50136AAE2423C5C800CF0C4B /* 145_binaryTreePostorderTraversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368A82423C5C700CF0C4B /* 145_binaryTreePostorderTraversal.cpp */; };
		50136AAF2423C5C800CF0C4B /* RemoveLinkedListElements.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368AA2423C5C700CF0C4B /* RemoveLinkedListElements.cpp */; };
		50136AB02423C5C800CF0C4B /* CountingBits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368AC2423C5C700CF0C4B /* CountingBits.cpp */; };
		50136AB12423C5C800CF0C4B /* 257_binaryTreePaths.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368AD2423C5C700CF0C4B /* 257_binaryTreePaths.cpp */; };
		50136AB22423C5C800CF0C4B /* 344_reverseString.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368AE2423C5C700CF0C4B /* 344_reverseString.cpp */; };
		50136AB32423C5C800CF0C4B /* EvaluateDivision.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368B02423C5C700CF0C4B /* EvaluateDivision.cpp */; };
		50136AB42423C5C800CF0C4B /* 10_regularExpressionMatching.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368B12423C5C700CF0C4B /* 10_regularExpressionMatching.cpp */; };
		50136AB52423C5C800CF0C4B /* FizzBuzz.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368B32423C5C700CF0C4B /* FizzBuzz.cpp */; };
		50136AB62423C5C800CF0C4B /* 214_ShortestPalindrome.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368B42423C5C700CF0C4B /* 214_ShortestPalindrome.cpp */; };
		50136AB72423C5C800CF0C4B /* 170_twoSum.III.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368B52423C5C700CF0C4B /* 170_twoSum.III.cpp */; };
		50136AB82423C5C800CF0C4B /* PalindromePairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368B72423C5C700CF0C4B /* PalindromePairs.cpp */; };
		50136AB92423C5C800CF0C4B /* 124_binaryTreeMaximumPathSum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368B82423C5C700CF0C4B /* 124_binaryTreeMaximumPathSum.cpp */; };
		50136ABA2423C5C800CF0C4B /* 231_powerOfTwo.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368B92423C5C700CF0C4B /* 231_powerOfTwo.cpp */; };
		50136ABB2423C5C800CF0C4B /* rotateImage.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368BB2423C5C700CF0C4B /* rotateImage.cpp */; };
		50136ABC2423C5C800CF0C4B /* fractionToRecurringDecimal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368BD2423C5C700CF0C4B /* fractionToRecurringDecimal.cpp */; };
		50136ABD2423C5C800CF0C4B /* OddEvenLinkedList.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368BF2423C5C700CF0C4B /* OddEvenLinkedList.cpp */; };
		50136ABE2423C5C800CF0C4B /* ThirdMaximumNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368C12423C5C700CF0C4B /* ThirdMaximumNumber.cpp */; };
		50136ABF2423C5C800CF0C4B /* 721_AccountsMerge.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368C22423C5C700CF0C4B /* 721_AccountsMerge.cpp */; };
		50136AC02423C5C800CF0C4B /* 405_ConvertANumberToHexadecimal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368C32423C5C700CF0C4B /* 405_ConvertANumberToHexadecimal.cpp */; };
		50136AC12423C5C800CF0C4B /* decodeWays.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368C52423C5C700CF0C4B /* decodeWays.cpp */; };
		50136AC22423C5C800CF0C4B /* Find-All-Anagrams-in-a-String.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368C72423C5C700CF0C4B /* Find-All-Anagrams-in-a-String.cpp */; };
		50136AC32423C5C800CF0C4B /* 55_jumpGame.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368C82423C5C700CF0C4B /* 55_jumpGame.cpp */; };
		50136AC42423C5C800CF0C4B /* 45_jumpGame.II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368C92423C5C700CF0C4B /* 45_jumpGame.II.cpp */; };
		50136AC52423C5C800CF0C4B /* VideoStitching.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368CB2423C5C700CF0C4B /* VideoStitching.cpp */; };
		50136AC62423C5C800CF0C4B /* 9_palindromeNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368CC2423C5C700CF0C4B /* 9_palindromeNumber.cpp */; };
		50136AC72423C5C800CF0C4B /* 三色旗问题.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368CE2423C5C700CF0C4B /* 三色旗问题.cpp */; };
		50136AC82423C5C800CF0C4B /* 字符串分割.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368CF2423C5C700CF0C4B /* 字符串分割.cpp */; };
		50136AC92423C5C800CF0C4B /* 排序算法.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368D02423C5C700CF0C4B /* 排序算法.cpp */; };
		50136ACA2423C5C800CF0C4B /* 单例模式_静态局部对象.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368D12423C5C700CF0C4B /* 单例模式_静态局部对象.cpp */; };
		50136ACB2423C5C800CF0C4B /* min(K).cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368D32423C5C700CF0C4B /* min(K).cpp */; };
		50136ACC2423C5C800CF0C4B /* 最长公共子串.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368D42423C5C700CF0C4B /* 最长公共子串.cpp */; };
		50136ACD2423C5C800CF0C4B /* strcmp.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368D52423C5C700CF0C4B /* strcmp.cpp */; };
		50136ACE2423C5C800CF0C4B /* 合并两个有序链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368D62423C5C700CF0C4B /* 合并两个有序链表.cpp */; };
		50136ACF2423C5C800CF0C4B /* 二叉树的遍历（递归，非递归）.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368D72423C5C700CF0C4B /* 二叉树的遍历（递归，非递归）.cpp */; };
		50136AD02423C5C800CF0C4B /* 汽车工厂模式.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368D82423C5C700CF0C4B /* 汽车工厂模式.cpp */; };
		50136AD12423C5C800CF0C4B /* 最长回文子序列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368D92423C5C700CF0C4B /* 最长回文子序列.cpp */; };
		50136AD22423C5C800CF0C4B /* 字符匹配.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368DA2423C5C700CF0C4B /* 字符匹配.cpp */; };
		50136AD32423C5C800CF0C4B /* Move.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368DB2423C5C700CF0C4B /* Move.cpp */; };
		50136AD42423C5C800CF0C4B /* 最长公共子序列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368DC2423C5C700CF0C4B /* 最长公共子序列.cpp */; };
		50136AD52423C5C800CF0C4B /* 大整数乘法(使用加法实现).cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368DD2423C5C700CF0C4B /* 大整数乘法(使用加法实现).cpp */; };
		50136AD62423C5C900CF0C4B /* 重建二叉树.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368DE2423C5C700CF0C4B /* 重建二叉树.cpp */; };
		50136AD72423C5C900CF0C4B /* 二叉树高度.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368DF2423C5C700CF0C4B /* 二叉树高度.cpp */; };
		50136AD82423C5C900CF0C4B /* 送货ABCD.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368E02423C5C700CF0C4B /* 送货ABCD.cpp */; };
		50136AD92423C5C900CF0C4B /* 两个stack实现queue.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368E12423C5C700CF0C4B /* 两个stack实现queue.cpp */; };
		50136ADA2423C5C900CF0C4B /* i++重载运算符.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368E22423C5C700CF0C4B /* i++重载运算符.cpp */; };
		50136ADB2423C5C900CF0C4B /* 最大子数组和.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368E32423C5C700CF0C4B /* 最大子数组和.cpp */; };
		50136ADC2423C5C900CF0C4B /* 反转链表.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368E42423C5C700CF0C4B /* 反转链表.cpp */; };
		50136ADD2423C5C900CF0C4B /* 二叉树最远节点的距离.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368E52423C5C700CF0C4B /* 二叉树最远节点的距离.cpp */; };
		50136ADE2423C5C900CF0C4B /* 最长回文子串.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368E62423C5C700CF0C4B /* 最长回文子串.cpp */; };
		50136ADF2423C5C900CF0C4B /* 414_thirdMaximumNumber.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368EA2423C5C700CF0C4B /* 414_thirdMaximumNumber.cpp */; };
		50136AE02423C5C900CF0C4B /* 214_shortestPalindrome.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368EF2423C5C700CF0C4B /* 214_shortestPalindrome.cpp */; };
		50136AE12423C5C900CF0C4B /* 小易的字典.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368F12423C5C700CF0C4B /* 小易的字典.cpp */; };
		50136AE22423C5C900CF0C4B /* 比特币最佳买卖时机.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 501368F22423C5C700CF0C4B /* 比特币最佳买卖时机.cpp */; };
		50136AEA2423C5FA00CF0C4B /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50136AE92423C5FA00CF0C4B /* main.cpp */; };
		50136B0D2423C7D600CF0C4B /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50136B0C2423C7D600CF0C4B /* main.cpp */; };
		50136B112423C82600CF0C4B /* lower_bound.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50136AF62423C70700CF0C4B /* lower_bound.cpp */; };
		50136B162423C97B00CF0C4B /* 最长上升子序列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50136B142423C95400CF0C4B /* 最长上升子序列.cpp */; };
		50136B3124249BFD00CF0C4B /* 1_1设计一个有GetMin功能的栈.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50136B3024249BFD00CF0C4B /* 1_1设计一个有GetMin功能的栈.cpp */; };
		50136B3324249C2500CF0C4B /* 1_2两个栈组成队列.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50136B3224249C2500CF0C4B /* 1_2两个栈组成队列.cpp */; };
		50136B3524249D1A00CF0C4B /* 1_7生成窗口最大值数组.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50136B3424249D1A00CF0C4B /* 1_7生成窗口最大值数组.cpp */; };
		50136B372424A5FD00CF0C4B /* 1_9最大子矩阵的大小.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50136B362424A5FD00CF0C4B /* 1_9最大子矩阵的大小.cpp */; };
		50136B392424E44F00CF0C4B /* O(n)中位数.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 50136B382424E44F00CF0C4B /* O(n)中位数.cpp */; };
		502EB2562425008C00684D42 /* 一行代码求解最大公约数.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 502EB2552425008C00684D42 /* 一行代码求解最大公约数.cpp */; };
		506F374F242DD09D00C0DD7E /* 10_4变态跳楼梯.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 506F374E242DD09D00C0DD7E /* 10_4变态跳楼梯.cpp */; };
		506F375C242E378B00C0DD7E /* 68_二叉树的最近公共祖先.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 506F375B242E378B00C0DD7E /* 68_二叉树的最近公共祖先.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		501365FB2423C4EA00CF0C4B /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
		50136AE52423C5FA00CF0C4B /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
		50136B082423C7D600CF0C4B /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		50089F4024489063006F7D92 /* 腾讯笔试题N(sum).cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "腾讯笔试题N(sum).cpp"; sourceTree = "<group>"; };
		50089F41244890D3006F7D92 /* MyString.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = MyString.h; sourceTree = "<group>"; };
		501365FD2423C4EA00CF0C4B /* C++Learning */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = "C++Learning"; sourceTree = BUILT_PRODUCTS_DIR; };
		501366082423C5C500CF0C4B /* Bus.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Bus.cpp; sourceTree = "<group>"; };
		501366092423C5C500CF0C4B /* DecodeNumber2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DecodeNumber2.cpp; sourceTree = "<group>"; };
		5013660A2423C5C500CF0C4B /* Egg.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Egg.cpp; sourceTree = "<group>"; };
		5013660B2423C5C500CF0C4B /* VectorOddEven.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = VectorOddEven.cpp; sourceTree = "<group>"; };
		5013660C2423C5C500CF0C4B /* Jinzhi.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Jinzhi.cpp; sourceTree = "<group>"; };
		5013660D2423C5C500CF0C4B /* GoodNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = GoodNumber.cpp; sourceTree = "<group>"; };
		5013660E2423C5C500CF0C4B /* SumArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SumArray.cpp; sourceTree = "<group>"; };
		5013660F2423C5C500CF0C4B /* OrderPair.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = OrderPair.cpp; sourceTree = "<group>"; };
		501366102423C5C500CF0C4B /* MinKSet.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinKSet.cpp; sourceTree = "<group>"; };
		501366112423C5C500CF0C4B /* PickRepre.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PickRepre.cpp; sourceTree = "<group>"; };
		501366122423C5C500CF0C4B /* StrMaze.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = StrMaze.cpp; sourceTree = "<group>"; };
		501366132423C5C500CF0C4B /* DecodeNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DecodeNumber.cpp; sourceTree = "<group>"; };
		501366142423C5C500CF0C4B /* 5_数对.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "5_数对.cpp"; sourceTree = "<group>"; };
		501366152423C5C500CF0C4B /* Latex.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Latex.cpp; sourceTree = "<group>"; };
		501366162423C5C500CF0C4B /* NumberOfOne.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = NumberOfOne.cpp; sourceTree = "<group>"; };
		501366172423C5C500CF0C4B /* ABCstr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ABCstr.cpp; sourceTree = "<group>"; };
		501366182423C5C500CF0C4B /* PalStr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PalStr.cpp; sourceTree = "<group>"; };
		501366192423C5C500CF0C4B /* sukudo.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = sukudo.cpp; sourceTree = "<group>"; };
		5013661A2423C5C500CF0C4B /* BitCoinBuy.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = BitCoinBuy.cpp; sourceTree = "<group>"; };
		5013661B2423C5C500CF0C4B /* LinkedList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LinkedList.cpp; sourceTree = "<group>"; };
		5013661C2423C5C500CF0C4B /* ReverseStr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ReverseStr.cpp; sourceTree = "<group>"; };
		5013661D2423C5C500CF0C4B /* IncludeStr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = IncludeStr.cpp; sourceTree = "<group>"; };
		5013661E2423C5C500CF0C4B /* DayOfYear.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DayOfYear.cpp; sourceTree = "<group>"; };
		5013661F2423C5C500CF0C4B /* ThirdNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ThirdNumber.cpp; sourceTree = "<group>"; };
		501366202423C5C500CF0C4B /* AddSub.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = AddSub.cpp; sourceTree = "<group>"; };
		501366212423C5C500CF0C4B /* Block.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Block.cpp; sourceTree = "<group>"; };
		501366222423C5C500CF0C4B /* Find.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Find.cpp; sourceTree = "<group>"; };
		501366232423C5C500CF0C4B /* CatFood.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CatFood.cpp; sourceTree = "<group>"; };
		501366242423C5C500CF0C4B /* LIS.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LIS.cpp; sourceTree = "<group>"; };
		501366252423C5C500CF0C4B /* ListCombi.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ListCombi.cpp; sourceTree = "<group>"; };
		501366262423C5C500CF0C4B /* AssestPackage.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = AssestPackage.cpp; sourceTree = "<group>"; };
		501366272423C5C500CF0C4B /* Clock.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Clock.cpp; sourceTree = "<group>"; };
		501366282423C5C500CF0C4B /* 3_安置路灯.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "3_安置路灯.cpp"; sourceTree = "<group>"; };
		501366292423C5C500CF0C4B /* 4_迷路的牛牛.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "4_迷路的牛牛.cpp"; sourceTree = "<group>"; };
		5013662A2423C5C500CF0C4B /* OrderArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = OrderArray.cpp; sourceTree = "<group>"; };
		5013662B2423C5C500CF0C4B /* MinStore.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinStore.cpp; sourceTree = "<group>"; };
		5013662C2423C5C500CF0C4B /* 1_twoSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 1_twoSum.cpp; sourceTree = "<group>"; };
		5013662D2423C5C500CF0C4B /* LeftStr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LeftStr.cpp; sourceTree = "<group>"; };
		5013662F2423C5C500CF0C4B /* PrimeD.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PrimeD.cpp; sourceTree = "<group>"; };
		501366302423C5C500CF0C4B /* SubString.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SubString.cpp; sourceTree = "<group>"; };
		501366312423C5C500CF0C4B /* Brackets.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Brackets.cpp; sourceTree = "<group>"; };
		501366322423C5C500CF0C4B /* MagicDepth.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MagicDepth.cpp; sourceTree = "<group>"; };
		501366332423C5C500CF0C4B /* LIS2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LIS2.cpp; sourceTree = "<group>"; };
		501366342423C5C500CF0C4B /* Poster.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Poster.cpp; sourceTree = "<group>"; };
		501366352423C5C500CF0C4B /* ArrayJump.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ArrayJump.cpp; sourceTree = "<group>"; };
		501366362423C5C500CF0C4B /* StairsClimb.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = StairsClimb.cpp; sourceTree = "<group>"; };
		501366372423C5C500CF0C4B /* 1_牛牛找工作.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1_牛牛找工作.cpp"; sourceTree = "<group>"; };
		501366382423C5C500CF0C4B /* Prime.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = Prime.c; sourceTree = "<group>"; };
		501366392423C5C500CF0C4B /* test1.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = test1.cpp; sourceTree = "<group>"; };
		5013663A2423C5C500CF0C4B /* SortOne.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SortOne.cpp; sourceTree = "<group>"; };
		5013663B2423C5C500CF0C4B /* 2_被3整除.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "2_被3整除.cpp"; sourceTree = "<group>"; };
		5013663C2423C5C500CF0C4B /* BubbleSort.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = BubbleSort.cpp; sourceTree = "<group>"; };
		5013663D2423C5C500CF0C4B /* PalStr2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PalStr2.cpp; sourceTree = "<group>"; };
		5013663E2423C5C500CF0C4B /* BucketSort.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = BucketSort.cpp; sourceTree = "<group>"; };
		5013663F2423C5C500CF0C4B /* DayBetweenYear.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DayBetweenYear.cpp; sourceTree = "<group>"; };
		501366412423C5C500CF0C4B /* UniString.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = UniString.cpp; sourceTree = "<group>"; };
		501366422423C5C500CF0C4B /* Boat.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Boat.cpp; sourceTree = "<group>"; };
		501366432423C5C500CF0C4B /* OrderStr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = OrderStr.cpp; sourceTree = "<group>"; };
		501366442423C5C500CF0C4B /* StrMutiply.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = StrMutiply.cpp; sourceTree = "<group>"; };
		501366452423C5C500CF0C4B /* Card.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Card.cpp; sourceTree = "<group>"; };
		501366472423C5C500CF0C4B /* MinSqr3.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinSqr3.cpp; sourceTree = "<group>"; };
		501366482423C5C500CF0C4B /* MajorityArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MajorityArray.cpp; sourceTree = "<group>"; };
		501366492423C5C500CF0C4B /* Divide.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Divide.cpp; sourceTree = "<group>"; };
		5013664A2423C5C500CF0C4B /* iplusplusi.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = iplusplusi.cpp; sourceTree = "<group>"; };
		5013664B2423C5C500CF0C4B /* PhtotoY.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PhtotoY.cpp; sourceTree = "<group>"; };
		5013664C2423C5C500CF0C4B /* AddNo.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = AddNo.cpp; sourceTree = "<group>"; };
		5013664D2423C5C500CF0C4B /* Candy.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Candy.cpp; sourceTree = "<group>"; };
		5013664E2423C5C500CF0C4B /* matrix.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = matrix.c; sourceTree = "<group>"; };
		5013664F2423C5C500CF0C4B /* StrAdd.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = StrAdd.cpp; sourceTree = "<group>"; };
		501366512423C5C500CF0C4B /* GoodNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = GoodNumber.cpp; sourceTree = "<group>"; };
		501366522423C5C500CF0C4B /* SumArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SumArray.cpp; sourceTree = "<group>"; };
		501366532423C5C500CF0C4B /* Latex.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Latex.cpp; sourceTree = "<group>"; };
		501366542423C5C500CF0C4B /* ABCstr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ABCstr.cpp; sourceTree = "<group>"; };
		501366552423C5C500CF0C4B /* PalStr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PalStr.cpp; sourceTree = "<group>"; };
		501366562423C5C500CF0C4B /* sukudo.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = sukudo.cpp; sourceTree = "<group>"; };
		501366572423C5C500CF0C4B /* BitCoinBuy.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = BitCoinBuy.cpp; sourceTree = "<group>"; };
		501366582423C5C500CF0C4B /* IncludeStr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = IncludeStr.cpp; sourceTree = "<group>"; };
		501366592423C5C500CF0C4B /* DayOfYear.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DayOfYear.cpp; sourceTree = "<group>"; };
		5013665A2423C5C500CF0C4B /* AddSub.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = AddSub.cpp; sourceTree = "<group>"; };
		5013665B2423C5C500CF0C4B /* Block.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Block.cpp; sourceTree = "<group>"; };
		5013665C2423C5C500CF0C4B /* CatFood.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CatFood.cpp; sourceTree = "<group>"; };
		5013665D2423C5C500CF0C4B /* LIS.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LIS.cpp; sourceTree = "<group>"; };
		5013665E2423C5C500CF0C4B /* OrderArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = OrderArray.cpp; sourceTree = "<group>"; };
		5013665F2423C5C500CF0C4B /* MinStore.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinStore.cpp; sourceTree = "<group>"; };
		501366612423C5C500CF0C4B /* MagicDepth.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MagicDepth.cpp; sourceTree = "<group>"; };
		501366622423C5C500CF0C4B /* Prime.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = Prime.c; sourceTree = "<group>"; };
		501366632423C5C500CF0C4B /* PalStr2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PalStr2.cpp; sourceTree = "<group>"; };
		501366642423C5C500CF0C4B /* BucketSort.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = BucketSort.cpp; sourceTree = "<group>"; };
		501366662423C5C500CF0C4B /* UniString.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = UniString.cpp; sourceTree = "<group>"; };
		501366672423C5C500CF0C4B /* OrderStr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = OrderStr.cpp; sourceTree = "<group>"; };
		501366692423C5C500CF0C4B /* Divide.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Divide.cpp; sourceTree = "<group>"; };
		5013666C2423C5C500CF0C4B /* 518_CoinChange2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 518_CoinChange2.cpp; sourceTree = "<group>"; };
		5013666D2423C5C500CF0C4B /* 342_PowerOfFour.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 342_PowerOfFour.cpp; sourceTree = "<group>"; };
		5013666F2423C5C500CF0C4B /* countOfSmallerNumbersAfterSelf.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = countOfSmallerNumbersAfterSelf.cpp; sourceTree = "<group>"; };
		501366712423C5C500CF0C4B /* RectangleArea.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RectangleArea.cpp; sourceTree = "<group>"; };
		501366732423C5C500CF0C4B /* MaximalSquare.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MaximalSquare.cpp; sourceTree = "<group>"; };
		501366752423C5C500CF0C4B /* TimeBasedKeyValueStore.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = TimeBasedKeyValueStore.cpp; sourceTree = "<group>"; };
		501366772423C5C500CF0C4B /* CousinsInBinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CousinsInBinaryTree.cpp; sourceTree = "<group>"; };
		501366782423C5C500CF0C4B /* 2_addTwoNumbers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 2_addTwoNumbers.cpp; sourceTree = "<group>"; };
		501366792423C5C500CF0C4B /* 211_AddAndSearchWord.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 211_AddAndSearchWord.cpp; sourceTree = "<group>"; };
		5013667A2423C5C500CF0C4B /* 557_reverseWordsInAStringIii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 557_reverseWordsInAStringIii.cpp; sourceTree = "<group>"; };
		5013667C2423C5C500CF0C4B /* removeDuplicatesFromSortedList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = removeDuplicatesFromSortedList.cpp; sourceTree = "<group>"; };
		5013667D2423C5C500CF0C4B /* removeDuplicatesFromSortedList.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = removeDuplicatesFromSortedList.II.cpp; sourceTree = "<group>"; };
		5013667F2423C5C500CF0C4B /* searchForRange.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = searchForRange.cpp; sourceTree = "<group>"; };
		501366812423C5C500CF0C4B /* removeElement.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = removeElement.cpp; sourceTree = "<group>"; };
		501366832423C5C500CF0C4B /* FirstBadVersion.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FirstBadVersion.cpp; sourceTree = "<group>"; };
		501366852423C5C500CF0C4B /* convertSortedListToBinarySearchTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = convertSortedListToBinarySearchTree.cpp; sourceTree = "<group>"; };
		501366882423C5C500CF0C4B /* SmallestStringStartingFromLeaf.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SmallestStringStartingFromLeaf.cpp; sourceTree = "<group>"; };
		501366892423C5C500CF0C4B /* 47_permutations.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 47_permutations.II.cpp; sourceTree = "<group>"; };
		5013668A2423C5C500CF0C4B /* 46_permutations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 46_permutations.cpp; sourceTree = "<group>"; };
		5013668C2423C5C500CF0C4B /* excelSheetColumnTitle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = excelSheetColumnTitle.cpp; sourceTree = "<group>"; };
		5013668E2423C5C500CF0C4B /* MostCommonWord.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MostCommonWord.cpp; sourceTree = "<group>"; };
		501366902423C5C500CF0C4B /* largestPerimeterTriangle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = largestPerimeterTriangle.cpp; sourceTree = "<group>"; };
		501366912423C5C500CF0C4B /* 49_GroupAnagrams.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 49_GroupAnagrams.cpp; sourceTree = "<group>"; };
		501366922423C5C500CF0C4B /* 991_BrokenCalculator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 991_BrokenCalculator.cpp; sourceTree = "<group>"; };
		501366942423C5C500CF0C4B /* PalindromicSubstrings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PalindromicSubstrings.cpp; sourceTree = "<group>"; };
		501366962423C5C500CF0C4B /* pathSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = pathSum.cpp; sourceTree = "<group>"; };
		501366972423C5C600CF0C4B /* pathSum.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = pathSum.II.cpp; sourceTree = "<group>"; };
		501366992423C5C600CF0C4B /* PeekingIterator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PeekingIterator.cpp; sourceTree = "<group>"; };
		5013669B2423C5C600CF0C4B /* SerializeAndDeserializeBinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SerializeAndDeserializeBinaryTree.cpp; sourceTree = "<group>"; };
		5013669D2423C5C600CF0C4B /* repeatedDNASequences.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = repeatedDNASequences.cpp; sourceTree = "<group>"; };
		5013669E2423C5C600CF0C4B /* 106_ConstructBinaryTreeFromInorderAndPostorderTraversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 106_ConstructBinaryTreeFromInorderAndPostorderTraversal.cpp; sourceTree = "<group>"; };
		5013669F2423C5C600CF0C4B /* 122_bestTimeToBuyAndSellStock.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 122_bestTimeToBuyAndSellStock.II.cpp; sourceTree = "<group>"; };
		501366A12423C5C600CF0C4B /* grayCode.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = grayCode.cpp; sourceTree = "<group>"; };
		501366A32423C5C600CF0C4B /* mergeIntervals.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = mergeIntervals.cpp; sourceTree = "<group>"; };
		501366A52423C5C600CF0C4B /* restoreIPAddresses.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = restoreIPAddresses.cpp; sourceTree = "<group>"; };
		501366A62423C5C600CF0C4B /* 173_binarySearchTreeIterator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 173_binarySearchTreeIterator.cpp; sourceTree = "<group>"; };
		501366A82423C5C600CF0C4B /* validPalindrome.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = validPalindrome.cpp; sourceTree = "<group>"; };
		501366AA2423C5C600CF0C4B /* SlidingWindowMaximum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SlidingWindowMaximum.cpp; sourceTree = "<group>"; };
		501366AC2423C5C600CF0C4B /* textJustification.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = textJustification.cpp; sourceTree = "<group>"; };
		501366AD2423C5C600CF0C4B /* 77_Combinations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 77_Combinations.cpp; sourceTree = "<group>"; };
		501366AF2423C5C600CF0C4B /* PerfectSquares.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PerfectSquares.cpp; sourceTree = "<group>"; };
		501366B12423C5C600CF0C4B /* LongestTurbulentSubarray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LongestTurbulentSubarray.cpp; sourceTree = "<group>"; };
		501366B32423C5C600CF0C4B /* maximalRectangle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = maximalRectangle.cpp; sourceTree = "<group>"; };
		501366B52423C5C600CF0C4B /* IntervalListIntersections.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = IntervalListIntersections.cpp; sourceTree = "<group>"; };
		501366B72423C5C600CF0C4B /* ImplementTriePrefixTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ImplementTriePrefixTree.cpp; sourceTree = "<group>"; };
		501366B92423C5C600CF0C4B /* StringWithoutAAAOrBBB.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = StringWithoutAAAOrBBB.cpp; sourceTree = "<group>"; };
		501366BA2423C5C600CF0C4B /* 23_mergeKSortedLists.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 23_mergeKSortedLists.cpp; sourceTree = "<group>"; };
		501366BC2423C5C600CF0C4B /* surroundedRegions.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = surroundedRegions.cpp; sourceTree = "<group>"; };
		501366BE2423C5C600CF0C4B /* ProductOfArrayExceptSelf.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ProductOfArrayExceptSelf.cpp; sourceTree = "<group>"; };
		501366C02423C5C600CF0C4B /* DecodeString.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DecodeString.cpp; sourceTree = "<group>"; };
		501366C22423C5C600CF0C4B /* VerifyPreorderSerializationOfABinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = VerifyPreorderSerializationOfABinaryTree.cpp; sourceTree = "<group>"; };
		501366C42423C5C600CF0C4B /* wordSearch.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = wordSearch.cpp; sourceTree = "<group>"; };
		501366C52423C5C600CF0C4B /* wordSearch.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = wordSearch.II.cpp; sourceTree = "<group>"; };
		501366C72423C5C600CF0C4B /* InsertDeleteGetrandomO1.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = InsertDeleteGetrandomO1.cpp; sourceTree = "<group>"; };
		501366C82423C5C600CF0C4B /* InsertDeleteGetrandomO1DuplicatesAllowed.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = InsertDeleteGetrandomO1DuplicatesAllowed.cpp; sourceTree = "<group>"; };
		501366CA2423C5C600CF0C4B /* longestSubstringWithAtMostTwoDistinctCharacters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = longestSubstringWithAtMostTwoDistinctCharacters.cpp; sourceTree = "<group>"; };
		501366CC2423C5C600CF0C4B /* totalHammingDistance.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = totalHammingDistance.cpp; sourceTree = "<group>"; };
		501366CE2423C5C600CF0C4B /* minimumWindowSubstring.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = minimumWindowSubstring.cpp; sourceTree = "<group>"; };
		501366D02423C5C600CF0C4B /* sumRootToLeafNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = sumRootToLeafNumber.cpp; sourceTree = "<group>"; };
		501366D12423C5C600CF0C4B /* 1108_defangingAnIpAddress.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 1108_defangingAnIpAddress.cpp; sourceTree = "<group>"; };
		501366D32423C5C600CF0C4B /* LowestCommonAncestorOfABinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LowestCommonAncestorOfABinaryTree.cpp; sourceTree = "<group>"; };
		501366D52423C5C600CF0C4B /* interleavingString.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = interleavingString.cpp; sourceTree = "<group>"; };
		501366D62423C5C600CF0C4B /* 5_longestPalindromicSubstring.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 5_longestPalindromicSubstring.cpp; sourceTree = "<group>"; };
		501366D82423C5C600CF0C4B /* LongestAbsoluteFilePath.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LongestAbsoluteFilePath.cpp; sourceTree = "<group>"; };
		501366D92423C5C600CF0C4B /* 43_multiplyStrings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 43_multiplyStrings.cpp; sourceTree = "<group>"; };
		501366DA2423C5C600CF0C4B /* 135_candy.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 135_candy.cpp; sourceTree = "<group>"; };
		501366DB2423C5C600CF0C4B /* 260_singleNumberIii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 260_singleNumberIii.cpp; sourceTree = "<group>"; };
		501366DD2423C5C600CF0C4B /* validSudoku.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = validSudoku.cpp; sourceTree = "<group>"; };
		501366DE2423C5C600CF0C4B /* 18_4Sum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 18_4Sum.cpp; sourceTree = "<group>"; };
		501366E02423C5C600CF0C4B /* 219_ContainsDuplicate.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 219_ContainsDuplicate.II.cpp; sourceTree = "<group>"; };
		501366E22423C5C600CF0C4B /* RansomNote.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RansomNote.cpp; sourceTree = "<group>"; };
		501366E32423C5C600CF0C4B /* 174_dungeonGame.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 174_dungeonGame.cpp; sourceTree = "<group>"; };
		501366E52423C5C600CF0C4B /* validNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = validNumber.cpp; sourceTree = "<group>"; };
		501366E72423C5C600CF0C4B /* CountOfRangeSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CountOfRangeSum.cpp; sourceTree = "<group>"; };
		501366E82423C5C600CF0C4B /* 201_BitwiseAndOfNumbersRange.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 201_BitwiseAndOfNumbersRange.cpp; sourceTree = "<group>"; };
		501366EA2423C5C600CF0C4B /* PerfectRectangle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PerfectRectangle.cpp; sourceTree = "<group>"; };
		501366EB2423C5C600CF0C4B /* 78_subsets.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 78_subsets.cpp; sourceTree = "<group>"; };
		501366ED2423C5C600CF0C4B /* evaluateReversePolishNotation.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = evaluateReversePolishNotation.cpp; sourceTree = "<group>"; };
		501366EF2423C5C600CF0C4B /* gasStation.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = gasStation.cpp; sourceTree = "<group>"; };
		501366F02423C5C600CF0C4B /* 213_houseRobber.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 213_houseRobber.II.cpp; sourceTree = "<group>"; };
		501366F22423C5C600CF0C4B /* NumberOfIslands.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = NumberOfIslands.cpp; sourceTree = "<group>"; };
		501366F42423C5C600CF0C4B /* MinimumSizeSubarraySum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumSizeSubarraySum.cpp; sourceTree = "<group>"; };
		501366F62423C5C600CF0C4B /* FindMedianFromDataStream.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FindMedianFromDataStream.cpp; sourceTree = "<group>"; };
		501366F82423C5C600CF0C4B /* distinctSubsequences.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = distinctSubsequences.cpp; sourceTree = "<group>"; };
		501366FA2423C5C600CF0C4B /* reorderList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = reorderList.cpp; sourceTree = "<group>"; };
		501366FC2423C5C600CF0C4B /* missingRanges.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = missingRanges.cpp; sourceTree = "<group>"; };
		501366FD2423C5C600CF0C4B /* 441_arrangingCoins.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 441_arrangingCoins.cpp; sourceTree = "<group>"; };
		501366FF2423C5C600CF0C4B /* InvertBinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = InvertBinaryTree.cpp; sourceTree = "<group>"; };
		501367012423C5C600CF0C4B /* linkedListCycle.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = linkedListCycle.II.cpp; sourceTree = "<group>"; };
		501367022423C5C600CF0C4B /* linkedListCycle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = linkedListCycle.cpp; sourceTree = "<group>"; };
		501367042423C5C600CF0C4B /* validateBinarySearchTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = validateBinarySearchTree.cpp; sourceTree = "<group>"; };
		501367052423C5C600CF0C4B /* 42_trappingRainWater.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 42_trappingRainWater.cpp; sourceTree = "<group>"; };
		501367062423C5C600CF0C4B /* 11_containerWithMostWater.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 11_containerWithMostWater.cpp; sourceTree = "<group>"; };
		501367082423C5C600CF0C4B /* MinimumCostForTickets.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumCostForTickets.cpp; sourceTree = "<group>"; };
		501367092423C5C600CF0C4B /* 102_binaryTreeLevelOrderTraversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 102_binaryTreeLevelOrderTraversal.cpp; sourceTree = "<group>"; };
		5013670B2423C5C600CF0C4B /* factorialTrailingZeroes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = factorialTrailingZeroes.cpp; sourceTree = "<group>"; };
		5013670C2423C5C600CF0C4B /* 509_fibonacciNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 509_fibonacciNumber.cpp; sourceTree = "<group>"; };
		5013670D2423C5C600CF0C4B /* 714_BestTimeToBuyAndSellStockWithTransactionFee.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 714_BestTimeToBuyAndSellStockWithTransactionFee.cpp; sourceTree = "<group>"; };
		5013670F2423C5C600CF0C4B /* reverseLinkedList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = reverseLinkedList.cpp; sourceTree = "<group>"; };
		501367102423C5C600CF0C4B /* reverseLinkedList.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = reverseLinkedList.II.cpp; sourceTree = "<group>"; };
		501367122423C5C600CF0C4B /* numberOf1Bits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = numberOf1Bits.cpp; sourceTree = "<group>"; };
		501367142423C5C600CF0C4B /* SumOfLeftLeaves.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SumOfLeftLeaves.cpp; sourceTree = "<group>"; };
		501367152423C5C600CF0C4B /* 227_BasicCalculator.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 227_BasicCalculator.II.cpp; sourceTree = "<group>"; };
		501367172423C5C600CF0C4B /* TheSkylineProblem.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = TheSkylineProblem.cpp; sourceTree = "<group>"; };
		501367182423C5C600CF0C4B /* 165_compareVersionNumbers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 165_compareVersionNumbers.cpp; sourceTree = "<group>"; };
		5013671A2423C5C600CF0C4B /* search2DMatrix.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = search2DMatrix.II.cpp; sourceTree = "<group>"; };
		5013671B2423C5C600CF0C4B /* search2DMatrix.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = search2DMatrix.cpp; sourceTree = "<group>"; };
		5013671D2423C5C600CF0C4B /* MiniParser.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MiniParser.cpp; sourceTree = "<group>"; };
		5013671F2423C5C600CF0C4B /* convertSortedArrayToBinarySearchTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = convertSortedArrayToBinarySearchTree.cpp; sourceTree = "<group>"; };
		501367202423C5C600CF0C4B /* 220_ContainsDuplicate.III.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 220_ContainsDuplicate.III.cpp; sourceTree = "<group>"; };
		501367212423C5C600CF0C4B /* 123_bestTimeToBuyAndSellStock.III.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 123_bestTimeToBuyAndSellStock.III.cpp; sourceTree = "<group>"; };
		501367232423C5C600CF0C4B /* SatisfiabilityOfEqualityEquations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SatisfiabilityOfEqualityEquations.cpp; sourceTree = "<group>"; };
		501367252423C5C600CF0C4B /* topKFrequentElements.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = topKFrequentElements.cpp; sourceTree = "<group>"; };
		501367272423C5C600CF0C4B /* sortList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = sortList.cpp; sourceTree = "<group>"; };
		501367292423C5C600CF0C4B /* SquaresOfASortedArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SquaresOfASortedArray.cpp; sourceTree = "<group>"; };
		5013672B2423C5C600CF0C4B /* 413_ArithmeticSlices.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 413_ArithmeticSlices.cpp; sourceTree = "<group>"; };
		5013672D2423C5C600CF0C4B /* moveZeroes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = moveZeroes.cpp; sourceTree = "<group>"; };
		5013672F2423C5C600CF0C4B /* findPeakElement.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = findPeakElement.cpp; sourceTree = "<group>"; };
		501367312423C5C600CF0C4B /* CountNumbersWithUniqueDigits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CountNumbersWithUniqueDigits.cpp; sourceTree = "<group>"; };
		501367322423C5C600CF0C4B /* 306_AdditiveNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 306_AdditiveNumber.cpp; sourceTree = "<group>"; };
		501367342423C5C600CF0C4B /* minStack.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = minStack.cpp; sourceTree = "<group>"; };
		501367362423C5C600CF0C4B /* flattenBinaryTreeToLinkedList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = flattenBinaryTreeToLinkedList.cpp; sourceTree = "<group>"; };
		501367382423C5C600CF0C4B /* recoverATreeFromPreorderTraversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = recoverATreeFromPreorderTraversal.cpp; sourceTree = "<group>"; };
		5013673A2423C5C600CF0C4B /* nextPermutation.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = nextPermutation.cpp; sourceTree = "<group>"; };
		5013673D2423C5C600CF0C4B /* RangeSumQueryMutable.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RangeSumQueryMutable.cpp; sourceTree = "<group>"; };
		5013673E2423C5C600CF0C4B /* rangeSumQuery-Immutable.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "rangeSumQuery-Immutable.cpp"; sourceTree = "<group>"; };
		5013673F2423C5C600CF0C4B /* 44_wildcardMatching.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 44_wildcardMatching.cpp; sourceTree = "<group>"; };
		501367402423C5C600CF0C4B /* 326_PowerOfThree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 326_PowerOfThree.cpp; sourceTree = "<group>"; };
		501367412423C5C600CF0C4B /* 322_CoinChange.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 322_CoinChange.cpp; sourceTree = "<group>"; };
		501367422423C5C600CF0C4B /* 6_zigZagConversion.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 6_zigZagConversion.cpp; sourceTree = "<group>"; };
		501367432423C5C600CF0C4B /* 121_bestTimeToBuyAndSellStock.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 121_bestTimeToBuyAndSellStock.cpp; sourceTree = "<group>"; };
		501367442423C5C600CF0C4B /* 39_combinationSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 39_combinationSum.cpp; sourceTree = "<group>"; };
		501367462423C5C600CF0C4B /* N-Repeated-Element-in-Size-2N-Array.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "N-Repeated-Element-in-Size-2N-Array.cpp"; sourceTree = "<group>"; };
		501367482423C5C600CF0C4B /* pascalTriangle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = pascalTriangle.cpp; sourceTree = "<group>"; };
		501367492423C5C600CF0C4B /* pascalTriangle.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = pascalTriangle.II.cpp; sourceTree = "<group>"; };
		5013674B2423C5C600CF0C4B /* EliminationGame.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = EliminationGame.cpp; sourceTree = "<group>"; };
		5013674D2423C5C600CF0C4B /* IsSubsequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = IsSubsequence.cpp; sourceTree = "<group>"; };
		5013674F2423C5C600CF0C4B /* uniqueBinarySearchTrees.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = uniqueBinarySearchTrees.II.cpp; sourceTree = "<group>"; };
		501367502423C5C600CF0C4B /* uniqueBinarySearchTrees.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = uniqueBinarySearchTrees.cpp; sourceTree = "<group>"; };
		501367512423C5C600CF0C4B /* 13_romanToInteger.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 13_romanToInteger.cpp; sourceTree = "<group>"; };
		501367532423C5C600CF0C4B /* DeleteNodeInALinkedList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DeleteNodeInALinkedList.cpp; sourceTree = "<group>"; };
		501367552423C5C600CF0C4B /* triangle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = triangle.cpp; sourceTree = "<group>"; };
		501367572423C5C600CF0C4B /* longestConsecutiveSequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = longestConsecutiveSequence.cpp; sourceTree = "<group>"; };
		501367592423C5C600CF0C4B /* ExpressionAddOperators.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ExpressionAddOperators.cpp; sourceTree = "<group>"; };
		5013675A2423C5C600CF0C4B /* 167_twoSum.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 167_twoSum.II.cpp; sourceTree = "<group>"; };
		5013675C2423C5C600CF0C4B /* UTF8Validation.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = UTF8Validation.cpp; sourceTree = "<group>"; };
		5013675E2423C5C600CF0C4B /* countAndSay.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = countAndSay.cpp; sourceTree = "<group>"; };
		5013675F2423C5C600CF0C4B /* 4_medianOfTwoSortedArrays.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 4_medianOfTwoSortedArrays.cpp; sourceTree = "<group>"; };
		501367602423C5C600CF0C4B /* 136_singleNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 136_singleNumber.cpp; sourceTree = "<group>"; };
		501367622423C5C600CF0C4B /* sortColors.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = sortColors.cpp; sourceTree = "<group>"; };
		501367642423C5C600CF0C4B /* reverseBits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = reverseBits.cpp; sourceTree = "<group>"; };
		501367652423C5C600CF0C4B /* 17_letterCombinationsOfAPhoneNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 17_letterCombinationsOfAPhoneNumber.cpp; sourceTree = "<group>"; };
		501367672423C5C600CF0C4B /* FlattenNestedListIterator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FlattenNestedListIterator.cpp; sourceTree = "<group>"; };
		501367692423C5C600CF0C4B /* editDistance.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = editDistance.cpp; sourceTree = "<group>"; };
		5013676B2423C5C600CF0C4B /* MinimumAsciiDeleteSumForTwoStrings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumAsciiDeleteSumForTwoStrings.cpp; sourceTree = "<group>"; };
		5013676D2423C5C600CF0C4B /* sameTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = sameTree.cpp; sourceTree = "<group>"; };
		5013676F2423C5C600CF0C4B /* nimGame.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = nimGame.cpp; sourceTree = "<group>"; };
		501367712423C5C600CF0C4B /* maximumDepthOfBinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = maximumDepthOfBinaryTree.cpp; sourceTree = "<group>"; };
		501367722423C5C600CF0C4B /* 41_firstMissingPositive.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 41_firstMissingPositive.cpp; sourceTree = "<group>"; };
		501367732423C5C600CF0C4B /* 859_BuddyStrings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 859_BuddyStrings.cpp; sourceTree = "<group>"; };
		501367742423C5C600CF0C4B /* 1_twoSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 1_twoSum.cpp; sourceTree = "<group>"; };
		501367752423C5C600CF0C4B /* 3_longestSubstringWithoutRepeatingCharacters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 3_longestSubstringWithoutRepeatingCharacters.cpp; sourceTree = "<group>"; };
		501367762423C5C600CF0C4B /* 12_integerToRoman.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 12_integerToRoman.cpp; sourceTree = "<group>"; };
		501367782423C5C600CF0C4B /* CountCompleteTreeNodes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CountCompleteTreeNodes.cpp; sourceTree = "<group>"; };
		501367792423C5C600CF0C4B /* 520_detectCapital.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 520_detectCapital.cpp; sourceTree = "<group>"; };
		5013677A2423C5C600CF0C4B /* 1170_CompareStringsByFrequencyOfTheSmallestCharacter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 1170_CompareStringsByFrequencyOfTheSmallestCharacter.cpp; sourceTree = "<group>"; };
		5013677C2423C5C600CF0C4B /* TwoCityScheduling.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = TwoCityScheduling.cpp; sourceTree = "<group>"; };
		5013677E2423C5C600CF0C4B /* MaximumAverageSubarray.I.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MaximumAverageSubarray.I.cpp; sourceTree = "<group>"; };
		501367802423C5C600CF0C4B /* maximumGap.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = maximumGap.cpp; sourceTree = "<group>"; };
		501367822423C5C600CF0C4B /* IslandPerimeter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = IslandPerimeter.cpp; sourceTree = "<group>"; };
		501367832423C5C600CF0C4B /* 107_binaryTreeLevelOrderTraversal.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 107_binaryTreeLevelOrderTraversal.II.cpp; sourceTree = "<group>"; };
		501367842423C5C600CF0C4B /* 110_balancedBinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 110_balancedBinaryTree.cpp; sourceTree = "<group>"; };
		501367852423C5C600CF0C4B /* 224_BasicCalculator.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 224_BasicCalculator.cpp; sourceTree = "<group>"; };
		501367862423C5C600CF0C4B /* 15_3Sum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 15_3Sum.cpp; sourceTree = "<group>"; };
		501367872423C5C600CF0C4B /* 50_pow(x,n).cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "50_pow(x,n).cpp"; sourceTree = "<group>"; };
		501367882423C5C600CF0C4B /* 105_ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 105_ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp; sourceTree = "<group>"; };
		5013678A2423C5C600CF0C4B /* LowestCommonAncestorOfABinarySearchTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LowestCommonAncestorOfABinarySearchTree.cpp; sourceTree = "<group>"; };
		5013678C2423C5C600CF0C4B /* singleNumber.III.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = singleNumber.III.cpp; sourceTree = "<group>"; };
		5013678D2423C5C600CF0C4B /* singleNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = singleNumber.cpp; sourceTree = "<group>"; };
		5013678F2423C5C600CF0C4B /* WiggleSort.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = WiggleSort.II.cpp; sourceTree = "<group>"; };
		501367912423C5C600CF0C4B /* PeakIndexInAMountainArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PeakIndexInAMountainArray.cpp; sourceTree = "<group>"; };
		501367932423C5C600CF0C4B /* RemoveDuplicateLetters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveDuplicateLetters.cpp; sourceTree = "<group>"; };
		501367952423C5C600CF0C4B /* sqrt.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = sqrt.cpp; sourceTree = "<group>"; };
		501367972423C5C600CF0C4B /* simplifyPath.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = simplifyPath.cpp; sourceTree = "<group>"; };
		501367992423C5C600CF0C4B /* LexicographicalNumbers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LexicographicalNumbers.cpp; sourceTree = "<group>"; };
		5013679B2423C5C600CF0C4B /* substringWithConcatenationOfAllWords.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = substringWithConcatenationOfAllWords.cpp; sourceTree = "<group>"; };
		5013679D2423C5C600CF0C4B /* findTheDuplicateNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = findTheDuplicateNumber.cpp; sourceTree = "<group>"; };
		5013679E2423C5C600CF0C4B /* 24_swapNodesInPairs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 24_swapNodesInPairs.cpp; sourceTree = "<group>"; };
		501367A02423C5C600CF0C4B /* NthDigit.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = NthDigit.cpp; sourceTree = "<group>"; };
		501367A22423C5C600CF0C4B /* minimumPathSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = minimumPathSum.cpp; sourceTree = "<group>"; };
		501367A32423C5C600CF0C4B /* 40_combinationSum.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 40_combinationSum.II.cpp; sourceTree = "<group>"; };
		501367A52423C5C600CF0C4B /* lengthOfLastWord.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = lengthOfLastWord.cpp; sourceTree = "<group>"; };
		501367A62423C5C600CF0C4B /* 8_stringToIntegerAtoi.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 8_stringToIntegerAtoi.cpp; sourceTree = "<group>"; };
		501367A72423C5C600CF0C4B /* 70_climbStairs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 70_climbStairs.cpp; sourceTree = "<group>"; };
		501367A92423C5C600CF0C4B /* MinCostClimbingStairs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinCostClimbingStairs.cpp; sourceTree = "<group>"; };
		501367AB2423C5C600CF0C4B /* increasingTripletSubsequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = increasingTripletSubsequence.cpp; sourceTree = "<group>"; };
		501367AD2423C5C600CF0C4B /* FrogJump.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FrogJump.cpp; sourceTree = "<group>"; };
		501367AF2423C5C600CF0C4B /* searchInRotatedSortedArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = searchInRotatedSortedArray.cpp; sourceTree = "<group>"; };
		501367B02423C5C600CF0C4B /* searchInRotatedSortedArray.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = searchInRotatedSortedArray.II.cpp; sourceTree = "<group>"; };
		501367B12423C5C600CF0C4B /* 401_BinaryWatch.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 401_BinaryWatch.cpp; sourceTree = "<group>"; };
		501367B32423C5C600CF0C4B /* ImplementQueueUsingStacks.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ImplementQueueUsingStacks.cpp; sourceTree = "<group>"; };
		501367B52423C5C600CF0C4B /* RemoveKDigits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveKDigits.cpp; sourceTree = "<group>"; };
		501367B62423C5C600CF0C4B /* 156_binaryTreeUpsideDown.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 156_binaryTreeUpsideDown.cpp; sourceTree = "<group>"; };
		501367B72423C5C600CF0C4B /* 275_h-Index.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "275_h-Index.II.cpp"; sourceTree = "<group>"; };
		501367B82423C5C600CF0C4B /* 989_AddToArrayFormOfInteger.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 989_AddToArrayFormOfInteger.cpp; sourceTree = "<group>"; };
		501367B92423C5C600CF0C4B /* 1342_numberOfStepsToReduceANumberToZero.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 1342_numberOfStepsToReduceANumberToZero.cpp; sourceTree = "<group>"; };
		501367BB2423C5C600CF0C4B /* ReconstructItinerary.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ReconstructItinerary.cpp; sourceTree = "<group>"; };
		501367BC2423C5C600CF0C4B /* 188_bestTimeToBuyAndSellStock.IV.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 188_bestTimeToBuyAndSellStock.IV.cpp; sourceTree = "<group>"; };
		501367BE2423C5C600CF0C4B /* removeDuplicatesFromSortedArray.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = removeDuplicatesFromSortedArray.II.cpp; sourceTree = "<group>"; };
		501367BF2423C5C600CF0C4B /* removeDuplicatesFromSortedArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = removeDuplicatesFromSortedArray.cpp; sourceTree = "<group>"; };
		501367C12423C5C600CF0C4B /* MirrorReflection.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MirrorReflection.cpp; sourceTree = "<group>"; };
		501367C32423C5C600CF0C4B /* VerticalOrderTraversalOfABinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = VerticalOrderTraversalOfABinaryTree.cpp; sourceTree = "<group>"; };
		501367C42423C5C600CF0C4B /* 337_houseRobberIII.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 337_houseRobberIII.cpp; sourceTree = "<group>"; };
		501367C62423C5C600CF0C4B /* SumOfEvenNumbersAfterQueries.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SumOfEvenNumbersAfterQueries.cpp; sourceTree = "<group>"; };
		501367C82423C5C600CF0C4B /* recoverBinarySearchTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = recoverBinarySearchTree.cpp; sourceTree = "<group>"; };
		501367C92423C5C600CF0C4B /* 144_binaryTreePreorderTraversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 144_binaryTreePreorderTraversal.cpp; sourceTree = "<group>"; };
		501367CB2423C5C600CF0C4B /* LongestPalindrome.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LongestPalindrome.cpp; sourceTree = "<group>"; };
		501367CD2423C5C600CF0C4B /* insertInterval.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = insertInterval.cpp; sourceTree = "<group>"; };
		501367CF2423C5C600CF0C4B /* MinimumFallingPathSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumFallingPathSum.cpp; sourceTree = "<group>"; };
		501367D02423C5C600CF0C4B /* 133_cloneGraph.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 133_cloneGraph.cpp; sourceTree = "<group>"; };
		501367D22423C5C600CF0C4B /* mergeTwoSortedArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = mergeTwoSortedArray.cpp; sourceTree = "<group>"; };
		501367D42423C5C600CF0C4B /* CourseSchedule.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CourseSchedule.cpp; sourceTree = "<group>"; };
		501367D62423C5C600CF0C4B /* course_schedule.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = course_schedule.cpp; sourceTree = "<group>"; };
		501367D72423C5C600CF0C4B /* main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		501367D82423C5C600CF0C4B /* CourseSchedule.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CourseSchedule.II.cpp; sourceTree = "<group>"; };
		501367DA2423C5C600CF0C4B /* KthLargestElementInAnArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = KthLargestElementInAnArray.cpp; sourceTree = "<group>"; };
		501367DB2423C5C600CF0C4B /* 20_validParentheses.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 20_validParentheses.cpp; sourceTree = "<group>"; };
		501367DD2423C5C600CF0C4B /* UniquePaths.III.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = UniquePaths.III.cpp; sourceTree = "<group>"; };
		501367DE2423C5C600CF0C4B /* uniquePaths.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = uniquePaths.cpp; sourceTree = "<group>"; };
		501367DF2423C5C600CF0C4B /* uniquePaths.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = uniquePaths.II.cpp; sourceTree = "<group>"; };
		501367E12423C5C600CF0C4B /* MinimumHeightTrees.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MinimumHeightTrees.cpp; sourceTree = "<group>"; };
		501367E32423C5C600CF0C4B /* SummaryRanges.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SummaryRanges.cpp; sourceTree = "<group>"; };
		501367E42423C5C600CF0C4B /* 312_BurstBalloons.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 312_BurstBalloons.cpp; sourceTree = "<group>"; };
		501367E52423C5C600CF0C4B /* 21_mergeTwoSortedList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 21_mergeTwoSortedList.cpp; sourceTree = "<group>"; };
		501367E62423C5C600CF0C4B /* 844_BackspaceStringCompare.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 844_BackspaceStringCompare.cpp; sourceTree = "<group>"; };
		501367E82423C5C600CF0C4B /* populatingNextRightPointersInEachNode.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = populatingNextRightPointersInEachNode.II.cpp; sourceTree = "<group>"; };
		501367E92423C5C600CF0C4B /* populatingNextRightPointersInEachNode.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = populatingNextRightPointersInEachNode.cpp; sourceTree = "<group>"; };
		501367EB2423C5C600CF0C4B /* PartitionEqualSubsetSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PartitionEqualSubsetSum.cpp; sourceTree = "<group>"; };
		501367ED2423C5C600CF0C4B /* rotateList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = rotateList.cpp; sourceTree = "<group>"; };
		501367EF2423C5C600CF0C4B /* HappyNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = HappyNumber.cpp; sourceTree = "<group>"; };
		501367F12423C5C600CF0C4B /* MaximumProductOfWordLengths.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MaximumProductOfWordLengths.cpp; sourceTree = "<group>"; };
		501367F32423C5C600CF0C4B /* copyListWithRandomPointer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = copyListWithRandomPointer.cpp; sourceTree = "<group>"; };
		501367F52423C5C600CF0C4B /* DifferentWaysToAddParentheses.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DifferentWaysToAddParentheses.cpp; sourceTree = "<group>"; };
		501367F62423C5C600CF0C4B /* 300_longestIncreasingSubsequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 300_longestIncreasingSubsequence.cpp; sourceTree = "<group>"; };
		501367F82423C5C600CF0C4B /* insertionSortList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = insertionSortList.cpp; sourceTree = "<group>"; };
		501367FA2423C5C600CF0C4B /* IsomorphicStrings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = IsomorphicStrings.cpp; sourceTree = "<group>"; };
		501367FC2423C5C600CF0C4B /* searchInsertPosition.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = searchInsertPosition.cpp; sourceTree = "<group>"; };
		501367FE2423C5C600CF0C4B /* FindTheDifference.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FindTheDifference.cpp; sourceTree = "<group>"; };
		501368002423C5C600CF0C4B /* IntegerReplacement.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = IntegerReplacement.cpp; sourceTree = "<group>"; };
		501368012423C5C600CF0C4B /* 415_AddStrings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 415_AddStrings.cpp; sourceTree = "<group>"; };
		501368022423C5C600CF0C4B /* 199_binaryTreeRightSideView.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 199_binaryTreeRightSideView.cpp; sourceTree = "<group>"; };
		501368032423C5C600CF0C4B /* 343_IntegerBreak.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 343_IntegerBreak.cpp; sourceTree = "<group>"; };
		501368042423C5C600CF0C4B /* 90_subsets.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 90_subsets.II.cpp; sourceTree = "<group>"; };
		501368062423C5C600CF0C4B /* RotateFunction.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RotateFunction.cpp; sourceTree = "<group>"; };
		501368082423C5C600CF0C4B /* divideTwoInt.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = divideTwoInt.cpp; sourceTree = "<group>"; };
		5013680A2423C5C600CF0C4B /* ShuffleAnArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ShuffleAnArray.cpp; sourceTree = "<group>"; };
		5013680C2423C5C600CF0C4B /* maximumProductSubarray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = maximumProductSubarray.cpp; sourceTree = "<group>"; };
		5013680D2423C5C600CF0C4B /* 377_CombinationSumIV.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 377_CombinationSumIV.cpp; sourceTree = "<group>"; };
		5013680E2423C5C600CF0C4B /* 258_addDigits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 258_addDigits.cpp; sourceTree = "<group>"; };
		501368102423C5C600CF0C4B /* findMinimumInRotatedSortedArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = findMinimumInRotatedSortedArray.cpp; sourceTree = "<group>"; };
		501368112423C5C600CF0C4B /* findMinimumInRotatedSortedArray.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = findMinimumInRotatedSortedArray.II.cpp; sourceTree = "<group>"; };
		501368122423C5C600CF0C4B /* 319_bulbSwitcher.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 319_bulbSwitcher.cpp; sourceTree = "<group>"; };
		501368142423C5C600CF0C4B /* GameOfLife.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = GameOfLife.cpp; sourceTree = "<group>"; };
		501368152423C5C600CF0C4B /* 14_longestCommonPrefix.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 14_longestCommonPrefix.cpp; sourceTree = "<group>"; };
		501368172423C5C600CF0C4B /* RemoveInvalidParentheses.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveInvalidParentheses.cpp; sourceTree = "<group>"; };
		501368192423C5C600CF0C4B /* rotateArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = rotateArray.cpp; sourceTree = "<group>"; };
		5013681B2423C5C600CF0C4B /* ImplementStackUsingQueues.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ImplementStackUsingQueues.cpp; sourceTree = "<group>"; };
		5013681D2423C5C600CF0C4B /* SplitArrayLargestSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SplitArrayLargestSum.cpp; sourceTree = "<group>"; };
		5013681F2423C5C600CF0C4B /* sudokuSolver.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = sudokuSolver.cpp; sourceTree = "<group>"; };
		501368212423C5C600CF0C4B /* IntegerToEnglishWords.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = IntegerToEnglishWords.cpp; sourceTree = "<group>"; };
		501368232423C5C600CF0C4B /* setMatrixZeroes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = setMatrixZeroes.cpp; sourceTree = "<group>"; };
		501368252423C5C600CF0C4B /* majorityElement.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = majorityElement.II.cpp; sourceTree = "<group>"; };
		501368262423C5C600CF0C4B /* majorityElement.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = majorityElement.cpp; sourceTree = "<group>"; };
		501368282423C5C600CF0C4B /* SuperUglyNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SuperUglyNumber.cpp; sourceTree = "<group>"; };
		5013682A2423C5C600CF0C4B /* partitionList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = partitionList.cpp; sourceTree = "<group>"; };
		5013682C2423C5C600CF0C4B /* permutationSequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = permutationSequence.cpp; sourceTree = "<group>"; };
		5013682D2423C5C600CF0C4B /* 7_reverseInteger.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 7_reverseInteger.cpp; sourceTree = "<group>"; };
		5013682F2423C5C600CF0C4B /* strStr.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = strStr.cpp; sourceTree = "<group>"; };
		501368312423C5C600CF0C4B /* wordBreak.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = wordBreak.cpp; sourceTree = "<group>"; };
		501368322423C5C600CF0C4B /* wordBreak.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = wordBreak.II.cpp; sourceTree = "<group>"; };
		501368342423C5C600CF0C4B /* largestRectangleInHistogram.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = largestRectangleInHistogram.cpp; sourceTree = "<group>"; };
		501368352423C5C600CF0C4B /* 216_combinationSum.III.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 216_combinationSum.III.cpp; sourceTree = "<group>"; };
		501368372423C5C600CF0C4B /* PatchingArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PatchingArray.cpp; sourceTree = "<group>"; };
		501368392423C5C600CF0C4B /* DistributeCoinsInBinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DistributeCoinsInBinaryTree.cpp; sourceTree = "<group>"; };
		5013683B2423C5C600CF0C4B /* LongestIncreasingPathInAMatrix.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LongestIncreasingPathInAMatrix.cpp; sourceTree = "<group>"; };
		5013683C2423C5C600CF0C4B /* 103_binaryTreeZigzagLevelOrderTraversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 103_binaryTreeZigzagLevelOrderTraversal.cpp; sourceTree = "<group>"; };
		5013683E2423C5C600CF0C4B /* maxPointsOnALine.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = maxPointsOnALine.cpp; sourceTree = "<group>"; };
		501368402423C5C600CF0C4B /* wordLadder.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = wordLadder.II.cpp; sourceTree = "<group>"; };
		501368412423C5C600CF0C4B /* wordLadder.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = wordLadder.cpp; sourceTree = "<group>"; };
		501368432423C5C600CF0C4B /* scrambleString.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = scrambleString.cpp; sourceTree = "<group>"; };
		501368452423C5C600CF0C4B /* LongestSubstringWithAtLeastKRepeatingCharacters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LongestSubstringWithAtLeastKRepeatingCharacters.cpp; sourceTree = "<group>"; };
		501368472423C5C600CF0C4B /* MaxAreaOfIsland.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MaxAreaOfIsland.cpp; sourceTree = "<group>"; };
		501368492423C5C600CF0C4B /* NumberOfDigitOne.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = NumberOfDigitOne.cpp; sourceTree = "<group>"; };
		5013684A2423C5C600CF0C4B /* 917_reverseOnlyLetters.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 917_reverseOnlyLetters.cpp; sourceTree = "<group>"; };
		5013684C2423C5C600CF0C4B /* excelSheetColumnNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = excelSheetColumnNumber.cpp; sourceTree = "<group>"; };
		5013684D2423C5C600CF0C4B /* 274_h-Index.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "274_h-Index.cpp"; sourceTree = "<group>"; };
		5013684F2423C5C600CF0C4B /* MissingNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = MissingNumber.cpp; sourceTree = "<group>"; };
		501368512423C5C600CF0C4B /* LRUCache.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LRUCache.cpp; sourceTree = "<group>"; };
		501368522423C5C600CF0C4B /* 242_ValidAnagram.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 242_ValidAnagram.cpp; sourceTree = "<group>"; };
		501368542423C5C600CF0C4B /* FriendCircles.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FriendCircles.cpp; sourceTree = "<group>"; };
		501368562423C5C600CF0C4B /* oneEditDistance.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = oneEditDistance.cpp; sourceTree = "<group>"; };
		501368582423C5C600CF0C4B /* KthSmallestElementInABst.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = KthSmallestElementInABst.cpp; sourceTree = "<group>"; };
		5013685A2423C5C600CF0C4B /* UglyNumber.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = UglyNumber.II.cpp; sourceTree = "<group>"; };
		5013685B2423C5C600CF0C4B /* UglyNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = UglyNumber.cpp; sourceTree = "<group>"; };
		5013685D2423C5C600CF0C4B /* spiralMatrix.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = spiralMatrix.II.cpp; sourceTree = "<group>"; };
		5013685E2423C5C600CF0C4B /* spiralMatrix.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = spiralMatrix.cpp; sourceTree = "<group>"; };
		5013685F2423C5C600CF0C4B /* 217_ContainsDuplicate.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 217_ContainsDuplicate.cpp; sourceTree = "<group>"; };
		501368602423C5C600CF0C4B /* 67_addBinary.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 67_addBinary.cpp; sourceTree = "<group>"; };
		501368622423C5C600CF0C4B /* sentenceScreenFitting.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = sentenceScreenFitting.h; sourceTree = "<group>"; };
		501368632423C5C600CF0C4B /* main.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		501368642423C5C600CF0C4B /* sentenceScreenFitting.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = sentenceScreenFitting.cpp; sourceTree = "<group>"; };
		501368662423C5C600CF0C4B /* QueueReconstructionByHeight.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = QueueReconstructionByHeight.cpp; sourceTree = "<group>"; };
		501368682423C5C600CF0C4B /* wiggleSubsequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = wiggleSubsequence.cpp; sourceTree = "<group>"; };
		5013686A2423C5C600CF0C4B /* RangeSumQuery2dImmutable.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RangeSumQuery2dImmutable.cpp; sourceTree = "<group>"; };
		5013686C2423C5C600CF0C4B /* CountPrimes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CountPrimes.cpp; sourceTree = "<group>"; };
		5013686E2423C5C600CF0C4B /* CreateMaximumNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CreateMaximumNumber.cpp; sourceTree = "<group>"; };
		501368702423C5C600CF0C4B /* WordPattern.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = WordPattern.cpp; sourceTree = "<group>"; };
		501368712423C5C600CF0C4B /* 198_houseRobber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 198_houseRobber.cpp; sourceTree = "<group>"; };
		501368732423C5C600CF0C4B /* longestValidParentheses.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = longestValidParentheses.cpp; sourceTree = "<group>"; };
		501368752423C5C600CF0C4B /* LinkedListRandomNode.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = LinkedListRandomNode.cpp; sourceTree = "<group>"; };
		501368772423C5C600CF0C4B /* symmetricTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = symmetricTree.cpp; sourceTree = "<group>"; };
		501368782423C5C600CF0C4B /* 209_bullsAndCows.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 209_bullsAndCows.cpp; sourceTree = "<group>"; };
		5013687A2423C5C600CF0C4B /* plusOne.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = plusOne.cpp; sourceTree = "<group>"; };
		5013687B2423C5C600CF0C4B /* 1227_numberOfEquivalentDominoPairs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 1227_numberOfEquivalentDominoPairs.cpp; sourceTree = "<group>"; };
		5013687C2423C5C600CF0C4B /* 94_binaryTreeInorderTraversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 94_binaryTreeInorderTraversal.cpp; sourceTree = "<group>"; };
		5013687E2423C5C600CF0C4B /* maximumSubArray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = maximumSubArray.cpp; sourceTree = "<group>"; };
		5013687F2423C5C600CF0C4B /* 804_UniqueMorseCodeWords.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 804_UniqueMorseCodeWords.cpp; sourceTree = "<group>"; };
		501368812423C5C600CF0C4B /* intersectionOfTwoLinkedLists.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = intersectionOfTwoLinkedLists.cpp; sourceTree = "<group>"; };
		501368822423C5C600CF0C4B /* 16_3SumClosest.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 16_3SumClosest.cpp; sourceTree = "<group>"; };
		501368842423C5C600CF0C4B /* FirstUniqueCharacterInAString.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FirstUniqueCharacterInAString.cpp; sourceTree = "<group>"; };
		501368852423C5C600CF0C4B /* 19_removeNthNodeFromEndOfList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 19_removeNthNodeFromEndOfList.cpp; sourceTree = "<group>"; };
		501368872423C5C700CF0C4B /* minimumDepthOfBinaryTree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = minimumDepthOfBinaryTree.cpp; sourceTree = "<group>"; };
		501368892423C5C700CF0C4B /* palindromePartitioning.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = palindromePartitioning.II.cpp; sourceTree = "<group>"; };
		5013688A2423C5C700CF0C4B /* palindromePartitioning.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = palindromePartitioning.cpp; sourceTree = "<group>"; };
		5013688C2423C5C700CF0C4B /* reverseNodesInKGroup.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = reverseNodesInKGroup.cpp; sourceTree = "<group>"; };
		5013688E2423C5C700CF0C4B /* RandomPickIndex.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RandomPickIndex.cpp; sourceTree = "<group>"; };
		5013688F2423C5C700CF0C4B /* 744_findSmallestLetterGreaterThanTarget.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 744_findSmallestLetterGreaterThanTarget.cpp; sourceTree = "<group>"; };
		501368902423C5C700CF0C4B /* 771_JewelsAndStones.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 771_JewelsAndStones.cpp; sourceTree = "<group>"; };
		501368922423C5C700CF0C4B /* nQueuens.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = nQueuens.II.cpp; sourceTree = "<group>"; };
		501368932423C5C700CF0C4B /* nQueuens.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = nQueuens.cpp; sourceTree = "<group>"; };
		501368952423C5C700CF0C4B /* largestNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = largestNumber.cpp; sourceTree = "<group>"; };
		501368972423C5C700CF0C4B /* SortArrayByParity.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SortArrayByParity.II.cpp; sourceTree = "<group>"; };
		501368982423C5C700CF0C4B /* SortArrayByParity.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SortArrayByParity.cpp; sourceTree = "<group>"; };
		5013689A2423C5C700CF0C4B /* PalindromeLinkedList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PalindromeLinkedList.cpp; sourceTree = "<group>"; };
		5013689C2423C5C700CF0C4B /* readNCharactersGivenRead4.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = readNCharactersGivenRead4.cpp; sourceTree = "<group>"; };
		5013689D2423C5C700CF0C4B /* readNCharactersGivenRead4.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = readNCharactersGivenRead4.II.cpp; sourceTree = "<group>"; };
		5013689F2423C5C700CF0C4B /* Unique-Number-of-Occurrences.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "Unique-Number-of-Occurrences.cpp"; sourceTree = "<group>"; };
		501368A02423C5C700CF0C4B /* 345_reverseVowelsOfAString.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 345_reverseVowelsOfAString.cpp; sourceTree = "<group>"; };
		501368A22423C5C700CF0C4B /* SumOfTwoIntegers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = SumOfTwoIntegers.cpp; sourceTree = "<group>"; };
		501368A32423C5C700CF0C4B /* 309_BestTimeToBuyAndSellStockWithCooldown.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 309_BestTimeToBuyAndSellStockWithCooldown.cpp; sourceTree = "<group>"; };
		501368A42423C5C700CF0C4B /* 22_generateParentheses.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 22_generateParentheses.cpp; sourceTree = "<group>"; };
		501368A62423C5C700CF0C4B /* intersectionOfTwoArraysII.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = intersectionOfTwoArraysII.cpp; sourceTree = "<group>"; };
		501368A72423C5C700CF0C4B /* intersectionOfTwoArrays.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = intersectionOfTwoArrays.cpp; sourceTree = "<group>"; };
		501368A82423C5C700CF0C4B /* 145_binaryTreePostorderTraversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 145_binaryTreePostorderTraversal.cpp; sourceTree = "<group>"; };
		501368AA2423C5C700CF0C4B /* RemoveLinkedListElements.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = RemoveLinkedListElements.cpp; sourceTree = "<group>"; };
		501368AC2423C5C700CF0C4B /* CountingBits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CountingBits.cpp; sourceTree = "<group>"; };
		501368AD2423C5C700CF0C4B /* 257_binaryTreePaths.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 257_binaryTreePaths.cpp; sourceTree = "<group>"; };
		501368AE2423C5C700CF0C4B /* 344_reverseString.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 344_reverseString.cpp; sourceTree = "<group>"; };
		501368B02423C5C700CF0C4B /* EvaluateDivision.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = EvaluateDivision.cpp; sourceTree = "<group>"; };
		501368B12423C5C700CF0C4B /* 10_regularExpressionMatching.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 10_regularExpressionMatching.cpp; sourceTree = "<group>"; };
		501368B32423C5C700CF0C4B /* FizzBuzz.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FizzBuzz.cpp; sourceTree = "<group>"; };
		501368B42423C5C700CF0C4B /* 214_ShortestPalindrome.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 214_ShortestPalindrome.cpp; sourceTree = "<group>"; };
		501368B52423C5C700CF0C4B /* 170_twoSum.III.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 170_twoSum.III.cpp; sourceTree = "<group>"; };
		501368B72423C5C700CF0C4B /* PalindromePairs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PalindromePairs.cpp; sourceTree = "<group>"; };
		501368B82423C5C700CF0C4B /* 124_binaryTreeMaximumPathSum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 124_binaryTreeMaximumPathSum.cpp; sourceTree = "<group>"; };
		501368B92423C5C700CF0C4B /* 231_powerOfTwo.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 231_powerOfTwo.cpp; sourceTree = "<group>"; };
		501368BB2423C5C700CF0C4B /* rotateImage.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = rotateImage.cpp; sourceTree = "<group>"; };
		501368BD2423C5C700CF0C4B /* fractionToRecurringDecimal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = fractionToRecurringDecimal.cpp; sourceTree = "<group>"; };
		501368BF2423C5C700CF0C4B /* OddEvenLinkedList.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = OddEvenLinkedList.cpp; sourceTree = "<group>"; };
		501368C12423C5C700CF0C4B /* ThirdMaximumNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ThirdMaximumNumber.cpp; sourceTree = "<group>"; };
		501368C22423C5C700CF0C4B /* 721_AccountsMerge.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 721_AccountsMerge.cpp; sourceTree = "<group>"; };
		501368C32423C5C700CF0C4B /* 405_ConvertANumberToHexadecimal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 405_ConvertANumberToHexadecimal.cpp; sourceTree = "<group>"; };
		501368C52423C5C700CF0C4B /* decodeWays.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = decodeWays.cpp; sourceTree = "<group>"; };
		501368C72423C5C700CF0C4B /* Find-All-Anagrams-in-a-String.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "Find-All-Anagrams-in-a-String.cpp"; sourceTree = "<group>"; };
		501368C82423C5C700CF0C4B /* 55_jumpGame.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 55_jumpGame.cpp; sourceTree = "<group>"; };
		501368C92423C5C700CF0C4B /* 45_jumpGame.II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 45_jumpGame.II.cpp; sourceTree = "<group>"; };
		501368CB2423C5C700CF0C4B /* VideoStitching.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = VideoStitching.cpp; sourceTree = "<group>"; };
		501368CC2423C5C700CF0C4B /* 9_palindromeNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 9_palindromeNumber.cpp; sourceTree = "<group>"; };
		501368CE2423C5C700CF0C4B /* 三色旗问题.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "三色旗问题.cpp"; sourceTree = "<group>"; };
		501368CF2423C5C700CF0C4B /* 字符串分割.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "字符串分割.cpp"; sourceTree = "<group>"; };
		501368D02423C5C700CF0C4B /* 排序算法.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "排序算法.cpp"; sourceTree = "<group>"; };
		501368D12423C5C700CF0C4B /* 单例模式_静态局部对象.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "单例模式_静态局部对象.cpp"; sourceTree = "<group>"; };
		501368D32423C5C700CF0C4B /* min(K).cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "min(K).cpp"; sourceTree = "<group>"; };
		501368D42423C5C700CF0C4B /* 最长公共子串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "最长公共子串.cpp"; sourceTree = "<group>"; };
		501368D52423C5C700CF0C4B /* strcmp.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = strcmp.cpp; sourceTree = "<group>"; };
		501368D62423C5C700CF0C4B /* 合并两个有序链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "合并两个有序链表.cpp"; sourceTree = "<group>"; };
		501368D72423C5C700CF0C4B /* 二叉树的遍历（递归，非递归）.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "二叉树的遍历（递归，非递归）.cpp"; sourceTree = "<group>"; };
		501368D82423C5C700CF0C4B /* 汽车工厂模式.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "汽车工厂模式.cpp"; sourceTree = "<group>"; };
		501368D92423C5C700CF0C4B /* 最长回文子序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "最长回文子序列.cpp"; sourceTree = "<group>"; };
		501368DA2423C5C700CF0C4B /* 字符匹配.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "字符匹配.cpp"; sourceTree = "<group>"; };
		501368DB2423C5C700CF0C4B /* Move.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Move.cpp; sourceTree = "<group>"; };
		501368DC2423C5C700CF0C4B /* 最长公共子序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "最长公共子序列.cpp"; sourceTree = "<group>"; };
		501368DD2423C5C700CF0C4B /* 大整数乘法(使用加法实现).cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "大整数乘法(使用加法实现).cpp"; sourceTree = "<group>"; };
		501368DE2423C5C700CF0C4B /* 重建二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "重建二叉树.cpp"; sourceTree = "<group>"; };
		501368DF2423C5C700CF0C4B /* 二叉树高度.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "二叉树高度.cpp"; sourceTree = "<group>"; };
		501368E02423C5C700CF0C4B /* 送货ABCD.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "送货ABCD.cpp"; sourceTree = "<group>"; };
		501368E12423C5C700CF0C4B /* 两个stack实现queue.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "两个stack实现queue.cpp"; sourceTree = "<group>"; };
		501368E22423C5C700CF0C4B /* i++重载运算符.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "i++重载运算符.cpp"; sourceTree = "<group>"; };
		501368E32423C5C700CF0C4B /* 最大子数组和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "最大子数组和.cpp"; sourceTree = "<group>"; };
		501368E42423C5C700CF0C4B /* 反转链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "反转链表.cpp"; sourceTree = "<group>"; };
		501368E52423C5C700CF0C4B /* 二叉树最远节点的距离.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "二叉树最远节点的距离.cpp"; sourceTree = "<group>"; };
		501368E62423C5C700CF0C4B /* 最长回文子串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "最长回文子串.cpp"; sourceTree = "<group>"; };
		501368E82423C5C700CF0C4B /* comments.sh */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.script.sh; path = comments.sh; sourceTree = "<group>"; };
		501368EA2423C5C700CF0C4B /* 414_thirdMaximumNumber.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 414_thirdMaximumNumber.cpp; sourceTree = "<group>"; };
		501368EB2423C5C700CF0C4B /* README.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		501368ED2423C5C700CF0C4B /* query_problem.sh */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.script.sh; path = query_problem.sh; sourceTree = "<group>"; };
		501368EE2423C5C700CF0C4B /* readme.sh */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.script.sh; path = readme.sh; sourceTree = "<group>"; };
		501368EF2423C5C700CF0C4B /* 214_shortestPalindrome.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 214_shortestPalindrome.cpp; sourceTree = "<group>"; };
		501368F12423C5C700CF0C4B /* 小易的字典.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "小易的字典.cpp"; sourceTree = "<group>"; };
		501368F22423C5C700CF0C4B /* 比特币最佳买卖时机.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "比特币最佳买卖时机.cpp"; sourceTree = "<group>"; };
		50136AE72423C5FA00CF0C4B /* Tree */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Tree; sourceTree = BUILT_PRODUCTS_DIR; };
		50136AE92423C5FA00CF0C4B /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		50136AEE2423C61D00CF0C4B /* ExtremumGetter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ExtremumGetter.h; sourceTree = "<group>"; };
		50136AEF2423C61D00CF0C4B /* InfoH.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = InfoH.h; sourceTree = "<group>"; };
		50136AF02423C61D00CF0C4B /* TreePrinter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = TreePrinter.h; sourceTree = "<group>"; };
		50136AF12423C61D00CF0C4B /* PosSetter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = PosSetter.h; sourceTree = "<group>"; };
		50136AF22423C61D00CF0C4B /* bst.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = bst.h; sourceTree = "<group>"; };
		50136AF32423C61E00CF0C4B /* PosAdder.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = PosAdder.h; sourceTree = "<group>"; };
		50136AF42423C61E00CF0C4B /* VisualTree.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = VisualTree.h; sourceTree = "<group>"; };
		50136AF52423C70700CF0C4B /* Print.c */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.c; path = Print.c; sourceTree = "<group>"; };
		50136AF62423C70700CF0C4B /* lower_bound.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = lower_bound.cpp; sourceTree = "<group>"; };
		50136AF72423C70700CF0C4B /* CopyConstructor.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = CopyConstructor.cpp; sourceTree = "<group>"; };
		50136AF82423C70700CF0C4B /* ListNode.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ListNode.h; sourceTree = "<group>"; };
		50136AF92423C70700CF0C4B /* Fork.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Fork.cpp; sourceTree = "<group>"; };
		50136AFA2423C70700CF0C4B /* SizeOfObject.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = SizeOfObject.cpp; sourceTree = "<group>"; };
		50136AFB2423C70700CF0C4B /* TwoStackQueue.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = TwoStackQueue.cpp; sourceTree = "<group>"; };
		50136AFC2423C70700CF0C4B /* VirtualFunction.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = VirtualFunction.cpp; sourceTree = "<group>"; };
		50136AFD2423C70700CF0C4B /* qSort.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = qSort.cpp; sourceTree = "<group>"; };
		50136AFE2423C70800CF0C4B /* Pointer.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Pointer.cpp; sourceTree = "<group>"; };
		50136AFF2423C70800CF0C4B /* ReadWriteLock.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ReadWriteLock.cpp; sourceTree = "<group>"; };
		50136B002423C70800CF0C4B /* Huffman.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Huffman.cpp; sourceTree = "<group>"; };
		50136B022423C70800CF0C4B /* Str.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Str.cpp; sourceTree = "<group>"; };
		50136B032423C70800CF0C4B /* TreeNode.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = TreeNode.h; sourceTree = "<group>"; };
		50136B042423C70800CF0C4B /* BigSmall.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = BigSmall.cpp; sourceTree = "<group>"; };
		50136B0A2423C7D600CF0C4B /* Main */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Main; sourceTree = BUILT_PRODUCTS_DIR; };
		50136B0C2423C7D600CF0C4B /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		50136B142423C95400CF0C4B /* 最长上升子序列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "最长上升子序列.cpp"; sourceTree = "<group>"; };
		50136B2A2424767E00CF0C4B /* 并查集.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "并查集.cpp"; sourceTree = "<group>"; };
		50136B3024249BFD00CF0C4B /* 1_1设计一个有GetMin功能的栈.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1_1设计一个有GetMin功能的栈.cpp"; sourceTree = "<group>"; };
		50136B3224249C2500CF0C4B /* 1_2两个栈组成队列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1_2两个栈组成队列.cpp"; sourceTree = "<group>"; };
		50136B3424249D1A00CF0C4B /* 1_7生成窗口最大值数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1_7生成窗口最大值数组.cpp"; sourceTree = "<group>"; };
		50136B362424A5FD00CF0C4B /* 1_9最大子矩阵的大小.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1_9最大子矩阵的大小.cpp"; sourceTree = "<group>"; };
		50136B382424E44F00CF0C4B /* O(n)中位数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "O(n)中位数.cpp"; sourceTree = "<group>"; };
		502EB2552425008C00684D42 /* 一行代码求解最大公约数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "一行代码求解最大公约数.cpp"; sourceTree = "<group>"; };
		50340A5A2432F67500F2572D /* 汉诺塔(递归).cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "汉诺塔(递归).cpp"; sourceTree = "<group>"; };
		50340A5B2433763200F2572D /* 哥德巴赫猜想.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "哥德巴赫猜想.cpp"; sourceTree = "<group>"; };
		50340A5C2434686300F2572D /* 全排列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "全排列.cpp"; sourceTree = "<group>"; };
		50340A5D2434822B00F2572D /* 读者写者问题(写者优先).cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "读者写者问题(写者优先).cpp"; sourceTree = "<group>"; };
		50340A5E2434845400F2572D /* 读者写者问题(读写公平).cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "读者写者问题(读写公平).cpp"; sourceTree = "<group>"; };
		50340A5F2434C7B400F2572D /* 字典树例题.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "字典树例题.cpp"; sourceTree = "<group>"; };
		50340A602434C7E700F2572D /* 字典树类.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "字典树类.cpp"; sourceTree = "<group>"; };
		50340A612434EBC800F2572D /* 函数重载.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "函数重载.cpp"; sourceTree = "<group>"; };
		50340A62243AE05800F2572D /* 单例模式_懒汉.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "单例模式_懒汉.cpp"; sourceTree = "<group>"; };
		503A57E5242F0BCD00ACBE0E /* 24_反转链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "24_反转链表.cpp"; sourceTree = "<group>"; };
		503A57E6242F0C2D00ACBE0E /* 25_合并两个有序链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "25_合并两个有序链表.cpp"; sourceTree = "<group>"; };
		503A57E7242F0D3A00ACBE0E /* 26_树的子结构.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "26_树的子结构.cpp"; sourceTree = "<group>"; };
		503A57E8242F0D9800ACBE0E /* 27_二叉树的镜像.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "27_二叉树的镜像.cpp"; sourceTree = "<group>"; };
		503A57E9242F0E4400ACBE0E /* 28_对称二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "28_对称二叉树.cpp"; sourceTree = "<group>"; };
		503A57EA242F0ED300ACBE0E /* 29_顺时针打印矩阵.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "29_顺时针打印矩阵.cpp"; sourceTree = "<group>"; };
		503A57EB242F108800ACBE0E /* 30_包含min函数的栈.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "30_包含min函数的栈.cpp"; sourceTree = "<group>"; };
		503A57EC242F12AE00ACBE0E /* 31_栈的压入、弹出序列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "31_栈的压入、弹出序列.cpp"; sourceTree = "<group>"; };
		503A57ED242F139D00ACBE0E /* 32_1_从上往下打印二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "32_1_从上往下打印二叉树.cpp"; sourceTree = "<group>"; };
		503A57EE242F14D600ACBE0E /* 32_2把二叉树打印成多行.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "32_2把二叉树打印成多行.cpp"; sourceTree = "<group>"; };
		503A57EF242F17E300ACBE0E /* 32_3按之字形顺序打印二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "32_3按之字形顺序打印二叉树.cpp"; sourceTree = "<group>"; };
		503A57F0242F248B00ACBE0E /* 33_二叉搜索树的后序遍历序列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "33_二叉搜索树的后序遍历序列.cpp"; sourceTree = "<group>"; };
		503A57F1242F2BAD00ACBE0E /* 34_二叉树中和为某一值的路径.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "34_二叉树中和为某一值的路径.cpp"; sourceTree = "<group>"; };
		503A57F2242FA0B200ACBE0E /* 网易笔试题.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "网易笔试题.cpp"; sourceTree = "<group>"; };
		503A57F3243032BA00ACBE0E /* 哲学家就餐问题.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "哲学家就餐问题.cpp"; sourceTree = "<group>"; };
		503A57F42430330700ACBE0E /* 读者写者问题(读者优先).cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "读者写者问题(读者优先).cpp"; sourceTree = "<group>"; };
		503A57F52430398300ACBE0E /* 生产者消费者问题.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "生产者消费者问题.cpp"; sourceTree = "<group>"; };
		503A57F724309F2C00ACBE0E /* 1_1单例模式_懒汉.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1_1单例模式_懒汉.cpp"; sourceTree = "<group>"; };
		503A57F82430A13900ACBE0E /* 1_2单例模式_饿汉.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1_2单例模式_饿汉.cpp"; sourceTree = "<group>"; };
		506F373F242A5C3800C0DD7E /* 比赛安排.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "比赛安排.cpp"; sourceTree = "<group>"; };
		506F3740242B43DF00C0DD7E /* 回调函数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "回调函数.cpp"; sourceTree = "<group>"; };
		506F3742242DC45100C0DD7E /* 3_数组中重复的数字.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "3_数组中重复的数字.cpp"; sourceTree = "<group>"; };
		506F3746242DC52100C0DD7E /* 4_二维数组的查找.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "4_二维数组的查找.cpp"; sourceTree = "<group>"; };
		506F3747242DC89300C0DD7E /* 5_替换空格.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5_替换空格.cpp"; sourceTree = "<group>"; };
		506F3748242DCA3800C0DD7E /* 6_从尾到头打印链表.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "6_从尾到头打印链表.cpp"; sourceTree = "<group>"; };
		506F3749242DCB9400C0DD7E /* 7_重建二叉树.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "7_重建二叉树.cpp"; sourceTree = "<group>"; };
		506F374A242DCDF800C0DD7E /* 8_二叉树的下一个节点.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "8_二叉树的下一个节点.cpp"; sourceTree = "<group>"; };
		506F374B242DCE6900C0DD7E /* 9_两个栈实现队列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "9_两个栈实现队列.cpp"; sourceTree = "<group>"; };
		506F374C242DCFAA00C0DD7E /* 10_1_斐波那契数列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "10_1_斐波那契数列.cpp"; sourceTree = "<group>"; };
		506F374D242DD02400C0DD7E /* 10_2_矩形覆盖.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "10_2_矩形覆盖.cpp"; sourceTree = "<group>"; };
		506F374E242DD09D00C0DD7E /* 10_4变态跳楼梯.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "10_4变态跳楼梯.cpp"; sourceTree = "<group>"; };
		506F3750242DE57A00C0DD7E /* 11_旋转数字的最小数字.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "11_旋转数字的最小数字.cpp"; sourceTree = "<group>"; };
		506F3751242DEBF900C0DD7E /* 12_矩阵中的路径.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "12_矩阵中的路径.cpp"; sourceTree = "<group>"; };
		506F3752242DF20100C0DD7E /* 13_机器人的运动范围.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "13_机器人的运动范围.cpp"; sourceTree = "<group>"; };
		506F3753242DF62900C0DD7E /* 14_剪绳子.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "14_剪绳子.cpp"; sourceTree = "<group>"; };
		506F3754242DFC1100C0DD7E /* 15_二进制1的个数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "15_二进制1的个数.cpp"; sourceTree = "<group>"; };
		506F3755242E00DE00C0DD7E /* 16_数值的整数次方.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "16_数值的整数次方.cpp"; sourceTree = "<group>"; };
		506F3756242E037D00C0DD7E /* 17_ 打印从1到最大的n位数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "17_ 打印从1到最大的n位数.cpp"; sourceTree = "<group>"; };
		506F3757242E207500C0DD7E /* 19_正则表达式匹配.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "19_正则表达式匹配.cpp"; sourceTree = "<group>"; };
		506F3758242E2A7300C0DD7E /* 21_调整数组顺序使奇数位于偶数前面.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "21_调整数组顺序使奇数位于偶数前面.cpp"; sourceTree = "<group>"; };
		506F3759242E2DEE00C0DD7E /* 22_链表中倒数第K个点.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "22_链表中倒数第K个点.cpp"; sourceTree = "<group>"; };
		506F375A242E31F400C0DD7E /* 23_链表环的入口.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "23_链表环的入口.cpp"; sourceTree = "<group>"; };
		506F375B242E378B00C0DD7E /* 68_二叉树的最近公共祖先.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "68_二叉树的最近公共祖先.cpp"; sourceTree = "<group>"; };
		506F375D242E3FBF00C0DD7E /* 67_字符串转换为整数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "67_字符串转换为整数.cpp"; sourceTree = "<group>"; };
		506F375E242E44B700C0DD7E /* 66_构建乘积数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "66_构建乘积数组.cpp"; sourceTree = "<group>"; };
		506F375F242E486400C0DD7E /* 38_字符串的排列.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "38_字符串的排列.cpp"; sourceTree = "<group>"; };
		506F3760242E4D3800C0DD7E /* 39_数组中出现次数超过一半的数字.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "39_数组中出现次数超过一半的数字.cpp"; sourceTree = "<group>"; };
		507488BC245132E20059E6B3 /* 背包问题.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "背包问题.cpp"; sourceTree = "<group>"; };
		507488BF245135790059E6B3 /* 01背包问题.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "01背包问题.cpp"; sourceTree = "<group>"; };
		5076D81C243CBABD00107A6F /* 42_最大连续子数组和.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "42_最大连续子数组和.cpp"; sourceTree = "<group>"; };
		5076D81D243CBBFE00107A6F /* 47_礼物的最大价值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "47_礼物的最大价值.cpp"; sourceTree = "<group>"; };
		5076D81E243F29A800107A6F /* 小易的升级之路.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "小易的升级之路.cpp"; sourceTree = "<group>"; };
		5076D81F24400BBD00107A6F /* 扫描蘑菇.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "扫描蘑菇.cpp"; sourceTree = "<group>"; };
		5076D82024400BD900107A6F /* 包含字符串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "包含字符串.cpp"; sourceTree = "<group>"; };
		50FF4027244ABA980066E33C /* 04_06后继者.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "04_06后继者.cpp"; sourceTree = "<group>"; };
		50FF4028244ABAF50066E33C /* 01_01判定字符是否唯一.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "01_01判定字符是否唯一.cpp"; sourceTree = "<group>"; };
		50FF4029244B35480066E33C /* 单调栈.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "单调栈.cpp"; sourceTree = "<group>"; };
		50FF402A244B38050066E33C /* 京东笔试题.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "京东笔试题.cpp"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		501365FA2423C4EA00CF0C4B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		50136AE42423C5FA00CF0C4B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		50136B072423C7D600CF0C4B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		501365F42423C4EA00CF0C4B = {
			isa = PBXGroup;
			children = (
				501366502423C5C500CF0C4B /* 临时代码 */,
				501366072423C5C500CF0C4B /* 临时问题 */,
				5013666A2423C5C500CF0C4B /* Algorithm */,
				50136AE82423C5FA00CF0C4B /* Tree */,
				50136B0B2423C7D600CF0C4B /* Main */,
				501365FE2423C4EA00CF0C4B /* Products */,
			);
			sourceTree = "<group>";
		};
		501365FE2423C4EA00CF0C4B /* Products */ = {
			isa = PBXGroup;
			children = (
				501365FD2423C4EA00CF0C4B /* C++Learning */,
				50136AE72423C5FA00CF0C4B /* Tree */,
				50136B0A2423C7D600CF0C4B /* Main */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		501366072423C5C500CF0C4B /* 临时问题 */ = {
			isa = PBXGroup;
			children = (
				501366372423C5C500CF0C4B /* 1_牛牛找工作.cpp */,
				5013662C2423C5C500CF0C4B /* 1_twoSum.cpp */,
				5013663B2423C5C500CF0C4B /* 2_被3整除.cpp */,
				501366282423C5C500CF0C4B /* 3_安置路灯.cpp */,
				501366292423C5C500CF0C4B /* 4_迷路的牛牛.cpp */,
				501366142423C5C500CF0C4B /* 5_数对.cpp */,
				501366172423C5C500CF0C4B /* ABCstr.cpp */,
				5013664C2423C5C500CF0C4B /* AddNo.cpp */,
				501366202423C5C500CF0C4B /* AddSub.cpp */,
				501366352423C5C500CF0C4B /* ArrayJump.cpp */,
				501366262423C5C500CF0C4B /* AssestPackage.cpp */,
				5013661A2423C5C500CF0C4B /* BitCoinBuy.cpp */,
				501366212423C5C500CF0C4B /* Block.cpp */,
				501366422423C5C500CF0C4B /* Boat.cpp */,
				501366312423C5C500CF0C4B /* Brackets.cpp */,
				5013663C2423C5C500CF0C4B /* BubbleSort.cpp */,
				5013663E2423C5C500CF0C4B /* BucketSort.cpp */,
				501366082423C5C500CF0C4B /* Bus.cpp */,
				5013664D2423C5C500CF0C4B /* Candy.cpp */,
				501366452423C5C500CF0C4B /* Card.cpp */,
				501366232423C5C500CF0C4B /* CatFood.cpp */,
				501366272423C5C500CF0C4B /* Clock.cpp */,
				5013663F2423C5C500CF0C4B /* DayBetweenYear.cpp */,
				5013661E2423C5C500CF0C4B /* DayOfYear.cpp */,
				501366132423C5C500CF0C4B /* DecodeNumber.cpp */,
				501366092423C5C500CF0C4B /* DecodeNumber2.cpp */,
				501366492423C5C500CF0C4B /* Divide.cpp */,
				5013660A2423C5C500CF0C4B /* Egg.cpp */,
				501366222423C5C500CF0C4B /* Find.cpp */,
				5013660D2423C5C500CF0C4B /* GoodNumber.cpp */,
				5013661D2423C5C500CF0C4B /* IncludeStr.cpp */,
				5013664A2423C5C500CF0C4B /* iplusplusi.cpp */,
				5013660C2423C5C500CF0C4B /* Jinzhi.cpp */,
				501366152423C5C500CF0C4B /* Latex.cpp */,
				5013662D2423C5C500CF0C4B /* LeftStr.cpp */,
				5013661B2423C5C500CF0C4B /* LinkedList.cpp */,
				501366242423C5C500CF0C4B /* LIS.cpp */,
				501366332423C5C500CF0C4B /* LIS2.cpp */,
				501366252423C5C500CF0C4B /* ListCombi.cpp */,
				501366322423C5C500CF0C4B /* MagicDepth.cpp */,
				501366482423C5C500CF0C4B /* MajorityArray.cpp */,
				5013664E2423C5C500CF0C4B /* matrix.c */,
				501366102423C5C500CF0C4B /* MinKSet.cpp */,
				501366472423C5C500CF0C4B /* MinSqr3.cpp */,
				5013662B2423C5C500CF0C4B /* MinStore.cpp */,
				501366162423C5C500CF0C4B /* NumberOfOne.cpp */,
				5013662A2423C5C500CF0C4B /* OrderArray.cpp */,
				5013660F2423C5C500CF0C4B /* OrderPair.cpp */,
				501366432423C5C500CF0C4B /* OrderStr.cpp */,
				501366182423C5C500CF0C4B /* PalStr.cpp */,
				5013663D2423C5C500CF0C4B /* PalStr2.cpp */,
				5013664B2423C5C500CF0C4B /* PhtotoY.cpp */,
				501366112423C5C500CF0C4B /* PickRepre.cpp */,
				501366342423C5C500CF0C4B /* Poster.cpp */,
				501366382423C5C500CF0C4B /* Prime.c */,
				5013662F2423C5C500CF0C4B /* PrimeD.cpp */,
				5013661C2423C5C500CF0C4B /* ReverseStr.cpp */,
				5013663A2423C5C500CF0C4B /* SortOne.cpp */,
				501366362423C5C500CF0C4B /* StairsClimb.cpp */,
				5013664F2423C5C500CF0C4B /* StrAdd.cpp */,
				501366122423C5C500CF0C4B /* StrMaze.cpp */,
				501366442423C5C500CF0C4B /* StrMutiply.cpp */,
				501366302423C5C500CF0C4B /* SubString.cpp */,
				501366192423C5C500CF0C4B /* sukudo.cpp */,
				5013660E2423C5C500CF0C4B /* SumArray.cpp */,
				501366392423C5C500CF0C4B /* test1.cpp */,
				5013661F2423C5C500CF0C4B /* ThirdNumber.cpp */,
				501366412423C5C500CF0C4B /* UniString.cpp */,
				5013660B2423C5C500CF0C4B /* VectorOddEven.cpp */,
				506F373F242A5C3800C0DD7E /* 比赛安排.cpp */,
			);
			path = "临时问题";
			sourceTree = "<group>";
		};
		501366502423C5C500CF0C4B /* 临时代码 */ = {
			isa = PBXGroup;
			children = (
				501366542423C5C500CF0C4B /* ABCstr.cpp */,
				5013665A2423C5C500CF0C4B /* AddSub.cpp */,
				50136B042423C70800CF0C4B /* BigSmall.cpp */,
				501366572423C5C500CF0C4B /* BitCoinBuy.cpp */,
				5013665B2423C5C500CF0C4B /* Block.cpp */,
				501366642423C5C500CF0C4B /* BucketSort.cpp */,
				5013665C2423C5C500CF0C4B /* CatFood.cpp */,
				50136AF72423C70700CF0C4B /* CopyConstructor.cpp */,
				501366592423C5C500CF0C4B /* DayOfYear.cpp */,
				501366692423C5C500CF0C4B /* Divide.cpp */,
				50136AF92423C70700CF0C4B /* Fork.cpp */,
				501366512423C5C500CF0C4B /* GoodNumber.cpp */,
				50136B002423C70800CF0C4B /* Huffman.cpp */,
				501366582423C5C500CF0C4B /* IncludeStr.cpp */,
				501366532423C5C500CF0C4B /* Latex.cpp */,
				5013665D2423C5C500CF0C4B /* LIS.cpp */,
				501366612423C5C500CF0C4B /* MagicDepth.cpp */,
				5013665F2423C5C500CF0C4B /* MinStore.cpp */,
				5013665E2423C5C500CF0C4B /* OrderArray.cpp */,
				501366672423C5C500CF0C4B /* OrderStr.cpp */,
				501366552423C5C500CF0C4B /* PalStr.cpp */,
				501366632423C5C500CF0C4B /* PalStr2.cpp */,
				50136AFE2423C70800CF0C4B /* Pointer.cpp */,
				501366622423C5C500CF0C4B /* Prime.c */,
				50136AF52423C70700CF0C4B /* Print.c */,
				50136AFD2423C70700CF0C4B /* qSort.cpp */,
				50136AFF2423C70800CF0C4B /* ReadWriteLock.cpp */,
				50136AFA2423C70700CF0C4B /* SizeOfObject.cpp */,
				50136B022423C70800CF0C4B /* Str.cpp */,
				501366562423C5C500CF0C4B /* sukudo.cpp */,
				501366522423C5C500CF0C4B /* SumArray.cpp */,
				50136AFB2423C70700CF0C4B /* TwoStackQueue.cpp */,
				501366662423C5C500CF0C4B /* UniString.cpp */,
				50136AFC2423C70700CF0C4B /* VirtualFunction.cpp */,
			);
			path = "临时代码";
			sourceTree = "<group>";
		};
		5013666A2423C5C500CF0C4B /* Algorithm */ = {
			isa = PBXGroup;
			children = (
				50FF4026244ABA7C0066E33C /* 程序员面试金典（第6版） */,
				503A57F624309F1200ACBE0E /* 设计模式 */,
				506F3744242DC4E400C0DD7E /* 剑指OFFER */,
				50136B2B2424957F00CF0C4B /* 程序员代码面试指南 */,
				50136B052423C73600CF0C4B /* lib */,
				5013666B2423C5C500CF0C4B /* LeetCode */,
				501368CD2423C5C700CF0C4B /* 我的算法 */,
				501368E72423C5C700CF0C4B /* scripts */,
				501368F02423C5C700CF0C4B /* 牛客 */,
				503A57F2242FA0B200ACBE0E /* 网易笔试题.cpp */,
				5076D82024400BD900107A6F /* 包含字符串.cpp */,
				50089F4024489063006F7D92 /* 腾讯笔试题N(sum).cpp */,
				50FF402A244B38050066E33C /* 京东笔试题.cpp */,
			);
			path = Algorithm;
			sourceTree = "<group>";
		};
		5013666B2423C5C500CF0C4B /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				501367742423C5C600CF0C4B /* 1_twoSum.cpp */,
				501366782423C5C500CF0C4B /* 2_addTwoNumbers.cpp */,
				501367752423C5C600CF0C4B /* 3_longestSubstringWithoutRepeatingCharacters.cpp */,
				5013675F2423C5C600CF0C4B /* 4_medianOfTwoSortedArrays.cpp */,
				501366D62423C5C600CF0C4B /* 5_longestPalindromicSubstring.cpp */,
				501367422423C5C600CF0C4B /* 6_zigZagConversion.cpp */,
				5013682D2423C5C600CF0C4B /* 7_reverseInteger.cpp */,
				501367A62423C5C600CF0C4B /* 8_stringToIntegerAtoi.cpp */,
				501368CC2423C5C700CF0C4B /* 9_palindromeNumber.cpp */,
				501368B12423C5C700CF0C4B /* 10_regularExpressionMatching.cpp */,
				501367062423C5C600CF0C4B /* 11_containerWithMostWater.cpp */,
				501367762423C5C600CF0C4B /* 12_integerToRoman.cpp */,
				501367512423C5C600CF0C4B /* 13_romanToInteger.cpp */,
				501368152423C5C600CF0C4B /* 14_longestCommonPrefix.cpp */,
				501367862423C5C600CF0C4B /* 15_3Sum.cpp */,
				501368822423C5C600CF0C4B /* 16_3SumClosest.cpp */,
				501367652423C5C600CF0C4B /* 17_letterCombinationsOfAPhoneNumber.cpp */,
				501366DE2423C5C600CF0C4B /* 18_4Sum.cpp */,
				501368852423C5C600CF0C4B /* 19_removeNthNodeFromEndOfList.cpp */,
				501367DB2423C5C600CF0C4B /* 20_validParentheses.cpp */,
				501367E52423C5C600CF0C4B /* 21_mergeTwoSortedList.cpp */,
				501368A42423C5C700CF0C4B /* 22_generateParentheses.cpp */,
				501366BA2423C5C600CF0C4B /* 23_mergeKSortedLists.cpp */,
				5013679E2423C5C600CF0C4B /* 24_swapNodesInPairs.cpp */,
				501367442423C5C600CF0C4B /* 39_combinationSum.cpp */,
				501367A32423C5C600CF0C4B /* 40_combinationSum.II.cpp */,
				501367722423C5C600CF0C4B /* 41_firstMissingPositive.cpp */,
				501367052423C5C600CF0C4B /* 42_trappingRainWater.cpp */,
				501366D92423C5C600CF0C4B /* 43_multiplyStrings.cpp */,
				5013673F2423C5C600CF0C4B /* 44_wildcardMatching.cpp */,
				501368C92423C5C700CF0C4B /* 45_jumpGame.II.cpp */,
				5013668A2423C5C500CF0C4B /* 46_permutations.cpp */,
				501366892423C5C500CF0C4B /* 47_permutations.II.cpp */,
				501366912423C5C500CF0C4B /* 49_GroupAnagrams.cpp */,
				501367872423C5C600CF0C4B /* 50_pow(x,n).cpp */,
				501368C82423C5C700CF0C4B /* 55_jumpGame.cpp */,
				501368602423C5C600CF0C4B /* 67_addBinary.cpp */,
				501367A72423C5C600CF0C4B /* 70_climbStairs.cpp */,
				501366AD2423C5C600CF0C4B /* 77_Combinations.cpp */,
				501366EB2423C5C600CF0C4B /* 78_subsets.cpp */,
				501368042423C5C600CF0C4B /* 90_subsets.II.cpp */,
				5013687C2423C5C600CF0C4B /* 94_binaryTreeInorderTraversal.cpp */,
				501367092423C5C600CF0C4B /* 102_binaryTreeLevelOrderTraversal.cpp */,
				5013683C2423C5C600CF0C4B /* 103_binaryTreeZigzagLevelOrderTraversal.cpp */,
				501367882423C5C600CF0C4B /* 105_ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp */,
				5013669E2423C5C600CF0C4B /* 106_ConstructBinaryTreeFromInorderAndPostorderTraversal.cpp */,
				501367832423C5C600CF0C4B /* 107_binaryTreeLevelOrderTraversal.II.cpp */,
				501367842423C5C600CF0C4B /* 110_balancedBinaryTree.cpp */,
				501367432423C5C600CF0C4B /* 121_bestTimeToBuyAndSellStock.cpp */,
				5013669F2423C5C600CF0C4B /* 122_bestTimeToBuyAndSellStock.II.cpp */,
				501367212423C5C600CF0C4B /* 123_bestTimeToBuyAndSellStock.III.cpp */,
				501368B82423C5C700CF0C4B /* 124_binaryTreeMaximumPathSum.cpp */,
				501367D02423C5C600CF0C4B /* 133_cloneGraph.cpp */,
				501366DA2423C5C600CF0C4B /* 135_candy.cpp */,
				501367602423C5C600CF0C4B /* 136_singleNumber.cpp */,
				501367C92423C5C600CF0C4B /* 144_binaryTreePreorderTraversal.cpp */,
				501368A82423C5C700CF0C4B /* 145_binaryTreePostorderTraversal.cpp */,
				501367B62423C5C600CF0C4B /* 156_binaryTreeUpsideDown.cpp */,
				501367182423C5C600CF0C4B /* 165_compareVersionNumbers.cpp */,
				5013675A2423C5C600CF0C4B /* 167_twoSum.II.cpp */,
				501368B52423C5C700CF0C4B /* 170_twoSum.III.cpp */,
				501366A62423C5C600CF0C4B /* 173_binarySearchTreeIterator.cpp */,
				501366E32423C5C600CF0C4B /* 174_dungeonGame.cpp */,
				501367BC2423C5C600CF0C4B /* 188_bestTimeToBuyAndSellStock.IV.cpp */,
				501368712423C5C600CF0C4B /* 198_houseRobber.cpp */,
				501368022423C5C600CF0C4B /* 199_binaryTreeRightSideView.cpp */,
				501366E82423C5C600CF0C4B /* 201_BitwiseAndOfNumbersRange.cpp */,
				501368782423C5C600CF0C4B /* 209_bullsAndCows.cpp */,
				501366792423C5C500CF0C4B /* 211_AddAndSearchWord.cpp */,
				501366F02423C5C600CF0C4B /* 213_houseRobber.II.cpp */,
				501368B42423C5C700CF0C4B /* 214_ShortestPalindrome.cpp */,
				501368352423C5C600CF0C4B /* 216_combinationSum.III.cpp */,
				5013685F2423C5C600CF0C4B /* 217_ContainsDuplicate.cpp */,
				501366E02423C5C600CF0C4B /* 219_ContainsDuplicate.II.cpp */,
				501367202423C5C600CF0C4B /* 220_ContainsDuplicate.III.cpp */,
				501367852423C5C600CF0C4B /* 224_BasicCalculator.cpp */,
				501367152423C5C600CF0C4B /* 227_BasicCalculator.II.cpp */,
				501368B92423C5C700CF0C4B /* 231_powerOfTwo.cpp */,
				501368522423C5C600CF0C4B /* 242_ValidAnagram.cpp */,
				501368AD2423C5C700CF0C4B /* 257_binaryTreePaths.cpp */,
				5013680E2423C5C600CF0C4B /* 258_addDigits.cpp */,
				501366DB2423C5C600CF0C4B /* 260_singleNumberIii.cpp */,
				5013684D2423C5C600CF0C4B /* 274_h-Index.cpp */,
				501367B72423C5C600CF0C4B /* 275_h-Index.II.cpp */,
				501367F62423C5C600CF0C4B /* 300_longestIncreasingSubsequence.cpp */,
				501367322423C5C600CF0C4B /* 306_AdditiveNumber.cpp */,
				501368A32423C5C700CF0C4B /* 309_BestTimeToBuyAndSellStockWithCooldown.cpp */,
				501367E42423C5C600CF0C4B /* 312_BurstBalloons.cpp */,
				501368122423C5C600CF0C4B /* 319_bulbSwitcher.cpp */,
				501367412423C5C600CF0C4B /* 322_CoinChange.cpp */,
				501367402423C5C600CF0C4B /* 326_PowerOfThree.cpp */,
				501367C42423C5C600CF0C4B /* 337_houseRobberIII.cpp */,
				5013666D2423C5C500CF0C4B /* 342_PowerOfFour.cpp */,
				501368032423C5C600CF0C4B /* 343_IntegerBreak.cpp */,
				501368AE2423C5C700CF0C4B /* 344_reverseString.cpp */,
				501368A02423C5C700CF0C4B /* 345_reverseVowelsOfAString.cpp */,
				5013680D2423C5C600CF0C4B /* 377_CombinationSumIV.cpp */,
				501367B12423C5C600CF0C4B /* 401_BinaryWatch.cpp */,
				501368C32423C5C700CF0C4B /* 405_ConvertANumberToHexadecimal.cpp */,
				5013672B2423C5C600CF0C4B /* 413_ArithmeticSlices.cpp */,
				501368012423C5C600CF0C4B /* 415_AddStrings.cpp */,
				501366FD2423C5C600CF0C4B /* 441_arrangingCoins.cpp */,
				5013670C2423C5C600CF0C4B /* 509_fibonacciNumber.cpp */,
				5013666C2423C5C500CF0C4B /* 518_CoinChange2.cpp */,
				501367792423C5C600CF0C4B /* 520_detectCapital.cpp */,
				5013667A2423C5C500CF0C4B /* 557_reverseWordsInAStringIii.cpp */,
				5013670D2423C5C600CF0C4B /* 714_BestTimeToBuyAndSellStockWithTransactionFee.cpp */,
				501368C22423C5C700CF0C4B /* 721_AccountsMerge.cpp */,
				5013688F2423C5C700CF0C4B /* 744_findSmallestLetterGreaterThanTarget.cpp */,
				501368902423C5C700CF0C4B /* 771_JewelsAndStones.cpp */,
				5013687F2423C5C600CF0C4B /* 804_UniqueMorseCodeWords.cpp */,
				501367E62423C5C600CF0C4B /* 844_BackspaceStringCompare.cpp */,
				501367732423C5C600CF0C4B /* 859_BuddyStrings.cpp */,
				5013684A2423C5C600CF0C4B /* 917_reverseOnlyLetters.cpp */,
				501367B82423C5C600CF0C4B /* 989_AddToArrayFormOfInteger.cpp */,
				501366922423C5C500CF0C4B /* 991_BrokenCalculator.cpp */,
				501366D12423C5C600CF0C4B /* 1108_defangingAnIpAddress.cpp */,
				5013677A2423C5C600CF0C4B /* 1170_CompareStringsByFrequencyOfTheSmallestCharacter.cpp */,
				5013687B2423C5C600CF0C4B /* 1227_numberOfEquivalentDominoPairs.cpp */,
				501367B92423C5C600CF0C4B /* 1342_numberOfStepsToReduceANumberToZero.cpp */,
				5013672A2423C5C600CF0C4B /* convertANumberToHexadecimal */,
				5013671E2423C5C600CF0C4B /* convertSortedArrayToBinarySearchTree */,
				501366842423C5C500CF0C4B /* convertSortedListToBinarySearchTree */,
				501367F22423C5C600CF0C4B /* copyListWithRandomPointer */,
				5013675D2423C5C600CF0C4B /* countAndSay */,
				501367772423C5C600CF0C4B /* countCompleteTreeNodes */,
				501368AB2423C5C700CF0C4B /* countingBits */,
				501367302423C5C600CF0C4B /* countNumbersWithUniqueDigits */,
				501366E62423C5C600CF0C4B /* countOfRangeSum */,
				5013666E2423C5C500CF0C4B /* countOfSmallerNumbersAfterSelf */,
				5013686B2423C5C600CF0C4B /* countPrimes */,
				501367D32423C5C600CF0C4B /* courseSchedule */,
				501366762423C5C500CF0C4B /* cousinsInBinaryTree */,
				5013686D2423C5C600CF0C4B /* createMaximumNumber */,
				501366BF2423C5C600CF0C4B /* decodeString */,
				501368C42423C5C700CF0C4B /* decodeWays */,
				501367522423C5C600CF0C4B /* deleteNodeInALinkedList */,
				501367F42423C5C600CF0C4B /* differentWaysToAddParentheses */,
				501366F72423C5C600CF0C4B /* distinctSubsequences */,
				501368382423C5C600CF0C4B /* distributeCoinsInBinaryTree */,
				501368072423C5C600CF0C4B /* divideTwoInt */,
				501367682423C5C600CF0C4B /* editDistance */,
				5013674A2423C5C600CF0C4B /* eliminationGame */,
				501368AF2423C5C700CF0C4B /* evaluateDivision */,
				501366EC2423C5C600CF0C4B /* evaluateReversePolishNotation */,
				5013684B2423C5C600CF0C4B /* excelSheetColumnNumber */,
				5013668B2423C5C500CF0C4B /* excelSheetColumnTitle */,
				501367582423C5C600CF0C4B /* expressionAddOperators */,
				5013670A2423C5C600CF0C4B /* factorialTrailingZeroes */,
				501368C62423C5C700CF0C4B /* findAllAnagramsInAString */,
				501366F52423C5C600CF0C4B /* findMedianFromDataStream */,
				5013680F2423C5C600CF0C4B /* findMinimumInRotatedSortedArray */,
				5013672E2423C5C600CF0C4B /* findPeakElement */,
				501367FD2423C5C600CF0C4B /* findTheDifference */,
				5013679C2423C5C600CF0C4B /* findTheDuplicateNumber */,
				501366822423C5C500CF0C4B /* firstBadVersion */,
				501368832423C5C600CF0C4B /* firstUniqueCharacterInAString */,
				501368B22423C5C700CF0C4B /* fizzBuzz */,
				501367352423C5C600CF0C4B /* flattenBinaryTreeToLinkedList */,
				501367662423C5C600CF0C4B /* flattenNestedListIterator */,
				501368BC2423C5C700CF0C4B /* fractionToRecurringDecimal */,
				501368532423C5C600CF0C4B /* friendCircles */,
				501367AC2423C5C600CF0C4B /* frogJump */,
				501368132423C5C600CF0C4B /* gameOfLife */,
				501366EE2423C5C600CF0C4B /* gasStation */,
				501366A02423C5C600CF0C4B /* grayCode */,
				501367EE2423C5C600CF0C4B /* happyNumber */,
				501367B22423C5C600CF0C4B /* implementQueueUsingStacks */,
				5013681A2423C5C600CF0C4B /* implementStackUsingQueues */,
				501366B62423C5C600CF0C4B /* implementTriePrefixTree */,
				501367AA2423C5C600CF0C4B /* increasingTripletSubsequence */,
				501366C62423C5C600CF0C4B /* insertDeleteGetRandom */,
				501367CC2423C5C600CF0C4B /* insertInterval */,
				501367F72423C5C600CF0C4B /* insertionSortList */,
				501367FF2423C5C600CF0C4B /* integerReplacement */,
				501368202423C5C600CF0C4B /* integerToEnglishWords */,
				501366D42423C5C600CF0C4B /* interleavingString */,
				501368A52423C5C700CF0C4B /* intersectionOfTwoArrays */,
				501368802423C5C600CF0C4B /* intersectionOfTwoLinkedLists */,
				501366B42423C5C600CF0C4B /* intervalListIntersectons */,
				501366FE2423C5C600CF0C4B /* invertBinaryTree */,
				501367812423C5C600CF0C4B /* islandPerimeter */,
				501367F92423C5C600CF0C4B /* isomorphicStrings */,
				5013674C2423C5C600CF0C4B /* isSubsequence */,
				501366DF2423C5C600CF0C4B /* jumpGame */,
				501367D92423C5C600CF0C4B /* kthLargestElementInAnArray */,
				501368572423C5C600CF0C4B /* kthSmallestElementInaBST */,
				501368942423C5C700CF0C4B /* largestNumber */,
				5013668F2423C5C500CF0C4B /* largestPerimeterTriangle */,
				501368332423C5C600CF0C4B /* largestRectangleInHistogram */,
				501367A42423C5C600CF0C4B /* lengthOfLastWord */,
				501367982423C5C600CF0C4B /* lexicographicalNumbers */,
				501367002423C5C600CF0C4B /* linkedListCycle */,
				501368742423C5C600CF0C4B /* linkedListRandomNode */,
				501366D72423C5C600CF0C4B /* longestAbsoluteFilePath */,
				501367562423C5C600CF0C4B /* longestConsecutiveSequence */,
				5013683A2423C5C600CF0C4B /* longestIncreasingPathInAMatrix */,
				501367CA2423C5C600CF0C4B /* longestPalindrome */,
				501368442423C5C600CF0C4B /* longestSubstringWithAtLeastKRepeatingCharacters */,
				501366C92423C5C600CF0C4B /* longestSubstringWithAtMostTwoDistinctCharacters */,
				501366B02423C5C600CF0C4B /* longestTurbulentSubarray */,
				501368722423C5C600CF0C4B /* longestValidParentheses */,
				501367892423C5C600CF0C4B /* lowestCommonAncestorOfABinarySearchTree */,
				501366D22423C5C600CF0C4B /* lowestCommonAncestorOfABinaryTree */,
				501368502423C5C600CF0C4B /* LRUCache */,
				501368242423C5C600CF0C4B /* majorityElement */,
				501368462423C5C600CF0C4B /* maxAreaOfIsland */,
				501366B22423C5C600CF0C4B /* maximalRectangle */,
				501366722423C5C500CF0C4B /* maximalSquare */,
				5013677D2423C5C600CF0C4B /* maximumAverageSubarray */,
				501367702423C5C600CF0C4B /* maximumDepthOfBinaryTree */,
				5013677F2423C5C600CF0C4B /* maximumGap */,
				501367F02423C5C600CF0C4B /* maximumProductOfWordLengths */,
				5013680B2423C5C600CF0C4B /* maximumProductSubarray */,
				5013687D2423C5C600CF0C4B /* maximumSubArray */,
				5013683D2423C5C600CF0C4B /* maxPointsOnALine */,
				501366A22423C5C600CF0C4B /* mergeIntervals */,
				501367D12423C5C600CF0C4B /* mergeTwoSortedArray */,
				501367A82423C5C600CF0C4B /* minCostClimbingStairs */,
				5013676A2423C5C600CF0C4B /* minimumASCIIDeleteSumForTwoStrings */,
				501367072423C5C600CF0C4B /* minimumCostForTickets */,
				501368862423C5C700CF0C4B /* minimumDepthOfBinaryTree */,
				501367CE2423C5C600CF0C4B /* minimumFallingPathSum */,
				501367E02423C5C600CF0C4B /* minimumHeightTrees */,
				501367A12423C5C600CF0C4B /* minimumPathSum */,
				501366F32423C5C600CF0C4B /* minimumSizeSubarraySum */,
				501366CD2423C5C600CF0C4B /* minimumWindowSubstring */,
				5013671C2423C5C600CF0C4B /* miniParser */,
				501367332423C5C600CF0C4B /* minStack */,
				501367C02423C5C600CF0C4B /* mirrorReflection */,
				5013684E2423C5C600CF0C4B /* missingNumber */,
				501366FB2423C5C600CF0C4B /* missingRanges */,
				5013668D2423C5C500CF0C4B /* mostCommonWord */,
				5013672C2423C5C600CF0C4B /* moveZeroes */,
				501367392423C5C600CF0C4B /* nextPermutation */,
				5013676E2423C5C600CF0C4B /* nimGame */,
				501368912423C5C700CF0C4B /* nQueens */,
				501367452423C5C600CF0C4B /* nRepeatedElementInSize2NArray */,
				5013679F2423C5C600CF0C4B /* nthDigit */,
				501367112423C5C600CF0C4B /* numberOf1Bits */,
				501368482423C5C600CF0C4B /* numberOfDigitOne */,
				501366F12423C5C600CF0C4B /* numberOfIslands */,
				501368BE2423C5C700CF0C4B /* oddEvenLinkedList */,
				501368552423C5C600CF0C4B /* oneEditDistance */,
				501368992423C5C700CF0C4B /* palindromeLinkedList */,
				501368B62423C5C700CF0C4B /* palindromePairs */,
				501368882423C5C700CF0C4B /* palindromePartitioning */,
				501366932423C5C500CF0C4B /* palindromicSubstrings */,
				501367EA2423C5C600CF0C4B /* partitionEqualSubsetSum */,
				501368292423C5C600CF0C4B /* partitionList */,
				501367472423C5C600CF0C4B /* pascalTriangle */,
				501368362423C5C600CF0C4B /* patchingArray */,
				501366952423C5C500CF0C4B /* pathSum */,
				501367902423C5C600CF0C4B /* peakIndexInAMountainArray */,
				501366982423C5C600CF0C4B /* peekingIterator */,
				501366E92423C5C600CF0C4B /* perfectRectangle */,
				501366AE2423C5C600CF0C4B /* perfectSquares */,
				5013682B2423C5C600CF0C4B /* permutationSequence */,
				501368792423C5C600CF0C4B /* plusOne */,
				501367E72423C5C600CF0C4B /* populatingNextRightPointersInEachNode */,
				501366BD2423C5C600CF0C4B /* productOfArrayExceptSelf */,
				501368652423C5C600CF0C4B /* queueReconstructionByHeight */,
				5013688D2423C5C700CF0C4B /* randomPickIndex */,
				5013673B2423C5C600CF0C4B /* rangeSumQuery-Immutable */,
				501368692423C5C600CF0C4B /* rangeSumQuery2D-Immutable */,
				501366E12423C5C600CF0C4B /* ransomNote */,
				5013689B2423C5C700CF0C4B /* readNCharactersGivenRead4 */,
				501367BA2423C5C600CF0C4B /* reconstructItinerary */,
				501367372423C5C600CF0C4B /* recoverATreeFromPreorderTraversal */,
				501367C72423C5C600CF0C4B /* recoverBinarySearchTree */,
				501366702423C5C500CF0C4B /* rectangleArea */,
				501367922423C5C600CF0C4B /* removeDuplicateLetters */,
				501367BD2423C5C600CF0C4B /* removeDuplicatesFromSortedArray */,
				5013667B2423C5C500CF0C4B /* removeDuplicatesFromSortedList */,
				501366802423C5C500CF0C4B /* removeElement */,
				501368162423C5C600CF0C4B /* removeInvalidParentheses */,
				501367B42423C5C600CF0C4B /* removeKDigits */,
				501368A92423C5C700CF0C4B /* removeLinkedListElements */,
				501366F92423C5C600CF0C4B /* reorderList */,
				5013669C2423C5C600CF0C4B /* repeatedDNASequences */,
				501366A42423C5C600CF0C4B /* restoreIPAddresses */,
				501367632423C5C600CF0C4B /* reverseBits */,
				5013670E2423C5C600CF0C4B /* reverseLinkedList */,
				5013688B2423C5C700CF0C4B /* reverseNodesInKGroup */,
				501368182423C5C600CF0C4B /* rotateArray */,
				501368052423C5C600CF0C4B /* rotateFunction */,
				501368BA2423C5C700CF0C4B /* rotateImage */,
				501367EC2423C5C600CF0C4B /* rotateList */,
				5013676C2423C5C600CF0C4B /* sameTree */,
				501367222423C5C600CF0C4B /* satisfiabilityOfEqualityEquations */,
				501368422423C5C600CF0C4B /* scrambleString */,
				501367192423C5C600CF0C4B /* search2DMatrix */,
				5013667E2423C5C500CF0C4B /* searchForRange */,
				501367AE2423C5C600CF0C4B /* searchInRotatedSortedArray */,
				501367FB2423C5C600CF0C4B /* searchInsertPosition */,
				501368612423C5C600CF0C4B /* sentenceScreenFitting */,
				5013669A2423C5C600CF0C4B /* serializeAndDeserializeBinaryTree */,
				501368222423C5C600CF0C4B /* setMatrixZeroes */,
				501368092423C5C600CF0C4B /* shuffleAnArray */,
				501367962423C5C600CF0C4B /* simplifyPath */,
				5013678B2423C5C600CF0C4B /* singleNumber */,
				501366A92423C5C600CF0C4B /* slidingWindowMaximum */,
				501366872423C5C500CF0C4B /* smallestStringStartingFromLeaf */,
				501368962423C5C700CF0C4B /* sortArrayByParity */,
				501367612423C5C600CF0C4B /* sortColors */,
				501367262423C5C600CF0C4B /* sortList */,
				5013685C2423C5C600CF0C4B /* spiralMatrix */,
				5013681C2423C5C600CF0C4B /* splitArrayLargestSum */,
				501367942423C5C600CF0C4B /* sqrt */,
				501367282423C5C600CF0C4B /* squaresOfASortedArray */,
				501366B82423C5C600CF0C4B /* stringWithoutAAAOrBBB */,
				5013682E2423C5C600CF0C4B /* strStr */,
				5013679A2423C5C600CF0C4B /* substringWithConcatenationOfAllWords */,
				5013681E2423C5C600CF0C4B /* sudokuSolver */,
				501367E22423C5C600CF0C4B /* summaryRanges */,
				501367C52423C5C600CF0C4B /* sumOfEvenNumbersAfterQueries */,
				501367132423C5C600CF0C4B /* sumOfLeftLeaves */,
				501368A12423C5C700CF0C4B /* sumOfTwoIntegers */,
				501366CF2423C5C600CF0C4B /* sumRootToLeafNumber */,
				501368272423C5C600CF0C4B /* superUglyNumber */,
				501366BB2423C5C600CF0C4B /* surroundedRegions */,
				501368762423C5C600CF0C4B /* symmetricTree */,
				501366AB2423C5C600CF0C4B /* textJustification */,
				501367162423C5C600CF0C4B /* theSkylineProblem */,
				501368C02423C5C700CF0C4B /* thirdMaximumNumber */,
				501366742423C5C500CF0C4B /* timeBasedKeyValueStore */,
				501367242423C5C600CF0C4B /* topKFrequentElements */,
				501366CB2423C5C600CF0C4B /* totalHammingDistance */,
				501366862423C5C500CF0C4B /* trappingRainWater */,
				501367542423C5C600CF0C4B /* triangle */,
				5013677B2423C5C600CF0C4B /* twoCityScheduling */,
				501368592423C5C600CF0C4B /* uglyNumber */,
				5013674E2423C5C600CF0C4B /* uniqueBinarySearchTrees */,
				5013689E2423C5C700CF0C4B /* uniqueNumberOfOccurrences */,
				501367DC2423C5C600CF0C4B /* uniquePaths */,
				5013675B2423C5C600CF0C4B /* UTF8Validation */,
				501367032423C5C600CF0C4B /* validateBinarySearchTree */,
				501366E42423C5C600CF0C4B /* validNumber */,
				501366A72423C5C600CF0C4B /* validPalindrome */,
				501366DC2423C5C600CF0C4B /* validSudoku */,
				501366C12423C5C600CF0C4B /* verifyPreorderSerializationOfABinaryTree */,
				501367C22423C5C600CF0C4B /* verticalOrderTraversalOfABinaryTree */,
				501368CA2423C5C700CF0C4B /* videoStitching */,
				5013678E2423C5C600CF0C4B /* wiggleSort */,
				501368672423C5C600CF0C4B /* wiggleSubsequence */,
				501368302423C5C600CF0C4B /* wordBreak */,
				5013683F2423C5C600CF0C4B /* wordLadder */,
				5013686F2423C5C600CF0C4B /* wordPattern */,
				501366C32423C5C600CF0C4B /* wordSearch */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
		5013666E2423C5C500CF0C4B /* countOfSmallerNumbersAfterSelf */ = {
			isa = PBXGroup;
			children = (
				5013666F2423C5C500CF0C4B /* countOfSmallerNumbersAfterSelf.cpp */,
			);
			path = countOfSmallerNumbersAfterSelf;
			sourceTree = "<group>";
		};
		501366702423C5C500CF0C4B /* rectangleArea */ = {
			isa = PBXGroup;
			children = (
				501366712423C5C500CF0C4B /* RectangleArea.cpp */,
			);
			path = rectangleArea;
			sourceTree = "<group>";
		};
		501366722423C5C500CF0C4B /* maximalSquare */ = {
			isa = PBXGroup;
			children = (
				501366732423C5C500CF0C4B /* MaximalSquare.cpp */,
			);
			path = maximalSquare;
			sourceTree = "<group>";
		};
		501366742423C5C500CF0C4B /* timeBasedKeyValueStore */ = {
			isa = PBXGroup;
			children = (
				501366752423C5C500CF0C4B /* TimeBasedKeyValueStore.cpp */,
			);
			path = timeBasedKeyValueStore;
			sourceTree = "<group>";
		};
		501366762423C5C500CF0C4B /* cousinsInBinaryTree */ = {
			isa = PBXGroup;
			children = (
				501366772423C5C500CF0C4B /* CousinsInBinaryTree.cpp */,
			);
			path = cousinsInBinaryTree;
			sourceTree = "<group>";
		};
		5013667B2423C5C500CF0C4B /* removeDuplicatesFromSortedList */ = {
			isa = PBXGroup;
			children = (
				5013667C2423C5C500CF0C4B /* removeDuplicatesFromSortedList.cpp */,
				5013667D2423C5C500CF0C4B /* removeDuplicatesFromSortedList.II.cpp */,
			);
			path = removeDuplicatesFromSortedList;
			sourceTree = "<group>";
		};
		5013667E2423C5C500CF0C4B /* searchForRange */ = {
			isa = PBXGroup;
			children = (
				5013667F2423C5C500CF0C4B /* searchForRange.cpp */,
			);
			path = searchForRange;
			sourceTree = "<group>";
		};
		501366802423C5C500CF0C4B /* removeElement */ = {
			isa = PBXGroup;
			children = (
				501366812423C5C500CF0C4B /* removeElement.cpp */,
			);
			path = removeElement;
			sourceTree = "<group>";
		};
		501366822423C5C500CF0C4B /* firstBadVersion */ = {
			isa = PBXGroup;
			children = (
				501366832423C5C500CF0C4B /* FirstBadVersion.cpp */,
			);
			path = firstBadVersion;
			sourceTree = "<group>";
		};
		501366842423C5C500CF0C4B /* convertSortedListToBinarySearchTree */ = {
			isa = PBXGroup;
			children = (
				501366852423C5C500CF0C4B /* convertSortedListToBinarySearchTree.cpp */,
			);
			path = convertSortedListToBinarySearchTree;
			sourceTree = "<group>";
		};
		501366862423C5C500CF0C4B /* trappingRainWater */ = {
			isa = PBXGroup;
			children = (
			);
			path = trappingRainWater;
			sourceTree = "<group>";
		};
		501366872423C5C500CF0C4B /* smallestStringStartingFromLeaf */ = {
			isa = PBXGroup;
			children = (
				501366882423C5C500CF0C4B /* SmallestStringStartingFromLeaf.cpp */,
			);
			path = smallestStringStartingFromLeaf;
			sourceTree = "<group>";
		};
		5013668B2423C5C500CF0C4B /* excelSheetColumnTitle */ = {
			isa = PBXGroup;
			children = (
				5013668C2423C5C500CF0C4B /* excelSheetColumnTitle.cpp */,
			);
			path = excelSheetColumnTitle;
			sourceTree = "<group>";
		};
		5013668D2423C5C500CF0C4B /* mostCommonWord */ = {
			isa = PBXGroup;
			children = (
				5013668E2423C5C500CF0C4B /* MostCommonWord.cpp */,
			);
			path = mostCommonWord;
			sourceTree = "<group>";
		};
		5013668F2423C5C500CF0C4B /* largestPerimeterTriangle */ = {
			isa = PBXGroup;
			children = (
				501366902423C5C500CF0C4B /* largestPerimeterTriangle.cpp */,
			);
			path = largestPerimeterTriangle;
			sourceTree = "<group>";
		};
		501366932423C5C500CF0C4B /* palindromicSubstrings */ = {
			isa = PBXGroup;
			children = (
				501366942423C5C500CF0C4B /* PalindromicSubstrings.cpp */,
			);
			path = palindromicSubstrings;
			sourceTree = "<group>";
		};
		501366952423C5C500CF0C4B /* pathSum */ = {
			isa = PBXGroup;
			children = (
				501366962423C5C500CF0C4B /* pathSum.cpp */,
				501366972423C5C600CF0C4B /* pathSum.II.cpp */,
			);
			path = pathSum;
			sourceTree = "<group>";
		};
		501366982423C5C600CF0C4B /* peekingIterator */ = {
			isa = PBXGroup;
			children = (
				501366992423C5C600CF0C4B /* PeekingIterator.cpp */,
			);
			path = peekingIterator;
			sourceTree = "<group>";
		};
		5013669A2423C5C600CF0C4B /* serializeAndDeserializeBinaryTree */ = {
			isa = PBXGroup;
			children = (
				5013669B2423C5C600CF0C4B /* SerializeAndDeserializeBinaryTree.cpp */,
			);
			path = serializeAndDeserializeBinaryTree;
			sourceTree = "<group>";
		};
		5013669C2423C5C600CF0C4B /* repeatedDNASequences */ = {
			isa = PBXGroup;
			children = (
				5013669D2423C5C600CF0C4B /* repeatedDNASequences.cpp */,
			);
			path = repeatedDNASequences;
			sourceTree = "<group>";
		};
		501366A02423C5C600CF0C4B /* grayCode */ = {
			isa = PBXGroup;
			children = (
				501366A12423C5C600CF0C4B /* grayCode.cpp */,
			);
			path = grayCode;
			sourceTree = "<group>";
		};
		501366A22423C5C600CF0C4B /* mergeIntervals */ = {
			isa = PBXGroup;
			children = (
				501366A32423C5C600CF0C4B /* mergeIntervals.cpp */,
			);
			path = mergeIntervals;
			sourceTree = "<group>";
		};
		501366A42423C5C600CF0C4B /* restoreIPAddresses */ = {
			isa = PBXGroup;
			children = (
				501366A52423C5C600CF0C4B /* restoreIPAddresses.cpp */,
			);
			path = restoreIPAddresses;
			sourceTree = "<group>";
		};
		501366A72423C5C600CF0C4B /* validPalindrome */ = {
			isa = PBXGroup;
			children = (
				501366A82423C5C600CF0C4B /* validPalindrome.cpp */,
			);
			path = validPalindrome;
			sourceTree = "<group>";
		};
		501366A92423C5C600CF0C4B /* slidingWindowMaximum */ = {
			isa = PBXGroup;
			children = (
				501366AA2423C5C600CF0C4B /* SlidingWindowMaximum.cpp */,
			);
			path = slidingWindowMaximum;
			sourceTree = "<group>";
		};
		501366AB2423C5C600CF0C4B /* textJustification */ = {
			isa = PBXGroup;
			children = (
				501366AC2423C5C600CF0C4B /* textJustification.cpp */,
			);
			path = textJustification;
			sourceTree = "<group>";
		};
		501366AE2423C5C600CF0C4B /* perfectSquares */ = {
			isa = PBXGroup;
			children = (
				501366AF2423C5C600CF0C4B /* PerfectSquares.cpp */,
			);
			path = perfectSquares;
			sourceTree = "<group>";
		};
		501366B02423C5C600CF0C4B /* longestTurbulentSubarray */ = {
			isa = PBXGroup;
			children = (
				501366B12423C5C600CF0C4B /* LongestTurbulentSubarray.cpp */,
			);
			path = longestTurbulentSubarray;
			sourceTree = "<group>";
		};
		501366B22423C5C600CF0C4B /* maximalRectangle */ = {
			isa = PBXGroup;
			children = (
				501366B32423C5C600CF0C4B /* maximalRectangle.cpp */,
			);
			path = maximalRectangle;
			sourceTree = "<group>";
		};
		501366B42423C5C600CF0C4B /* intervalListIntersectons */ = {
			isa = PBXGroup;
			children = (
				501366B52423C5C600CF0C4B /* IntervalListIntersections.cpp */,
			);
			path = intervalListIntersectons;
			sourceTree = "<group>";
		};
		501366B62423C5C600CF0C4B /* implementTriePrefixTree */ = {
			isa = PBXGroup;
			children = (
				501366B72423C5C600CF0C4B /* ImplementTriePrefixTree.cpp */,
			);
			path = implementTriePrefixTree;
			sourceTree = "<group>";
		};
		501366B82423C5C600CF0C4B /* stringWithoutAAAOrBBB */ = {
			isa = PBXGroup;
			children = (
				501366B92423C5C600CF0C4B /* StringWithoutAAAOrBBB.cpp */,
			);
			path = stringWithoutAAAOrBBB;
			sourceTree = "<group>";
		};
		501366BB2423C5C600CF0C4B /* surroundedRegions */ = {
			isa = PBXGroup;
			children = (
				501366BC2423C5C600CF0C4B /* surroundedRegions.cpp */,
			);
			path = surroundedRegions;
			sourceTree = "<group>";
		};
		501366BD2423C5C600CF0C4B /* productOfArrayExceptSelf */ = {
			isa = PBXGroup;
			children = (
				501366BE2423C5C600CF0C4B /* ProductOfArrayExceptSelf.cpp */,
			);
			path = productOfArrayExceptSelf;
			sourceTree = "<group>";
		};
		501366BF2423C5C600CF0C4B /* decodeString */ = {
			isa = PBXGroup;
			children = (
				501366C02423C5C600CF0C4B /* DecodeString.cpp */,
			);
			path = decodeString;
			sourceTree = "<group>";
		};
		501366C12423C5C600CF0C4B /* verifyPreorderSerializationOfABinaryTree */ = {
			isa = PBXGroup;
			children = (
				501366C22423C5C600CF0C4B /* VerifyPreorderSerializationOfABinaryTree.cpp */,
			);
			path = verifyPreorderSerializationOfABinaryTree;
			sourceTree = "<group>";
		};
		501366C32423C5C600CF0C4B /* wordSearch */ = {
			isa = PBXGroup;
			children = (
				501366C42423C5C600CF0C4B /* wordSearch.cpp */,
				501366C52423C5C600CF0C4B /* wordSearch.II.cpp */,
			);
			path = wordSearch;
			sourceTree = "<group>";
		};
		501366C62423C5C600CF0C4B /* insertDeleteGetRandom */ = {
			isa = PBXGroup;
			children = (
				501366C72423C5C600CF0C4B /* InsertDeleteGetrandomO1.cpp */,
				501366C82423C5C600CF0C4B /* InsertDeleteGetrandomO1DuplicatesAllowed.cpp */,
			);
			path = insertDeleteGetRandom;
			sourceTree = "<group>";
		};
		501366C92423C5C600CF0C4B /* longestSubstringWithAtMostTwoDistinctCharacters */ = {
			isa = PBXGroup;
			children = (
				501366CA2423C5C600CF0C4B /* longestSubstringWithAtMostTwoDistinctCharacters.cpp */,
			);
			path = longestSubstringWithAtMostTwoDistinctCharacters;
			sourceTree = "<group>";
		};
		501366CB2423C5C600CF0C4B /* totalHammingDistance */ = {
			isa = PBXGroup;
			children = (
				501366CC2423C5C600CF0C4B /* totalHammingDistance.cpp */,
			);
			path = totalHammingDistance;
			sourceTree = "<group>";
		};
		501366CD2423C5C600CF0C4B /* minimumWindowSubstring */ = {
			isa = PBXGroup;
			children = (
				501366CE2423C5C600CF0C4B /* minimumWindowSubstring.cpp */,
			);
			path = minimumWindowSubstring;
			sourceTree = "<group>";
		};
		501366CF2423C5C600CF0C4B /* sumRootToLeafNumber */ = {
			isa = PBXGroup;
			children = (
				501366D02423C5C600CF0C4B /* sumRootToLeafNumber.cpp */,
			);
			path = sumRootToLeafNumber;
			sourceTree = "<group>";
		};
		501366D22423C5C600CF0C4B /* lowestCommonAncestorOfABinaryTree */ = {
			isa = PBXGroup;
			children = (
				501366D32423C5C600CF0C4B /* LowestCommonAncestorOfABinaryTree.cpp */,
			);
			path = lowestCommonAncestorOfABinaryTree;
			sourceTree = "<group>";
		};
		501366D42423C5C600CF0C4B /* interleavingString */ = {
			isa = PBXGroup;
			children = (
				501366D52423C5C600CF0C4B /* interleavingString.cpp */,
			);
			path = interleavingString;
			sourceTree = "<group>";
		};
		501366D72423C5C600CF0C4B /* longestAbsoluteFilePath */ = {
			isa = PBXGroup;
			children = (
				501366D82423C5C600CF0C4B /* LongestAbsoluteFilePath.cpp */,
			);
			path = longestAbsoluteFilePath;
			sourceTree = "<group>";
		};
		501366DC2423C5C600CF0C4B /* validSudoku */ = {
			isa = PBXGroup;
			children = (
				501366DD2423C5C600CF0C4B /* validSudoku.cpp */,
			);
			path = validSudoku;
			sourceTree = "<group>";
		};
		501366DF2423C5C600CF0C4B /* jumpGame */ = {
			isa = PBXGroup;
			children = (
			);
			path = jumpGame;
			sourceTree = "<group>";
		};
		501366E12423C5C600CF0C4B /* ransomNote */ = {
			isa = PBXGroup;
			children = (
				501366E22423C5C600CF0C4B /* RansomNote.cpp */,
			);
			path = ransomNote;
			sourceTree = "<group>";
		};
		501366E42423C5C600CF0C4B /* validNumber */ = {
			isa = PBXGroup;
			children = (
				501366E52423C5C600CF0C4B /* validNumber.cpp */,
			);
			path = validNumber;
			sourceTree = "<group>";
		};
		501366E62423C5C600CF0C4B /* countOfRangeSum */ = {
			isa = PBXGroup;
			children = (
				501366E72423C5C600CF0C4B /* CountOfRangeSum.cpp */,
			);
			path = countOfRangeSum;
			sourceTree = "<group>";
		};
		501366E92423C5C600CF0C4B /* perfectRectangle */ = {
			isa = PBXGroup;
			children = (
				501366EA2423C5C600CF0C4B /* PerfectRectangle.cpp */,
			);
			path = perfectRectangle;
			sourceTree = "<group>";
		};
		501366EC2423C5C600CF0C4B /* evaluateReversePolishNotation */ = {
			isa = PBXGroup;
			children = (
				501366ED2423C5C600CF0C4B /* evaluateReversePolishNotation.cpp */,
			);
			path = evaluateReversePolishNotation;
			sourceTree = "<group>";
		};
		501366EE2423C5C600CF0C4B /* gasStation */ = {
			isa = PBXGroup;
			children = (
				501366EF2423C5C600CF0C4B /* gasStation.cpp */,
			);
			path = gasStation;
			sourceTree = "<group>";
		};
		501366F12423C5C600CF0C4B /* numberOfIslands */ = {
			isa = PBXGroup;
			children = (
				501366F22423C5C600CF0C4B /* NumberOfIslands.cpp */,
			);
			path = numberOfIslands;
			sourceTree = "<group>";
		};
		501366F32423C5C600CF0C4B /* minimumSizeSubarraySum */ = {
			isa = PBXGroup;
			children = (
				501366F42423C5C600CF0C4B /* MinimumSizeSubarraySum.cpp */,
			);
			path = minimumSizeSubarraySum;
			sourceTree = "<group>";
		};
		501366F52423C5C600CF0C4B /* findMedianFromDataStream */ = {
			isa = PBXGroup;
			children = (
				501366F62423C5C600CF0C4B /* FindMedianFromDataStream.cpp */,
			);
			path = findMedianFromDataStream;
			sourceTree = "<group>";
		};
		501366F72423C5C600CF0C4B /* distinctSubsequences */ = {
			isa = PBXGroup;
			children = (
				501366F82423C5C600CF0C4B /* distinctSubsequences.cpp */,
			);
			path = distinctSubsequences;
			sourceTree = "<group>";
		};
		501366F92423C5C600CF0C4B /* reorderList */ = {
			isa = PBXGroup;
			children = (
				501366FA2423C5C600CF0C4B /* reorderList.cpp */,
			);
			path = reorderList;
			sourceTree = "<group>";
		};
		501366FB2423C5C600CF0C4B /* missingRanges */ = {
			isa = PBXGroup;
			children = (
				501366FC2423C5C600CF0C4B /* missingRanges.cpp */,
			);
			path = missingRanges;
			sourceTree = "<group>";
		};
		501366FE2423C5C600CF0C4B /* invertBinaryTree */ = {
			isa = PBXGroup;
			children = (
				501366FF2423C5C600CF0C4B /* InvertBinaryTree.cpp */,
			);
			path = invertBinaryTree;
			sourceTree = "<group>";
		};
		501367002423C5C600CF0C4B /* linkedListCycle */ = {
			isa = PBXGroup;
			children = (
				501367012423C5C600CF0C4B /* linkedListCycle.II.cpp */,
				501367022423C5C600CF0C4B /* linkedListCycle.cpp */,
			);
			path = linkedListCycle;
			sourceTree = "<group>";
		};
		501367032423C5C600CF0C4B /* validateBinarySearchTree */ = {
			isa = PBXGroup;
			children = (
				501367042423C5C600CF0C4B /* validateBinarySearchTree.cpp */,
			);
			path = validateBinarySearchTree;
			sourceTree = "<group>";
		};
		501367072423C5C600CF0C4B /* minimumCostForTickets */ = {
			isa = PBXGroup;
			children = (
				501367082423C5C600CF0C4B /* MinimumCostForTickets.cpp */,
			);
			path = minimumCostForTickets;
			sourceTree = "<group>";
		};
		5013670A2423C5C600CF0C4B /* factorialTrailingZeroes */ = {
			isa = PBXGroup;
			children = (
				5013670B2423C5C600CF0C4B /* factorialTrailingZeroes.cpp */,
			);
			path = factorialTrailingZeroes;
			sourceTree = "<group>";
		};
		5013670E2423C5C600CF0C4B /* reverseLinkedList */ = {
			isa = PBXGroup;
			children = (
				5013670F2423C5C600CF0C4B /* reverseLinkedList.cpp */,
				501367102423C5C600CF0C4B /* reverseLinkedList.II.cpp */,
			);
			path = reverseLinkedList;
			sourceTree = "<group>";
		};
		501367112423C5C600CF0C4B /* numberOf1Bits */ = {
			isa = PBXGroup;
			children = (
				501367122423C5C600CF0C4B /* numberOf1Bits.cpp */,
			);
			path = numberOf1Bits;
			sourceTree = "<group>";
		};
		501367132423C5C600CF0C4B /* sumOfLeftLeaves */ = {
			isa = PBXGroup;
			children = (
				501367142423C5C600CF0C4B /* SumOfLeftLeaves.cpp */,
			);
			path = sumOfLeftLeaves;
			sourceTree = "<group>";
		};
		501367162423C5C600CF0C4B /* theSkylineProblem */ = {
			isa = PBXGroup;
			children = (
				501367172423C5C600CF0C4B /* TheSkylineProblem.cpp */,
			);
			path = theSkylineProblem;
			sourceTree = "<group>";
		};
		501367192423C5C600CF0C4B /* search2DMatrix */ = {
			isa = PBXGroup;
			children = (
				5013671A2423C5C600CF0C4B /* search2DMatrix.II.cpp */,
				5013671B2423C5C600CF0C4B /* search2DMatrix.cpp */,
			);
			path = search2DMatrix;
			sourceTree = "<group>";
		};
		5013671C2423C5C600CF0C4B /* miniParser */ = {
			isa = PBXGroup;
			children = (
				5013671D2423C5C600CF0C4B /* MiniParser.cpp */,
			);
			path = miniParser;
			sourceTree = "<group>";
		};
		5013671E2423C5C600CF0C4B /* convertSortedArrayToBinarySearchTree */ = {
			isa = PBXGroup;
			children = (
				5013671F2423C5C600CF0C4B /* convertSortedArrayToBinarySearchTree.cpp */,
			);
			path = convertSortedArrayToBinarySearchTree;
			sourceTree = "<group>";
		};
		501367222423C5C600CF0C4B /* satisfiabilityOfEqualityEquations */ = {
			isa = PBXGroup;
			children = (
				501367232423C5C600CF0C4B /* SatisfiabilityOfEqualityEquations.cpp */,
			);
			path = satisfiabilityOfEqualityEquations;
			sourceTree = "<group>";
		};
		501367242423C5C600CF0C4B /* topKFrequentElements */ = {
			isa = PBXGroup;
			children = (
				501367252423C5C600CF0C4B /* topKFrequentElements.cpp */,
			);
			path = topKFrequentElements;
			sourceTree = "<group>";
		};
		501367262423C5C600CF0C4B /* sortList */ = {
			isa = PBXGroup;
			children = (
				501367272423C5C600CF0C4B /* sortList.cpp */,
			);
			path = sortList;
			sourceTree = "<group>";
		};
		501367282423C5C600CF0C4B /* squaresOfASortedArray */ = {
			isa = PBXGroup;
			children = (
				501367292423C5C600CF0C4B /* SquaresOfASortedArray.cpp */,
			);
			path = squaresOfASortedArray;
			sourceTree = "<group>";
		};
		5013672A2423C5C600CF0C4B /* convertANumberToHexadecimal */ = {
			isa = PBXGroup;
			children = (
			);
			path = convertANumberToHexadecimal;
			sourceTree = "<group>";
		};
		5013672C2423C5C600CF0C4B /* moveZeroes */ = {
			isa = PBXGroup;
			children = (
				5013672D2423C5C600CF0C4B /* moveZeroes.cpp */,
			);
			path = moveZeroes;
			sourceTree = "<group>";
		};
		5013672E2423C5C600CF0C4B /* findPeakElement */ = {
			isa = PBXGroup;
			children = (
				5013672F2423C5C600CF0C4B /* findPeakElement.cpp */,
			);
			path = findPeakElement;
			sourceTree = "<group>";
		};
		501367302423C5C600CF0C4B /* countNumbersWithUniqueDigits */ = {
			isa = PBXGroup;
			children = (
				501367312423C5C600CF0C4B /* CountNumbersWithUniqueDigits.cpp */,
			);
			path = countNumbersWithUniqueDigits;
			sourceTree = "<group>";
		};
		501367332423C5C600CF0C4B /* minStack */ = {
			isa = PBXGroup;
			children = (
				501367342423C5C600CF0C4B /* minStack.cpp */,
			);
			path = minStack;
			sourceTree = "<group>";
		};
		501367352423C5C600CF0C4B /* flattenBinaryTreeToLinkedList */ = {
			isa = PBXGroup;
			children = (
				501367362423C5C600CF0C4B /* flattenBinaryTreeToLinkedList.cpp */,
			);
			path = flattenBinaryTreeToLinkedList;
			sourceTree = "<group>";
		};
		501367372423C5C600CF0C4B /* recoverATreeFromPreorderTraversal */ = {
			isa = PBXGroup;
			children = (
				501367382423C5C600CF0C4B /* recoverATreeFromPreorderTraversal.cpp */,
			);
			path = recoverATreeFromPreorderTraversal;
			sourceTree = "<group>";
		};
		501367392423C5C600CF0C4B /* nextPermutation */ = {
			isa = PBXGroup;
			children = (
				5013673A2423C5C600CF0C4B /* nextPermutation.cpp */,
			);
			path = nextPermutation;
			sourceTree = "<group>";
		};
		5013673B2423C5C600CF0C4B /* rangeSumQuery-Immutable */ = {
			isa = PBXGroup;
			children = (
				5013673C2423C5C600CF0C4B /* rangeSumQuery-Mutable */,
				5013673E2423C5C600CF0C4B /* rangeSumQuery-Immutable.cpp */,
			);
			path = "rangeSumQuery-Immutable";
			sourceTree = "<group>";
		};
		5013673C2423C5C600CF0C4B /* rangeSumQuery-Mutable */ = {
			isa = PBXGroup;
			children = (
				5013673D2423C5C600CF0C4B /* RangeSumQueryMutable.cpp */,
			);
			path = "rangeSumQuery-Mutable";
			sourceTree = "<group>";
		};
		501367452423C5C600CF0C4B /* nRepeatedElementInSize2NArray */ = {
			isa = PBXGroup;
			children = (
				501367462423C5C600CF0C4B /* N-Repeated-Element-in-Size-2N-Array.cpp */,
			);
			path = nRepeatedElementInSize2NArray;
			sourceTree = "<group>";
		};
		501367472423C5C600CF0C4B /* pascalTriangle */ = {
			isa = PBXGroup;
			children = (
				501367482423C5C600CF0C4B /* pascalTriangle.cpp */,
				501367492423C5C600CF0C4B /* pascalTriangle.II.cpp */,
			);
			path = pascalTriangle;
			sourceTree = "<group>";
		};
		5013674A2423C5C600CF0C4B /* eliminationGame */ = {
			isa = PBXGroup;
			children = (
				5013674B2423C5C600CF0C4B /* EliminationGame.cpp */,
			);
			path = eliminationGame;
			sourceTree = "<group>";
		};
		5013674C2423C5C600CF0C4B /* isSubsequence */ = {
			isa = PBXGroup;
			children = (
				5013674D2423C5C600CF0C4B /* IsSubsequence.cpp */,
			);
			path = isSubsequence;
			sourceTree = "<group>";
		};
		5013674E2423C5C600CF0C4B /* uniqueBinarySearchTrees */ = {
			isa = PBXGroup;
			children = (
				5013674F2423C5C600CF0C4B /* uniqueBinarySearchTrees.II.cpp */,
				501367502423C5C600CF0C4B /* uniqueBinarySearchTrees.cpp */,
			);
			path = uniqueBinarySearchTrees;
			sourceTree = "<group>";
		};
		501367522423C5C600CF0C4B /* deleteNodeInALinkedList */ = {
			isa = PBXGroup;
			children = (
				501367532423C5C600CF0C4B /* DeleteNodeInALinkedList.cpp */,
			);
			path = deleteNodeInALinkedList;
			sourceTree = "<group>";
		};
		501367542423C5C600CF0C4B /* triangle */ = {
			isa = PBXGroup;
			children = (
				501367552423C5C600CF0C4B /* triangle.cpp */,
			);
			path = triangle;
			sourceTree = "<group>";
		};
		501367562423C5C600CF0C4B /* longestConsecutiveSequence */ = {
			isa = PBXGroup;
			children = (
				501367572423C5C600CF0C4B /* longestConsecutiveSequence.cpp */,
			);
			path = longestConsecutiveSequence;
			sourceTree = "<group>";
		};
		501367582423C5C600CF0C4B /* expressionAddOperators */ = {
			isa = PBXGroup;
			children = (
				501367592423C5C600CF0C4B /* ExpressionAddOperators.cpp */,
			);
			path = expressionAddOperators;
			sourceTree = "<group>";
		};
		5013675B2423C5C600CF0C4B /* UTF8Validation */ = {
			isa = PBXGroup;
			children = (
				5013675C2423C5C600CF0C4B /* UTF8Validation.cpp */,
			);
			path = UTF8Validation;
			sourceTree = "<group>";
		};
		5013675D2423C5C600CF0C4B /* countAndSay */ = {
			isa = PBXGroup;
			children = (
				5013675E2423C5C600CF0C4B /* countAndSay.cpp */,
			);
			path = countAndSay;
			sourceTree = "<group>";
		};
		501367612423C5C600CF0C4B /* sortColors */ = {
			isa = PBXGroup;
			children = (
				501367622423C5C600CF0C4B /* sortColors.cpp */,
			);
			path = sortColors;
			sourceTree = "<group>";
		};
		501367632423C5C600CF0C4B /* reverseBits */ = {
			isa = PBXGroup;
			children = (
				501367642423C5C600CF0C4B /* reverseBits.cpp */,
			);
			path = reverseBits;
			sourceTree = "<group>";
		};
		501367662423C5C600CF0C4B /* flattenNestedListIterator */ = {
			isa = PBXGroup;
			children = (
				501367672423C5C600CF0C4B /* FlattenNestedListIterator.cpp */,
			);
			path = flattenNestedListIterator;
			sourceTree = "<group>";
		};
		501367682423C5C600CF0C4B /* editDistance */ = {
			isa = PBXGroup;
			children = (
				501367692423C5C600CF0C4B /* editDistance.cpp */,
			);
			path = editDistance;
			sourceTree = "<group>";
		};
		5013676A2423C5C600CF0C4B /* minimumASCIIDeleteSumForTwoStrings */ = {
			isa = PBXGroup;
			children = (
				5013676B2423C5C600CF0C4B /* MinimumAsciiDeleteSumForTwoStrings.cpp */,
			);
			path = minimumASCIIDeleteSumForTwoStrings;
			sourceTree = "<group>";
		};
		5013676C2423C5C600CF0C4B /* sameTree */ = {
			isa = PBXGroup;
			children = (
				5013676D2423C5C600CF0C4B /* sameTree.cpp */,
			);
			path = sameTree;
			sourceTree = "<group>";
		};
		5013676E2423C5C600CF0C4B /* nimGame */ = {
			isa = PBXGroup;
			children = (
				5013676F2423C5C600CF0C4B /* nimGame.cpp */,
			);
			path = nimGame;
			sourceTree = "<group>";
		};
		501367702423C5C600CF0C4B /* maximumDepthOfBinaryTree */ = {
			isa = PBXGroup;
			children = (
				501367712423C5C600CF0C4B /* maximumDepthOfBinaryTree.cpp */,
			);
			path = maximumDepthOfBinaryTree;
			sourceTree = "<group>";
		};
		501367772423C5C600CF0C4B /* countCompleteTreeNodes */ = {
			isa = PBXGroup;
			children = (
				501367782423C5C600CF0C4B /* CountCompleteTreeNodes.cpp */,
			);
			path = countCompleteTreeNodes;
			sourceTree = "<group>";
		};
		5013677B2423C5C600CF0C4B /* twoCityScheduling */ = {
			isa = PBXGroup;
			children = (
				5013677C2423C5C600CF0C4B /* TwoCityScheduling.cpp */,
			);
			path = twoCityScheduling;
			sourceTree = "<group>";
		};
		5013677D2423C5C600CF0C4B /* maximumAverageSubarray */ = {
			isa = PBXGroup;
			children = (
				5013677E2423C5C600CF0C4B /* MaximumAverageSubarray.I.cpp */,
			);
			path = maximumAverageSubarray;
			sourceTree = "<group>";
		};
		5013677F2423C5C600CF0C4B /* maximumGap */ = {
			isa = PBXGroup;
			children = (
				501367802423C5C600CF0C4B /* maximumGap.cpp */,
			);
			path = maximumGap;
			sourceTree = "<group>";
		};
		501367812423C5C600CF0C4B /* islandPerimeter */ = {
			isa = PBXGroup;
			children = (
				501367822423C5C600CF0C4B /* IslandPerimeter.cpp */,
			);
			path = islandPerimeter;
			sourceTree = "<group>";
		};
		501367892423C5C600CF0C4B /* lowestCommonAncestorOfABinarySearchTree */ = {
			isa = PBXGroup;
			children = (
				5013678A2423C5C600CF0C4B /* LowestCommonAncestorOfABinarySearchTree.cpp */,
			);
			path = lowestCommonAncestorOfABinarySearchTree;
			sourceTree = "<group>";
		};
		5013678B2423C5C600CF0C4B /* singleNumber */ = {
			isa = PBXGroup;
			children = (
				5013678C2423C5C600CF0C4B /* singleNumber.III.cpp */,
				5013678D2423C5C600CF0C4B /* singleNumber.cpp */,
			);
			path = singleNumber;
			sourceTree = "<group>";
		};
		5013678E2423C5C600CF0C4B /* wiggleSort */ = {
			isa = PBXGroup;
			children = (
				5013678F2423C5C600CF0C4B /* WiggleSort.II.cpp */,
			);
			path = wiggleSort;
			sourceTree = "<group>";
		};
		501367902423C5C600CF0C4B /* peakIndexInAMountainArray */ = {
			isa = PBXGroup;
			children = (
				501367912423C5C600CF0C4B /* PeakIndexInAMountainArray.cpp */,
			);
			path = peakIndexInAMountainArray;
			sourceTree = "<group>";
		};
		501367922423C5C600CF0C4B /* removeDuplicateLetters */ = {
			isa = PBXGroup;
			children = (
				501367932423C5C600CF0C4B /* RemoveDuplicateLetters.cpp */,
			);
			path = removeDuplicateLetters;
			sourceTree = "<group>";
		};
		501367942423C5C600CF0C4B /* sqrt */ = {
			isa = PBXGroup;
			children = (
				501367952423C5C600CF0C4B /* sqrt.cpp */,
			);
			path = sqrt;
			sourceTree = "<group>";
		};
		501367962423C5C600CF0C4B /* simplifyPath */ = {
			isa = PBXGroup;
			children = (
				501367972423C5C600CF0C4B /* simplifyPath.cpp */,
			);
			path = simplifyPath;
			sourceTree = "<group>";
		};
		501367982423C5C600CF0C4B /* lexicographicalNumbers */ = {
			isa = PBXGroup;
			children = (
				501367992423C5C600CF0C4B /* LexicographicalNumbers.cpp */,
			);
			path = lexicographicalNumbers;
			sourceTree = "<group>";
		};
		5013679A2423C5C600CF0C4B /* substringWithConcatenationOfAllWords */ = {
			isa = PBXGroup;
			children = (
				5013679B2423C5C600CF0C4B /* substringWithConcatenationOfAllWords.cpp */,
			);
			path = substringWithConcatenationOfAllWords;
			sourceTree = "<group>";
		};
		5013679C2423C5C600CF0C4B /* findTheDuplicateNumber */ = {
			isa = PBXGroup;
			children = (
				5013679D2423C5C600CF0C4B /* findTheDuplicateNumber.cpp */,
			);
			path = findTheDuplicateNumber;
			sourceTree = "<group>";
		};
		5013679F2423C5C600CF0C4B /* nthDigit */ = {
			isa = PBXGroup;
			children = (
				501367A02423C5C600CF0C4B /* NthDigit.cpp */,
			);
			path = nthDigit;
			sourceTree = "<group>";
		};
		501367A12423C5C600CF0C4B /* minimumPathSum */ = {
			isa = PBXGroup;
			children = (
				501367A22423C5C600CF0C4B /* minimumPathSum.cpp */,
			);
			path = minimumPathSum;
			sourceTree = "<group>";
		};
		501367A42423C5C600CF0C4B /* lengthOfLastWord */ = {
			isa = PBXGroup;
			children = (
				501367A52423C5C600CF0C4B /* lengthOfLastWord.cpp */,
			);
			path = lengthOfLastWord;
			sourceTree = "<group>";
		};
		501367A82423C5C600CF0C4B /* minCostClimbingStairs */ = {
			isa = PBXGroup;
			children = (
				501367A92423C5C600CF0C4B /* MinCostClimbingStairs.cpp */,
			);
			path = minCostClimbingStairs;
			sourceTree = "<group>";
		};
		501367AA2423C5C600CF0C4B /* increasingTripletSubsequence */ = {
			isa = PBXGroup;
			children = (
				501367AB2423C5C600CF0C4B /* increasingTripletSubsequence.cpp */,
			);
			path = increasingTripletSubsequence;
			sourceTree = "<group>";
		};
		501367AC2423C5C600CF0C4B /* frogJump */ = {
			isa = PBXGroup;
			children = (
				501367AD2423C5C600CF0C4B /* FrogJump.cpp */,
			);
			path = frogJump;
			sourceTree = "<group>";
		};
		501367AE2423C5C600CF0C4B /* searchInRotatedSortedArray */ = {
			isa = PBXGroup;
			children = (
				501367AF2423C5C600CF0C4B /* searchInRotatedSortedArray.cpp */,
				501367B02423C5C600CF0C4B /* searchInRotatedSortedArray.II.cpp */,
			);
			path = searchInRotatedSortedArray;
			sourceTree = "<group>";
		};
		501367B22423C5C600CF0C4B /* implementQueueUsingStacks */ = {
			isa = PBXGroup;
			children = (
				501367B32423C5C600CF0C4B /* ImplementQueueUsingStacks.cpp */,
			);
			path = implementQueueUsingStacks;
			sourceTree = "<group>";
		};
		501367B42423C5C600CF0C4B /* removeKDigits */ = {
			isa = PBXGroup;
			children = (
				501367B52423C5C600CF0C4B /* RemoveKDigits.cpp */,
			);
			path = removeKDigits;
			sourceTree = "<group>";
		};
		501367BA2423C5C600CF0C4B /* reconstructItinerary */ = {
			isa = PBXGroup;
			children = (
				501367BB2423C5C600CF0C4B /* ReconstructItinerary.cpp */,
			);
			path = reconstructItinerary;
			sourceTree = "<group>";
		};
		501367BD2423C5C600CF0C4B /* removeDuplicatesFromSortedArray */ = {
			isa = PBXGroup;
			children = (
				501367BE2423C5C600CF0C4B /* removeDuplicatesFromSortedArray.II.cpp */,
				501367BF2423C5C600CF0C4B /* removeDuplicatesFromSortedArray.cpp */,
			);
			path = removeDuplicatesFromSortedArray;
			sourceTree = "<group>";
		};
		501367C02423C5C600CF0C4B /* mirrorReflection */ = {
			isa = PBXGroup;
			children = (
				501367C12423C5C600CF0C4B /* MirrorReflection.cpp */,
			);
			path = mirrorReflection;
			sourceTree = "<group>";
		};
		501367C22423C5C600CF0C4B /* verticalOrderTraversalOfABinaryTree */ = {
			isa = PBXGroup;
			children = (
				501367C32423C5C600CF0C4B /* VerticalOrderTraversalOfABinaryTree.cpp */,
			);
			path = verticalOrderTraversalOfABinaryTree;
			sourceTree = "<group>";
		};
		501367C52423C5C600CF0C4B /* sumOfEvenNumbersAfterQueries */ = {
			isa = PBXGroup;
			children = (
				501367C62423C5C600CF0C4B /* SumOfEvenNumbersAfterQueries.cpp */,
			);
			path = sumOfEvenNumbersAfterQueries;
			sourceTree = "<group>";
		};
		501367C72423C5C600CF0C4B /* recoverBinarySearchTree */ = {
			isa = PBXGroup;
			children = (
				501367C82423C5C600CF0C4B /* recoverBinarySearchTree.cpp */,
			);
			path = recoverBinarySearchTree;
			sourceTree = "<group>";
		};
		501367CA2423C5C600CF0C4B /* longestPalindrome */ = {
			isa = PBXGroup;
			children = (
				501367CB2423C5C600CF0C4B /* LongestPalindrome.cpp */,
			);
			path = longestPalindrome;
			sourceTree = "<group>";
		};
		501367CC2423C5C600CF0C4B /* insertInterval */ = {
			isa = PBXGroup;
			children = (
				501367CD2423C5C600CF0C4B /* insertInterval.cpp */,
			);
			path = insertInterval;
			sourceTree = "<group>";
		};
		501367CE2423C5C600CF0C4B /* minimumFallingPathSum */ = {
			isa = PBXGroup;
			children = (
				501367CF2423C5C600CF0C4B /* MinimumFallingPathSum.cpp */,
			);
			path = minimumFallingPathSum;
			sourceTree = "<group>";
		};
		501367D12423C5C600CF0C4B /* mergeTwoSortedArray */ = {
			isa = PBXGroup;
			children = (
				501367D22423C5C600CF0C4B /* mergeTwoSortedArray.cpp */,
			);
			path = mergeTwoSortedArray;
			sourceTree = "<group>";
		};
		501367D32423C5C600CF0C4B /* courseSchedule */ = {
			isa = PBXGroup;
			children = (
				501367D42423C5C600CF0C4B /* CourseSchedule.cpp */,
				501367D52423C5C600CF0C4B /* non-recursive */,
				501367D82423C5C600CF0C4B /* CourseSchedule.II.cpp */,
			);
			path = courseSchedule;
			sourceTree = "<group>";
		};
		501367D52423C5C600CF0C4B /* non-recursive */ = {
			isa = PBXGroup;
			children = (
				501367D62423C5C600CF0C4B /* course_schedule.cpp */,
				501367D72423C5C600CF0C4B /* main.cpp */,
			);
			path = "non-recursive";
			sourceTree = "<group>";
		};
		501367D92423C5C600CF0C4B /* kthLargestElementInAnArray */ = {
			isa = PBXGroup;
			children = (
				501367DA2423C5C600CF0C4B /* KthLargestElementInAnArray.cpp */,
			);
			path = kthLargestElementInAnArray;
			sourceTree = "<group>";
		};
		501367DC2423C5C600CF0C4B /* uniquePaths */ = {
			isa = PBXGroup;
			children = (
				501367DD2423C5C600CF0C4B /* UniquePaths.III.cpp */,
				501367DE2423C5C600CF0C4B /* uniquePaths.cpp */,
				501367DF2423C5C600CF0C4B /* uniquePaths.II.cpp */,
			);
			path = uniquePaths;
			sourceTree = "<group>";
		};
		501367E02423C5C600CF0C4B /* minimumHeightTrees */ = {
			isa = PBXGroup;
			children = (
				501367E12423C5C600CF0C4B /* MinimumHeightTrees.cpp */,
			);
			path = minimumHeightTrees;
			sourceTree = "<group>";
		};
		501367E22423C5C600CF0C4B /* summaryRanges */ = {
			isa = PBXGroup;
			children = (
				501367E32423C5C600CF0C4B /* SummaryRanges.cpp */,
			);
			path = summaryRanges;
			sourceTree = "<group>";
		};
		501367E72423C5C600CF0C4B /* populatingNextRightPointersInEachNode */ = {
			isa = PBXGroup;
			children = (
				501367E82423C5C600CF0C4B /* populatingNextRightPointersInEachNode.II.cpp */,
				501367E92423C5C600CF0C4B /* populatingNextRightPointersInEachNode.cpp */,
			);
			path = populatingNextRightPointersInEachNode;
			sourceTree = "<group>";
		};
		501367EA2423C5C600CF0C4B /* partitionEqualSubsetSum */ = {
			isa = PBXGroup;
			children = (
				501367EB2423C5C600CF0C4B /* PartitionEqualSubsetSum.cpp */,
			);
			path = partitionEqualSubsetSum;
			sourceTree = "<group>";
		};
		501367EC2423C5C600CF0C4B /* rotateList */ = {
			isa = PBXGroup;
			children = (
				501367ED2423C5C600CF0C4B /* rotateList.cpp */,
			);
			path = rotateList;
			sourceTree = "<group>";
		};
		501367EE2423C5C600CF0C4B /* happyNumber */ = {
			isa = PBXGroup;
			children = (
				501367EF2423C5C600CF0C4B /* HappyNumber.cpp */,
			);
			path = happyNumber;
			sourceTree = "<group>";
		};
		501367F02423C5C600CF0C4B /* maximumProductOfWordLengths */ = {
			isa = PBXGroup;
			children = (
				501367F12423C5C600CF0C4B /* MaximumProductOfWordLengths.cpp */,
			);
			path = maximumProductOfWordLengths;
			sourceTree = "<group>";
		};
		501367F22423C5C600CF0C4B /* copyListWithRandomPointer */ = {
			isa = PBXGroup;
			children = (
				501367F32423C5C600CF0C4B /* copyListWithRandomPointer.cpp */,
			);
			path = copyListWithRandomPointer;
			sourceTree = "<group>";
		};
		501367F42423C5C600CF0C4B /* differentWaysToAddParentheses */ = {
			isa = PBXGroup;
			children = (
				501367F52423C5C600CF0C4B /* DifferentWaysToAddParentheses.cpp */,
			);
			path = differentWaysToAddParentheses;
			sourceTree = "<group>";
		};
		501367F72423C5C600CF0C4B /* insertionSortList */ = {
			isa = PBXGroup;
			children = (
				501367F82423C5C600CF0C4B /* insertionSortList.cpp */,
			);
			path = insertionSortList;
			sourceTree = "<group>";
		};
		501367F92423C5C600CF0C4B /* isomorphicStrings */ = {
			isa = PBXGroup;
			children = (
				501367FA2423C5C600CF0C4B /* IsomorphicStrings.cpp */,
			);
			path = isomorphicStrings;
			sourceTree = "<group>";
		};
		501367FB2423C5C600CF0C4B /* searchInsertPosition */ = {
			isa = PBXGroup;
			children = (
				501367FC2423C5C600CF0C4B /* searchInsertPosition.cpp */,
			);
			path = searchInsertPosition;
			sourceTree = "<group>";
		};
		501367FD2423C5C600CF0C4B /* findTheDifference */ = {
			isa = PBXGroup;
			children = (
				501367FE2423C5C600CF0C4B /* FindTheDifference.cpp */,
			);
			path = findTheDifference;
			sourceTree = "<group>";
		};
		501367FF2423C5C600CF0C4B /* integerReplacement */ = {
			isa = PBXGroup;
			children = (
				501368002423C5C600CF0C4B /* IntegerReplacement.cpp */,
			);
			path = integerReplacement;
			sourceTree = "<group>";
		};
		501368052423C5C600CF0C4B /* rotateFunction */ = {
			isa = PBXGroup;
			children = (
				501368062423C5C600CF0C4B /* RotateFunction.cpp */,
			);
			path = rotateFunction;
			sourceTree = "<group>";
		};
		501368072423C5C600CF0C4B /* divideTwoInt */ = {
			isa = PBXGroup;
			children = (
				501368082423C5C600CF0C4B /* divideTwoInt.cpp */,
			);
			path = divideTwoInt;
			sourceTree = "<group>";
		};
		501368092423C5C600CF0C4B /* shuffleAnArray */ = {
			isa = PBXGroup;
			children = (
				5013680A2423C5C600CF0C4B /* ShuffleAnArray.cpp */,
			);
			path = shuffleAnArray;
			sourceTree = "<group>";
		};
		5013680B2423C5C600CF0C4B /* maximumProductSubarray */ = {
			isa = PBXGroup;
			children = (
				5013680C2423C5C600CF0C4B /* maximumProductSubarray.cpp */,
			);
			path = maximumProductSubarray;
			sourceTree = "<group>";
		};
		5013680F2423C5C600CF0C4B /* findMinimumInRotatedSortedArray */ = {
			isa = PBXGroup;
			children = (
				501368102423C5C600CF0C4B /* findMinimumInRotatedSortedArray.cpp */,
				501368112423C5C600CF0C4B /* findMinimumInRotatedSortedArray.II.cpp */,
			);
			path = findMinimumInRotatedSortedArray;
			sourceTree = "<group>";
		};
		501368132423C5C600CF0C4B /* gameOfLife */ = {
			isa = PBXGroup;
			children = (
				501368142423C5C600CF0C4B /* GameOfLife.cpp */,
			);
			path = gameOfLife;
			sourceTree = "<group>";
		};
		501368162423C5C600CF0C4B /* removeInvalidParentheses */ = {
			isa = PBXGroup;
			children = (
				501368172423C5C600CF0C4B /* RemoveInvalidParentheses.cpp */,
			);
			path = removeInvalidParentheses;
			sourceTree = "<group>";
		};
		501368182423C5C600CF0C4B /* rotateArray */ = {
			isa = PBXGroup;
			children = (
				501368192423C5C600CF0C4B /* rotateArray.cpp */,
			);
			path = rotateArray;
			sourceTree = "<group>";
		};
		5013681A2423C5C600CF0C4B /* implementStackUsingQueues */ = {
			isa = PBXGroup;
			children = (
				5013681B2423C5C600CF0C4B /* ImplementStackUsingQueues.cpp */,
			);
			path = implementStackUsingQueues;
			sourceTree = "<group>";
		};
		5013681C2423C5C600CF0C4B /* splitArrayLargestSum */ = {
			isa = PBXGroup;
			children = (
				5013681D2423C5C600CF0C4B /* SplitArrayLargestSum.cpp */,
			);
			path = splitArrayLargestSum;
			sourceTree = "<group>";
		};
		5013681E2423C5C600CF0C4B /* sudokuSolver */ = {
			isa = PBXGroup;
			children = (
				5013681F2423C5C600CF0C4B /* sudokuSolver.cpp */,
			);
			path = sudokuSolver;
			sourceTree = "<group>";
		};
		501368202423C5C600CF0C4B /* integerToEnglishWords */ = {
			isa = PBXGroup;
			children = (
				501368212423C5C600CF0C4B /* IntegerToEnglishWords.cpp */,
			);
			path = integerToEnglishWords;
			sourceTree = "<group>";
		};
		501368222423C5C600CF0C4B /* setMatrixZeroes */ = {
			isa = PBXGroup;
			children = (
				501368232423C5C600CF0C4B /* setMatrixZeroes.cpp */,
			);
			path = setMatrixZeroes;
			sourceTree = "<group>";
		};
		501368242423C5C600CF0C4B /* majorityElement */ = {
			isa = PBXGroup;
			children = (
				501368252423C5C600CF0C4B /* majorityElement.II.cpp */,
				501368262423C5C600CF0C4B /* majorityElement.cpp */,
			);
			path = majorityElement;
			sourceTree = "<group>";
		};
		501368272423C5C600CF0C4B /* superUglyNumber */ = {
			isa = PBXGroup;
			children = (
				501368282423C5C600CF0C4B /* SuperUglyNumber.cpp */,
			);
			path = superUglyNumber;
			sourceTree = "<group>";
		};
		501368292423C5C600CF0C4B /* partitionList */ = {
			isa = PBXGroup;
			children = (
				5013682A2423C5C600CF0C4B /* partitionList.cpp */,
			);
			path = partitionList;
			sourceTree = "<group>";
		};
		5013682B2423C5C600CF0C4B /* permutationSequence */ = {
			isa = PBXGroup;
			children = (
				5013682C2423C5C600CF0C4B /* permutationSequence.cpp */,
			);
			path = permutationSequence;
			sourceTree = "<group>";
		};
		5013682E2423C5C600CF0C4B /* strStr */ = {
			isa = PBXGroup;
			children = (
				5013682F2423C5C600CF0C4B /* strStr.cpp */,
			);
			path = strStr;
			sourceTree = "<group>";
		};
		501368302423C5C600CF0C4B /* wordBreak */ = {
			isa = PBXGroup;
			children = (
				501368312423C5C600CF0C4B /* wordBreak.cpp */,
				501368322423C5C600CF0C4B /* wordBreak.II.cpp */,
			);
			path = wordBreak;
			sourceTree = "<group>";
		};
		501368332423C5C600CF0C4B /* largestRectangleInHistogram */ = {
			isa = PBXGroup;
			children = (
				501368342423C5C600CF0C4B /* largestRectangleInHistogram.cpp */,
			);
			path = largestRectangleInHistogram;
			sourceTree = "<group>";
		};
		501368362423C5C600CF0C4B /* patchingArray */ = {
			isa = PBXGroup;
			children = (
				501368372423C5C600CF0C4B /* PatchingArray.cpp */,
			);
			path = patchingArray;
			sourceTree = "<group>";
		};
		501368382423C5C600CF0C4B /* distributeCoinsInBinaryTree */ = {
			isa = PBXGroup;
			children = (
				501368392423C5C600CF0C4B /* DistributeCoinsInBinaryTree.cpp */,
			);
			path = distributeCoinsInBinaryTree;
			sourceTree = "<group>";
		};
		5013683A2423C5C600CF0C4B /* longestIncreasingPathInAMatrix */ = {
			isa = PBXGroup;
			children = (
				5013683B2423C5C600CF0C4B /* LongestIncreasingPathInAMatrix.cpp */,
			);
			path = longestIncreasingPathInAMatrix;
			sourceTree = "<group>";
		};
		5013683D2423C5C600CF0C4B /* maxPointsOnALine */ = {
			isa = PBXGroup;
			children = (
				5013683E2423C5C600CF0C4B /* maxPointsOnALine.cpp */,
			);
			path = maxPointsOnALine;
			sourceTree = "<group>";
		};
		5013683F2423C5C600CF0C4B /* wordLadder */ = {
			isa = PBXGroup;
			children = (
				501368402423C5C600CF0C4B /* wordLadder.II.cpp */,
				501368412423C5C600CF0C4B /* wordLadder.cpp */,
			);
			path = wordLadder;
			sourceTree = "<group>";
		};
		501368422423C5C600CF0C4B /* scrambleString */ = {
			isa = PBXGroup;
			children = (
				501368432423C5C600CF0C4B /* scrambleString.cpp */,
			);
			path = scrambleString;
			sourceTree = "<group>";
		};
		501368442423C5C600CF0C4B /* longestSubstringWithAtLeastKRepeatingCharacters */ = {
			isa = PBXGroup;
			children = (
				501368452423C5C600CF0C4B /* LongestSubstringWithAtLeastKRepeatingCharacters.cpp */,
			);
			path = longestSubstringWithAtLeastKRepeatingCharacters;
			sourceTree = "<group>";
		};
		501368462423C5C600CF0C4B /* maxAreaOfIsland */ = {
			isa = PBXGroup;
			children = (
				501368472423C5C600CF0C4B /* MaxAreaOfIsland.cpp */,
			);
			path = maxAreaOfIsland;
			sourceTree = "<group>";
		};
		501368482423C5C600CF0C4B /* numberOfDigitOne */ = {
			isa = PBXGroup;
			children = (
				501368492423C5C600CF0C4B /* NumberOfDigitOne.cpp */,
			);
			path = numberOfDigitOne;
			sourceTree = "<group>";
		};
		5013684B2423C5C600CF0C4B /* excelSheetColumnNumber */ = {
			isa = PBXGroup;
			children = (
				5013684C2423C5C600CF0C4B /* excelSheetColumnNumber.cpp */,
			);
			path = excelSheetColumnNumber;
			sourceTree = "<group>";
		};
		5013684E2423C5C600CF0C4B /* missingNumber */ = {
			isa = PBXGroup;
			children = (
				5013684F2423C5C600CF0C4B /* MissingNumber.cpp */,
			);
			path = missingNumber;
			sourceTree = "<group>";
		};
		501368502423C5C600CF0C4B /* LRUCache */ = {
			isa = PBXGroup;
			children = (
				501368512423C5C600CF0C4B /* LRUCache.cpp */,
			);
			path = LRUCache;
			sourceTree = "<group>";
		};
		501368532423C5C600CF0C4B /* friendCircles */ = {
			isa = PBXGroup;
			children = (
				501368542423C5C600CF0C4B /* FriendCircles.cpp */,
			);
			path = friendCircles;
			sourceTree = "<group>";
		};
		501368552423C5C600CF0C4B /* oneEditDistance */ = {
			isa = PBXGroup;
			children = (
				501368562423C5C600CF0C4B /* oneEditDistance.cpp */,
			);
			path = oneEditDistance;
			sourceTree = "<group>";
		};
		501368572423C5C600CF0C4B /* kthSmallestElementInaBST */ = {
			isa = PBXGroup;
			children = (
				501368582423C5C600CF0C4B /* KthSmallestElementInABst.cpp */,
			);
			path = kthSmallestElementInaBST;
			sourceTree = "<group>";
		};
		501368592423C5C600CF0C4B /* uglyNumber */ = {
			isa = PBXGroup;
			children = (
				5013685A2423C5C600CF0C4B /* UglyNumber.II.cpp */,
				5013685B2423C5C600CF0C4B /* UglyNumber.cpp */,
			);
			path = uglyNumber;
			sourceTree = "<group>";
		};
		5013685C2423C5C600CF0C4B /* spiralMatrix */ = {
			isa = PBXGroup;
			children = (
				5013685D2423C5C600CF0C4B /* spiralMatrix.II.cpp */,
				5013685E2423C5C600CF0C4B /* spiralMatrix.cpp */,
			);
			path = spiralMatrix;
			sourceTree = "<group>";
		};
		501368612423C5C600CF0C4B /* sentenceScreenFitting */ = {
			isa = PBXGroup;
			children = (
				501368622423C5C600CF0C4B /* sentenceScreenFitting.h */,
				501368632423C5C600CF0C4B /* main.cpp */,
				501368642423C5C600CF0C4B /* sentenceScreenFitting.cpp */,
			);
			path = sentenceScreenFitting;
			sourceTree = "<group>";
		};
		501368652423C5C600CF0C4B /* queueReconstructionByHeight */ = {
			isa = PBXGroup;
			children = (
				501368662423C5C600CF0C4B /* QueueReconstructionByHeight.cpp */,
			);
			path = queueReconstructionByHeight;
			sourceTree = "<group>";
		};
		501368672423C5C600CF0C4B /* wiggleSubsequence */ = {
			isa = PBXGroup;
			children = (
				501368682423C5C600CF0C4B /* wiggleSubsequence.cpp */,
			);
			path = wiggleSubsequence;
			sourceTree = "<group>";
		};
		501368692423C5C600CF0C4B /* rangeSumQuery2D-Immutable */ = {
			isa = PBXGroup;
			children = (
				5013686A2423C5C600CF0C4B /* RangeSumQuery2dImmutable.cpp */,
			);
			path = "rangeSumQuery2D-Immutable";
			sourceTree = "<group>";
		};
		5013686B2423C5C600CF0C4B /* countPrimes */ = {
			isa = PBXGroup;
			children = (
				5013686C2423C5C600CF0C4B /* CountPrimes.cpp */,
			);
			path = countPrimes;
			sourceTree = "<group>";
		};
		5013686D2423C5C600CF0C4B /* createMaximumNumber */ = {
			isa = PBXGroup;
			children = (
				5013686E2423C5C600CF0C4B /* CreateMaximumNumber.cpp */,
			);
			path = createMaximumNumber;
			sourceTree = "<group>";
		};
		5013686F2423C5C600CF0C4B /* wordPattern */ = {
			isa = PBXGroup;
			children = (
				501368702423C5C600CF0C4B /* WordPattern.cpp */,
			);
			path = wordPattern;
			sourceTree = "<group>";
		};
		501368722423C5C600CF0C4B /* longestValidParentheses */ = {
			isa = PBXGroup;
			children = (
				501368732423C5C600CF0C4B /* longestValidParentheses.cpp */,
			);
			path = longestValidParentheses;
			sourceTree = "<group>";
		};
		501368742423C5C600CF0C4B /* linkedListRandomNode */ = {
			isa = PBXGroup;
			children = (
				501368752423C5C600CF0C4B /* LinkedListRandomNode.cpp */,
			);
			path = linkedListRandomNode;
			sourceTree = "<group>";
		};
		501368762423C5C600CF0C4B /* symmetricTree */ = {
			isa = PBXGroup;
			children = (
				501368772423C5C600CF0C4B /* symmetricTree.cpp */,
			);
			path = symmetricTree;
			sourceTree = "<group>";
		};
		501368792423C5C600CF0C4B /* plusOne */ = {
			isa = PBXGroup;
			children = (
				5013687A2423C5C600CF0C4B /* plusOne.cpp */,
			);
			path = plusOne;
			sourceTree = "<group>";
		};
		5013687D2423C5C600CF0C4B /* maximumSubArray */ = {
			isa = PBXGroup;
			children = (
				5013687E2423C5C600CF0C4B /* maximumSubArray.cpp */,
			);
			path = maximumSubArray;
			sourceTree = "<group>";
		};
		501368802423C5C600CF0C4B /* intersectionOfTwoLinkedLists */ = {
			isa = PBXGroup;
			children = (
				501368812423C5C600CF0C4B /* intersectionOfTwoLinkedLists.cpp */,
			);
			path = intersectionOfTwoLinkedLists;
			sourceTree = "<group>";
		};
		501368832423C5C600CF0C4B /* firstUniqueCharacterInAString */ = {
			isa = PBXGroup;
			children = (
				501368842423C5C600CF0C4B /* FirstUniqueCharacterInAString.cpp */,
			);
			path = firstUniqueCharacterInAString;
			sourceTree = "<group>";
		};
		501368862423C5C700CF0C4B /* minimumDepthOfBinaryTree */ = {
			isa = PBXGroup;
			children = (
				501368872423C5C700CF0C4B /* minimumDepthOfBinaryTree.cpp */,
			);
			path = minimumDepthOfBinaryTree;
			sourceTree = "<group>";
		};
		501368882423C5C700CF0C4B /* palindromePartitioning */ = {
			isa = PBXGroup;
			children = (
				501368892423C5C700CF0C4B /* palindromePartitioning.II.cpp */,
				5013688A2423C5C700CF0C4B /* palindromePartitioning.cpp */,
			);
			path = palindromePartitioning;
			sourceTree = "<group>";
		};
		5013688B2423C5C700CF0C4B /* reverseNodesInKGroup */ = {
			isa = PBXGroup;
			children = (
				5013688C2423C5C700CF0C4B /* reverseNodesInKGroup.cpp */,
			);
			path = reverseNodesInKGroup;
			sourceTree = "<group>";
		};
		5013688D2423C5C700CF0C4B /* randomPickIndex */ = {
			isa = PBXGroup;
			children = (
				5013688E2423C5C700CF0C4B /* RandomPickIndex.cpp */,
			);
			path = randomPickIndex;
			sourceTree = "<group>";
		};
		501368912423C5C700CF0C4B /* nQueens */ = {
			isa = PBXGroup;
			children = (
				501368922423C5C700CF0C4B /* nQueuens.II.cpp */,
				501368932423C5C700CF0C4B /* nQueuens.cpp */,
			);
			path = nQueens;
			sourceTree = "<group>";
		};
		501368942423C5C700CF0C4B /* largestNumber */ = {
			isa = PBXGroup;
			children = (
				501368952423C5C700CF0C4B /* largestNumber.cpp */,
			);
			path = largestNumber;
			sourceTree = "<group>";
		};
		501368962423C5C700CF0C4B /* sortArrayByParity */ = {
			isa = PBXGroup;
			children = (
				501368972423C5C700CF0C4B /* SortArrayByParity.II.cpp */,
				501368982423C5C700CF0C4B /* SortArrayByParity.cpp */,
			);
			path = sortArrayByParity;
			sourceTree = "<group>";
		};
		501368992423C5C700CF0C4B /* palindromeLinkedList */ = {
			isa = PBXGroup;
			children = (
				5013689A2423C5C700CF0C4B /* PalindromeLinkedList.cpp */,
			);
			path = palindromeLinkedList;
			sourceTree = "<group>";
		};
		5013689B2423C5C700CF0C4B /* readNCharactersGivenRead4 */ = {
			isa = PBXGroup;
			children = (
				5013689C2423C5C700CF0C4B /* readNCharactersGivenRead4.cpp */,
				5013689D2423C5C700CF0C4B /* readNCharactersGivenRead4.II.cpp */,
			);
			path = readNCharactersGivenRead4;
			sourceTree = "<group>";
		};
		5013689E2423C5C700CF0C4B /* uniqueNumberOfOccurrences */ = {
			isa = PBXGroup;
			children = (
				5013689F2423C5C700CF0C4B /* Unique-Number-of-Occurrences.cpp */,
			);
			path = uniqueNumberOfOccurrences;
			sourceTree = "<group>";
		};
		501368A12423C5C700CF0C4B /* sumOfTwoIntegers */ = {
			isa = PBXGroup;
			children = (
				501368A22423C5C700CF0C4B /* SumOfTwoIntegers.cpp */,
			);
			path = sumOfTwoIntegers;
			sourceTree = "<group>";
		};
		501368A52423C5C700CF0C4B /* intersectionOfTwoArrays */ = {
			isa = PBXGroup;
			children = (
				501368A62423C5C700CF0C4B /* intersectionOfTwoArraysII.cpp */,
				501368A72423C5C700CF0C4B /* intersectionOfTwoArrays.cpp */,
			);
			path = intersectionOfTwoArrays;
			sourceTree = "<group>";
		};
		501368A92423C5C700CF0C4B /* removeLinkedListElements */ = {
			isa = PBXGroup;
			children = (
				501368AA2423C5C700CF0C4B /* RemoveLinkedListElements.cpp */,
			);
			path = removeLinkedListElements;
			sourceTree = "<group>";
		};
		501368AB2423C5C700CF0C4B /* countingBits */ = {
			isa = PBXGroup;
			children = (
				501368AC2423C5C700CF0C4B /* CountingBits.cpp */,
			);
			path = countingBits;
			sourceTree = "<group>";
		};
		501368AF2423C5C700CF0C4B /* evaluateDivision */ = {
			isa = PBXGroup;
			children = (
				501368B02423C5C700CF0C4B /* EvaluateDivision.cpp */,
			);
			path = evaluateDivision;
			sourceTree = "<group>";
		};
		501368B22423C5C700CF0C4B /* fizzBuzz */ = {
			isa = PBXGroup;
			children = (
				501368B32423C5C700CF0C4B /* FizzBuzz.cpp */,
			);
			path = fizzBuzz;
			sourceTree = "<group>";
		};
		501368B62423C5C700CF0C4B /* palindromePairs */ = {
			isa = PBXGroup;
			children = (
				501368B72423C5C700CF0C4B /* PalindromePairs.cpp */,
			);
			path = palindromePairs;
			sourceTree = "<group>";
		};
		501368BA2423C5C700CF0C4B /* rotateImage */ = {
			isa = PBXGroup;
			children = (
				501368BB2423C5C700CF0C4B /* rotateImage.cpp */,
			);
			path = rotateImage;
			sourceTree = "<group>";
		};
		501368BC2423C5C700CF0C4B /* fractionToRecurringDecimal */ = {
			isa = PBXGroup;
			children = (
				501368BD2423C5C700CF0C4B /* fractionToRecurringDecimal.cpp */,
			);
			path = fractionToRecurringDecimal;
			sourceTree = "<group>";
		};
		501368BE2423C5C700CF0C4B /* oddEvenLinkedList */ = {
			isa = PBXGroup;
			children = (
				501368BF2423C5C700CF0C4B /* OddEvenLinkedList.cpp */,
			);
			path = oddEvenLinkedList;
			sourceTree = "<group>";
		};
		501368C02423C5C700CF0C4B /* thirdMaximumNumber */ = {
			isa = PBXGroup;
			children = (
				501368C12423C5C700CF0C4B /* ThirdMaximumNumber.cpp */,
			);
			path = thirdMaximumNumber;
			sourceTree = "<group>";
		};
		501368C42423C5C700CF0C4B /* decodeWays */ = {
			isa = PBXGroup;
			children = (
				501368C52423C5C700CF0C4B /* decodeWays.cpp */,
			);
			path = decodeWays;
			sourceTree = "<group>";
		};
		501368C62423C5C700CF0C4B /* findAllAnagramsInAString */ = {
			isa = PBXGroup;
			children = (
				501368C72423C5C700CF0C4B /* Find-All-Anagrams-in-a-String.cpp */,
			);
			path = findAllAnagramsInAString;
			sourceTree = "<group>";
		};
		501368CA2423C5C700CF0C4B /* videoStitching */ = {
			isa = PBXGroup;
			children = (
				501368CB2423C5C700CF0C4B /* VideoStitching.cpp */,
			);
			path = videoStitching;
			sourceTree = "<group>";
		};
		501368CD2423C5C700CF0C4B /* 我的算法 */ = {
			isa = PBXGroup;
			children = (
				507488BD245135610059E6B3 /* 动态规划 */,
				50136B2A2424767E00CF0C4B /* 并查集.cpp */,
				501368DD2423C5C700CF0C4B /* 大整数乘法(使用加法实现).cpp */,
				501368D12423C5C700CF0C4B /* 单例模式_静态局部对象.cpp */,
				50340A62243AE05800F2572D /* 单例模式_懒汉.cpp */,
				50340A5E2434845400F2572D /* 读者写者问题(读写公平).cpp */,
				503A57F42430330700ACBE0E /* 读者写者问题(读者优先).cpp */,
				50340A5D2434822B00F2572D /* 读者写者问题(写者优先).cpp */,
				501368D72423C5C700CF0C4B /* 二叉树的遍历（递归，非递归）.cpp */,
				501368DF2423C5C700CF0C4B /* 二叉树高度.cpp */,
				501368E52423C5C700CF0C4B /* 二叉树最远节点的距离.cpp */,
				501368E42423C5C700CF0C4B /* 反转链表.cpp */,
				50340A5B2433763200F2572D /* 哥德巴赫猜想.cpp */,
				50340A5A2432F67500F2572D /* 汉诺塔(递归).cpp */,
				501368D62423C5C700CF0C4B /* 合并两个有序链表.cpp */,
				506F3740242B43DF00C0DD7E /* 回调函数.cpp */,
				501368E12423C5C700CF0C4B /* 两个stack实现queue.cpp */,
				501368D02423C5C700CF0C4B /* 排序算法.cpp */,
				501368D82423C5C700CF0C4B /* 汽车工厂模式.cpp */,
				50340A5C2434686300F2572D /* 全排列.cpp */,
				501368CE2423C5C700CF0C4B /* 三色旗问题.cpp */,
				503A57F52430398300ACBE0E /* 生产者消费者问题.cpp */,
				501368E02423C5C700CF0C4B /* 送货ABCD.cpp */,
				503A57F3243032BA00ACBE0E /* 哲学家就餐问题.cpp */,
				501368DE2423C5C700CF0C4B /* 重建二叉树.cpp */,
				501368CF2423C5C700CF0C4B /* 字符串分割.cpp */,
				501368DA2423C5C700CF0C4B /* 字符匹配.cpp */,
				501368E32423C5C700CF0C4B /* 最大子数组和.cpp */,
				501368D42423C5C700CF0C4B /* 最长公共子串.cpp */,
				501368DC2423C5C700CF0C4B /* 最长公共子序列.cpp */,
				501368E62423C5C700CF0C4B /* 最长回文子串.cpp */,
				501368D92423C5C700CF0C4B /* 最长回文子序列.cpp */,
				50136B142423C95400CF0C4B /* 最长上升子序列.cpp */,
				501368E22423C5C700CF0C4B /* i++重载运算符.cpp */,
				50136AF62423C70700CF0C4B /* lower_bound.cpp */,
				501368D32423C5C700CF0C4B /* min(K).cpp */,
				501368DB2423C5C700CF0C4B /* Move.cpp */,
				50136B382424E44F00CF0C4B /* O(n)中位数.cpp */,
				501368D52423C5C700CF0C4B /* strcmp.cpp */,
				50340A5F2434C7B400F2572D /* 字典树例题.cpp */,
				50340A602434C7E700F2572D /* 字典树类.cpp */,
				50340A612434EBC800F2572D /* 函数重载.cpp */,
				50FF4029244B35480066E33C /* 单调栈.cpp */,
				507488BC245132E20059E6B3 /* 背包问题.cpp */,
			);
			path = "我的算法";
			sourceTree = "<group>";
		};
		501368E72423C5C700CF0C4B /* scripts */ = {
			isa = PBXGroup;
			children = (
				501368E82423C5C700CF0C4B /* comments.sh */,
				501368E92423C5C700CF0C4B /* xidel */,
				501368EA2423C5C700CF0C4B /* 414_thirdMaximumNumber.cpp */,
				501368EB2423C5C700CF0C4B /* README.md */,
				501368EC2423C5C700CF0C4B /* lib */,
				501368EE2423C5C700CF0C4B /* readme.sh */,
				501368EF2423C5C700CF0C4B /* 214_shortestPalindrome.cpp */,
			);
			path = scripts;
			sourceTree = "<group>";
		};
		501368E92423C5C700CF0C4B /* xidel */ = {
			isa = PBXGroup;
			children = (
			);
			path = xidel;
			sourceTree = "<group>";
		};
		501368EC2423C5C700CF0C4B /* lib */ = {
			isa = PBXGroup;
			children = (
				501368ED2423C5C700CF0C4B /* query_problem.sh */,
			);
			path = lib;
			sourceTree = "<group>";
		};
		501368F02423C5C700CF0C4B /* 牛客 */ = {
			isa = PBXGroup;
			children = (
				501368F12423C5C700CF0C4B /* 小易的字典.cpp */,
				501368F22423C5C700CF0C4B /* 比特币最佳买卖时机.cpp */,
				5076D81E243F29A800107A6F /* 小易的升级之路.cpp */,
				5076D81F24400BBD00107A6F /* 扫描蘑菇.cpp */,
			);
			path = "牛客";
			sourceTree = "<group>";
		};
		50136AE82423C5FA00CF0C4B /* Tree */ = {
			isa = PBXGroup;
			children = (
				50136AF22423C61D00CF0C4B /* bst.h */,
				50136AEE2423C61D00CF0C4B /* ExtremumGetter.h */,
				50136AEF2423C61D00CF0C4B /* InfoH.h */,
				50136AF32423C61E00CF0C4B /* PosAdder.h */,
				50136AF12423C61D00CF0C4B /* PosSetter.h */,
				50136AF02423C61D00CF0C4B /* TreePrinter.h */,
				50136AF42423C61E00CF0C4B /* VisualTree.h */,
				50136AE92423C5FA00CF0C4B /* main.cpp */,
			);
			path = Tree;
			sourceTree = "<group>";
		};
		50136B052423C73600CF0C4B /* lib */ = {
			isa = PBXGroup;
			children = (
				50136B032423C70800CF0C4B /* TreeNode.h */,
				50136AF82423C70700CF0C4B /* ListNode.h */,
				50089F41244890D3006F7D92 /* MyString.h */,
			);
			path = lib;
			sourceTree = "<group>";
		};
		50136B0B2423C7D600CF0C4B /* Main */ = {
			isa = PBXGroup;
			children = (
				50136B0C2423C7D600CF0C4B /* main.cpp */,
			);
			path = Main;
			sourceTree = "<group>";
		};
		50136B2B2424957F00CF0C4B /* 程序员代码面试指南 */ = {
			isa = PBXGroup;
			children = (
				50136B3024249BFD00CF0C4B /* 1_1设计一个有GetMin功能的栈.cpp */,
				50136B3224249C2500CF0C4B /* 1_2两个栈组成队列.cpp */,
				50136B3424249D1A00CF0C4B /* 1_7生成窗口最大值数组.cpp */,
				50136B362424A5FD00CF0C4B /* 1_9最大子矩阵的大小.cpp */,
				502EB2552425008C00684D42 /* 一行代码求解最大公约数.cpp */,
			);
			path = "程序员代码面试指南";
			sourceTree = "<group>";
		};
		503A57F624309F1200ACBE0E /* 设计模式 */ = {
			isa = PBXGroup;
			children = (
				503A57F724309F2C00ACBE0E /* 1_1单例模式_懒汉.cpp */,
				503A57F82430A13900ACBE0E /* 1_2单例模式_饿汉.cpp */,
			);
			path = "设计模式";
			sourceTree = "<group>";
		};
		506F3744242DC4E400C0DD7E /* 剑指OFFER */ = {
			isa = PBXGroup;
			children = (
				506F3742242DC45100C0DD7E /* 3_数组中重复的数字.cpp */,
				506F3746242DC52100C0DD7E /* 4_二维数组的查找.cpp */,
				506F3747242DC89300C0DD7E /* 5_替换空格.cpp */,
				506F3748242DCA3800C0DD7E /* 6_从尾到头打印链表.cpp */,
				506F3749242DCB9400C0DD7E /* 7_重建二叉树.cpp */,
				506F374A242DCDF800C0DD7E /* 8_二叉树的下一个节点.cpp */,
				506F374B242DCE6900C0DD7E /* 9_两个栈实现队列.cpp */,
				506F374C242DCFAA00C0DD7E /* 10_1_斐波那契数列.cpp */,
				506F374D242DD02400C0DD7E /* 10_2_矩形覆盖.cpp */,
				506F374E242DD09D00C0DD7E /* 10_4变态跳楼梯.cpp */,
				506F3750242DE57A00C0DD7E /* 11_旋转数字的最小数字.cpp */,
				506F3751242DEBF900C0DD7E /* 12_矩阵中的路径.cpp */,
				506F3752242DF20100C0DD7E /* 13_机器人的运动范围.cpp */,
				506F3753242DF62900C0DD7E /* 14_剪绳子.cpp */,
				506F3754242DFC1100C0DD7E /* 15_二进制1的个数.cpp */,
				506F3755242E00DE00C0DD7E /* 16_数值的整数次方.cpp */,
				506F3756242E037D00C0DD7E /* 17_ 打印从1到最大的n位数.cpp */,
				506F3757242E207500C0DD7E /* 19_正则表达式匹配.cpp */,
				506F3758242E2A7300C0DD7E /* 21_调整数组顺序使奇数位于偶数前面.cpp */,
				506F3759242E2DEE00C0DD7E /* 22_链表中倒数第K个点.cpp */,
				506F375A242E31F400C0DD7E /* 23_链表环的入口.cpp */,
				503A57E5242F0BCD00ACBE0E /* 24_反转链表.cpp */,
				503A57E6242F0C2D00ACBE0E /* 25_合并两个有序链表.cpp */,
				503A57E7242F0D3A00ACBE0E /* 26_树的子结构.cpp */,
				503A57E8242F0D9800ACBE0E /* 27_二叉树的镜像.cpp */,
				503A57E9242F0E4400ACBE0E /* 28_对称二叉树.cpp */,
				503A57EA242F0ED300ACBE0E /* 29_顺时针打印矩阵.cpp */,
				503A57EB242F108800ACBE0E /* 30_包含min函数的栈.cpp */,
				503A57EC242F12AE00ACBE0E /* 31_栈的压入、弹出序列.cpp */,
				503A57ED242F139D00ACBE0E /* 32_1_从上往下打印二叉树.cpp */,
				503A57EE242F14D600ACBE0E /* 32_2把二叉树打印成多行.cpp */,
				503A57EF242F17E300ACBE0E /* 32_3按之字形顺序打印二叉树.cpp */,
				503A57F0242F248B00ACBE0E /* 33_二叉搜索树的后序遍历序列.cpp */,
				503A57F1242F2BAD00ACBE0E /* 34_二叉树中和为某一值的路径.cpp */,
				506F375F242E486400C0DD7E /* 38_字符串的排列.cpp */,
				506F3760242E4D3800C0DD7E /* 39_数组中出现次数超过一半的数字.cpp */,
				506F375E242E44B700C0DD7E /* 66_构建乘积数组.cpp */,
				506F375D242E3FBF00C0DD7E /* 67_字符串转换为整数.cpp */,
				506F375B242E378B00C0DD7E /* 68_二叉树的最近公共祖先.cpp */,
				5076D81C243CBABD00107A6F /* 42_最大连续子数组和.cpp */,
				5076D81D243CBBFE00107A6F /* 47_礼物的最大价值.cpp */,
			);
			path = "剑指OFFER";
			sourceTree = "<group>";
		};
		507488BD245135610059E6B3 /* 动态规划 */ = {
			isa = PBXGroup;
			children = (
				507488BE245135610059E6B3 /* 背包问题 */,
			);
			path = "动态规划";
			sourceTree = "<group>";
		};
		507488BE245135610059E6B3 /* 背包问题 */ = {
			isa = PBXGroup;
			children = (
				507488BF245135790059E6B3 /* 01背包问题.cpp */,
			);
			path = "背包问题";
			sourceTree = "<group>";
		};
		50FF4026244ABA7C0066E33C /* 程序员面试金典（第6版） */ = {
			isa = PBXGroup;
			children = (
				50FF4027244ABA980066E33C /* 04_06后继者.cpp */,
				50FF4028244ABAF50066E33C /* 01_01判定字符是否唯一.cpp */,
			);
			path = "程序员面试金典（第6版）";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		501365FC2423C4EA00CF0C4B /* C++Learning */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 501366042423C4EA00CF0C4B /* Build configuration list for PBXNativeTarget "C++Learning" */;
			buildPhases = (
				501365F92423C4EA00CF0C4B /* Sources */,
				501365FA2423C4EA00CF0C4B /* Frameworks */,
				501365FB2423C4EA00CF0C4B /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "C++Learning";
			productName = "C++Learning";
			productReference = 501365FD2423C4EA00CF0C4B /* C++Learning */;
			productType = "com.apple.product-type.tool";
		};
		50136AE62423C5FA00CF0C4B /* Tree */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 50136AEB2423C5FA00CF0C4B /* Build configuration list for PBXNativeTarget "Tree" */;
			buildPhases = (
				50136AE32423C5FA00CF0C4B /* Sources */,
				50136AE42423C5FA00CF0C4B /* Frameworks */,
				50136AE52423C5FA00CF0C4B /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Tree;
			productName = Tree;
			productReference = 50136AE72423C5FA00CF0C4B /* Tree */;
			productType = "com.apple.product-type.tool";
		};
		50136B092423C7D600CF0C4B /* Main */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 50136B0E2423C7D600CF0C4B /* Build configuration list for PBXNativeTarget "Main" */;
			buildPhases = (
				50136B062423C7D600CF0C4B /* Sources */,
				50136B072423C7D600CF0C4B /* Frameworks */,
				50136B082423C7D600CF0C4B /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Main;
			productName = Main;
			productReference = 50136B0A2423C7D600CF0C4B /* Main */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		501365F52423C4EA00CF0C4B /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1140;
				ORGANIZATIONNAME = yourui;
				TargetAttributes = {
					501365FC2423C4EA00CF0C4B = {
						CreatedOnToolsVersion = 11.3.1;
					};
					50136AE62423C5FA00CF0C4B = {
						CreatedOnToolsVersion = 11.3.1;
					};
					50136B092423C7D600CF0C4B = {
						CreatedOnToolsVersion = 11.3.1;
					};
				};
			};
			buildConfigurationList = 501365F82423C4EA00CF0C4B /* Build configuration list for PBXProject "C++Learning" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 501365F42423C4EA00CF0C4B;
			productRefGroup = 501365FE2423C4EA00CF0C4B /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				501365FC2423C4EA00CF0C4B /* C++Learning */,
				50136AE62423C5FA00CF0C4B /* Tree */,
				50136B092423C7D600CF0C4B /* Main */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		501365F92423C4EA00CF0C4B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				50136AC72423C5C800CF0C4B /* 三色旗问题.cpp in Sources */,
				50136A722423C5C800CF0C4B /* NumberOfDigitOne.cpp in Sources */,
				501369DA2423C5C800CF0C4B /* DeleteNodeInALinkedList.cpp in Sources */,
				50136A472423C5C800CF0C4B /* 415_AddStrings.cpp in Sources */,
				501369DF2423C5C800CF0C4B /* UTF8Validation.cpp in Sources */,
				50136A5A2423C5C800CF0C4B /* sudokuSolver.cpp in Sources */,
				501369CF2423C5C800CF0C4B /* 6_zigZagConversion.cpp in Sources */,
				501369F42423C5C800CF0C4B /* TwoCityScheduling.cpp in Sources */,
				50136AAA2423C5C800CF0C4B /* 309_BestTimeToBuyAndSellStockWithCooldown.cpp in Sources */,
				50136A792423C5C800CF0C4B /* FriendCircles.cpp in Sources */,
				501369712423C5C800CF0C4B /* 173_binarySearchTreeIterator.cpp in Sources */,
				501369B32423C5C800CF0C4B /* SumOfLeftLeaves.cpp in Sources */,
				501369C22423C5C800CF0C4B /* moveZeroes.cpp in Sources */,
				50136A8D2423C5C800CF0C4B /* symmetricTree.cpp in Sources */,
				501369A82423C5C800CF0C4B /* validateBinarySearchTree.cpp in Sources */,
				501369422423C5C800CF0C4B /* Block.cpp in Sources */,
				5013690C2423C5C800CF0C4B /* Block.cpp in Sources */,
				501369112423C5C800CF0C4B /* AssestPackage.cpp in Sources */,
				5013694E2423C5C800CF0C4B /* 518_CoinChange2.cpp in Sources */,
				50136AAE2423C5C800CF0C4B /* 145_binaryTreePostorderTraversal.cpp in Sources */,
				50136A652423C5C800CF0C4B /* wordBreak.II.cpp in Sources */,
				501369302423C5C800CF0C4B /* MajorityArray.cpp in Sources */,
				502EB2562425008C00684D42 /* 一行代码求解最大公约数.cpp in Sources */,
				50136AA22423C5C800CF0C4B /* SortArrayByParity.II.cpp in Sources */,
				50136A7E2423C5C800CF0C4B /* spiralMatrix.II.cpp in Sources */,
				501369492423C5C800CF0C4B /* PalStr2.cpp in Sources */,
				50136AB92423C5C800CF0C4B /* 124_binaryTreeMaximumPathSum.cpp in Sources */,
				501369722423C5C800CF0C4B /* validPalindrome.cpp in Sources */,
				501369222423C5C800CF0C4B /* Prime.c in Sources */,
				50136AB12423C5C800CF0C4B /* 257_binaryTreePaths.cpp in Sources */,
				501369772423C5C800CF0C4B /* LongestTurbulentSubarray.cpp in Sources */,
				501369072423C5C800CF0C4B /* ReverseStr.cpp in Sources */,
				501369EA2423C5C800CF0C4B /* nimGame.cpp in Sources */,
				5013694C2423C5C800CF0C4B /* OrderStr.cpp in Sources */,
				501369D62423C5C800CF0C4B /* IsSubsequence.cpp in Sources */,
				501369D22423C5C800CF0C4B /* N-Repeated-Element-in-Size-2N-Array.cpp in Sources */,
				50136A302423C5C800CF0C4B /* 20_validParentheses.cpp in Sources */,
				50136A7B2423C5C800CF0C4B /* KthSmallestElementInABst.cpp in Sources */,
				50136AD52423C5C800CF0C4B /* 大整数乘法(使用加法实现).cpp in Sources */,
				50136A242423C5C800CF0C4B /* recoverBinarySearchTree.cpp in Sources */,
				501369692423C5C800CF0C4B /* PeekingIterator.cpp in Sources */,
				5013694B2423C5C800CF0C4B /* UniString.cpp in Sources */,
				501369822423C5C800CF0C4B /* wordSearch.II.cpp in Sources */,
				50136A832423C5C800CF0C4B /* sentenceScreenFitting.cpp in Sources */,
				5013692A2423C5C800CF0C4B /* UniString.cpp in Sources */,
				50136A082423C5C800CF0C4B /* findTheDuplicateNumber.cpp in Sources */,
				501369C82423C5C800CF0C4B /* recoverATreeFromPreorderTraversal.cpp in Sources */,
				5013695C2423C5C800CF0C4B /* FirstBadVersion.cpp in Sources */,
				5013693B2423C5C800CF0C4B /* ABCstr.cpp in Sources */,
				50136ADA2423C5C900CF0C4B /* i++重载运算符.cpp in Sources */,
				501369292423C5C800CF0C4B /* DayBetweenYear.cpp in Sources */,
				50136A252423C5C800CF0C4B /* 144_binaryTreePreorderTraversal.cpp in Sources */,
				501369BE2423C5C800CF0C4B /* topKFrequentElements.cpp in Sources */,
				501369372423C5C800CF0C4B /* StrAdd.cpp in Sources */,
				5013691D2423C5C800CF0C4B /* LIS2.cpp in Sources */,
				50136A952423C5C800CF0C4B /* 16_3SumClosest.cpp in Sources */,
				5013697E2423C5C800CF0C4B /* ProductOfArrayExceptSelf.cpp in Sources */,
				501369F32423C5C800CF0C4B /* 1170_CompareStringsByFrequencyOfTheSmallestCharacter.cpp in Sources */,
				50136A402423C5C800CF0C4B /* DifferentWaysToAddParentheses.cpp in Sources */,
				50136A382423C5C800CF0C4B /* 844_BackspaceStringCompare.cpp in Sources */,
				501369342423C5C800CF0C4B /* AddNo.cpp in Sources */,
				501369E12423C5C800CF0C4B /* 4_medianOfTwoSortedArrays.cpp in Sources */,
				501369012423C5C800CF0C4B /* NumberOfOne.cpp in Sources */,
				50136A092423C5C800CF0C4B /* 24_swapNodesInPairs.cpp in Sources */,
				501369E92423C5C800CF0C4B /* sameTree.cpp in Sources */,
				50136AC92423C5C800CF0C4B /* 排序算法.cpp in Sources */,
				501369252423C5C800CF0C4B /* 2_被3整除.cpp in Sources */,
				50136ABB2423C5C800CF0C4B /* rotateImage.cpp in Sources */,
				50136A7A2423C5C800CF0C4B /* oneEditDistance.cpp in Sources */,
				50136A5F2423C5C800CF0C4B /* SuperUglyNumber.cpp in Sources */,
				50136A712423C5C800CF0C4B /* MaxAreaOfIsland.cpp in Sources */,
				50136A622423C5C800CF0C4B /* 7_reverseInteger.cpp in Sources */,
				501369B62423C5C800CF0C4B /* 165_compareVersionNumbers.cpp in Sources */,
				50136A262423C5C800CF0C4B /* LongestPalindrome.cpp in Sources */,
				501369682423C5C800CF0C4B /* pathSum.II.cpp in Sources */,
				50136AE02423C5C900CF0C4B /* 214_shortestPalindrome.cpp in Sources */,
				501369972423C5C800CF0C4B /* CountOfRangeSum.cpp in Sources */,
				50136B372424A5FD00CF0C4B /* 1_9最大子矩阵的大小.cpp in Sources */,
				501369092423C5C800CF0C4B /* DayOfYear.cpp in Sources */,
				501369E72423C5C800CF0C4B /* editDistance.cpp in Sources */,
				50136AD72423C5C900CF0C4B /* 二叉树高度.cpp in Sources */,
				50136AE12423C5C900CF0C4B /* 小易的字典.cpp in Sources */,
				50136A4D2423C5C800CF0C4B /* ShuffleAnArray.cpp in Sources */,
				50136ABD2423C5C800CF0C4B /* OddEvenLinkedList.cpp in Sources */,
				501369412423C5C800CF0C4B /* AddSub.cpp in Sources */,
				50136A4E2423C5C800CF0C4B /* maximumProductSubarray.cpp in Sources */,
				50136A342423C5C800CF0C4B /* MinimumHeightTrees.cpp in Sources */,
				50136A1B2423C5C800CF0C4B /* 1342_numberOfStepsToReduceANumberToZero.cpp in Sources */,
				501369552423C5C800CF0C4B /* 2_addTwoNumbers.cpp in Sources */,
				50136A4B2423C5C800CF0C4B /* RotateFunction.cpp in Sources */,
				50136A582423C5C800CF0C4B /* ImplementStackUsingQueues.cpp in Sources */,
				501369E42423C5C800CF0C4B /* reverseBits.cpp in Sources */,
				50136A9C2423C5C800CF0C4B /* RandomPickIndex.cpp in Sources */,
				50136A5C2423C5C800CF0C4B /* setMatrixZeroes.cpp in Sources */,
				501369882423C5C800CF0C4B /* sumRootToLeafNumber.cpp in Sources */,
				50136AB22423C5C800CF0C4B /* 344_reverseString.cpp in Sources */,
				5013693C2423C5C800CF0C4B /* PalStr.cpp in Sources */,
				50136A3D2423C5C800CF0C4B /* HappyNumber.cpp in Sources */,
				5013691A2423C5C800CF0C4B /* SubString.cpp in Sources */,
				5013697B2423C5C800CF0C4B /* StringWithoutAAAOrBBB.cpp in Sources */,
				50136A512423C5C800CF0C4B /* findMinimumInRotatedSortedArray.cpp in Sources */,
				50136A8E2423C5C800CF0C4B /* 209_bullsAndCows.cpp in Sources */,
				50136A842423C5C800CF0C4B /* QueueReconstructionByHeight.cpp in Sources */,
				501369A52423C5C800CF0C4B /* InvertBinaryTree.cpp in Sources */,
				501369EF2423C5C800CF0C4B /* 3_longestSubstringWithoutRepeatingCharacters.cpp in Sources */,
				501369BF2423C5C800CF0C4B /* sortList.cpp in Sources */,
				50136AA72423C5C800CF0C4B /* Unique-Number-of-Occurrences.cpp in Sources */,
				501369AE2423C5C800CF0C4B /* 509_fibonacciNumber.cpp in Sources */,
				501369C92423C5C800CF0C4B /* nextPermutation.cpp in Sources */,
				501369A72423C5C800CF0C4B /* linkedListCycle.cpp in Sources */,
				501369B02423C5C800CF0C4B /* reverseLinkedList.cpp in Sources */,
				50136A102423C5C800CF0C4B /* MinCostClimbingStairs.cpp in Sources */,
				501369162423C5C800CF0C4B /* MinStore.cpp in Sources */,
				50136A362423C5C800CF0C4B /* 312_BurstBalloons.cpp in Sources */,
				50136A632423C5C800CF0C4B /* strStr.cpp in Sources */,
				506F375C242E378B00C0DD7E /* 68_二叉树的最近公共祖先.cpp in Sources */,
				501369542423C5C800CF0C4B /* CousinsInBinaryTree.cpp in Sources */,
				501369C32423C5C800CF0C4B /* findPeakElement.cpp in Sources */,
				50136A1E2423C5C800CF0C4B /* removeDuplicatesFromSortedArray.II.cpp in Sources */,
				501369B82423C5C800CF0C4B /* search2DMatrix.cpp in Sources */,
				50136A742423C5C800CF0C4B /* excelSheetColumnNumber.cpp in Sources */,
				50136A552423C5C800CF0C4B /* 14_longestCommonPrefix.cpp in Sources */,
				50136ABE2423C5C800CF0C4B /* ThirdMaximumNumber.cpp in Sources */,
				50136A222423C5C800CF0C4B /* 337_houseRobberIII.cpp in Sources */,
				50136A072423C5C800CF0C4B /* substringWithConcatenationOfAllWords.cpp in Sources */,
				501368FF2423C5C800CF0C4B /* 5_数对.cpp in Sources */,
				501369602423C5C800CF0C4B /* 46_permutations.cpp in Sources */,
				501369872423C5C800CF0C4B /* minimumWindowSubstring.cpp in Sources */,
				50136A782423C5C800CF0C4B /* 242_ValidAnagram.cpp in Sources */,
				501369082423C5C800CF0C4B /* IncludeStr.cpp in Sources */,
				501369592423C5C800CF0C4B /* removeDuplicatesFromSortedList.II.cpp in Sources */,
				50136A592423C5C800CF0C4B /* SplitArrayLargestSum.cpp in Sources */,
				50136A912423C5C800CF0C4B /* 94_binaryTreeInorderTraversal.cpp in Sources */,
				50136A502423C5C800CF0C4B /* 258_addDigits.cpp in Sources */,
				50136B3124249BFD00CF0C4B /* 1_1设计一个有GetMin功能的栈.cpp in Sources */,
				50136A462423C5C800CF0C4B /* IntegerReplacement.cpp in Sources */,
				5013696D2423C5C800CF0C4B /* 122_bestTimeToBuyAndSellStock.II.cpp in Sources */,
				50136A0D2423C5C800CF0C4B /* lengthOfLastWord.cpp in Sources */,
				501369392423C5C800CF0C4B /* SumArray.cpp in Sources */,
				50136A212423C5C800CF0C4B /* VerticalOrderTraversalOfABinaryTree.cpp in Sources */,
				501368F32423C5C800CF0C4B /* Bus.cpp in Sources */,
				501369E22423C5C800CF0C4B /* 136_singleNumber.cpp in Sources */,
				501369672423C5C800CF0C4B /* pathSum.cpp in Sources */,
				501369312423C5C800CF0C4B /* Divide.cpp in Sources */,
				501369BB2423C5C800CF0C4B /* 220_ContainsDuplicate.III.cpp in Sources */,
				501369D52423C5C800CF0C4B /* EliminationGame.cpp in Sources */,
				5013693F2423C5C800CF0C4B /* IncludeStr.cpp in Sources */,
				50136A0E2423C5C800CF0C4B /* 8_stringToIntegerAtoi.cpp in Sources */,
				5013696C2423C5C800CF0C4B /* 106_ConstructBinaryTreeFromInorderAndPostorderTraversal.cpp in Sources */,
				501369652423C5C800CF0C4B /* 991_BrokenCalculator.cpp in Sources */,
				5013697D2423C5C800CF0C4B /* surroundedRegions.cpp in Sources */,
				501369522423C5C800CF0C4B /* MaximalSquare.cpp in Sources */,
				501369DE2423C5C800CF0C4B /* 167_twoSum.II.cpp in Sources */,
				501369B12423C5C800CF0C4B /* reverseLinkedList.II.cpp in Sources */,
				50136A9E2423C5C800CF0C4B /* 771_JewelsAndStones.cpp in Sources */,
				501369752423C5C800CF0C4B /* 77_Combinations.cpp in Sources */,
				501368F92423C5C800CF0C4B /* SumArray.cpp in Sources */,
				50136A032423C5C800CF0C4B /* RemoveDuplicateLetters.cpp in Sources */,
				50136A822423C5C800CF0C4B /* main.cpp in Sources */,
				50136AD32423C5C800CF0C4B /* Move.cpp in Sources */,
				501369E62423C5C800CF0C4B /* FlattenNestedListIterator.cpp in Sources */,
				501369A92423C5C800CF0C4B /* 42_trappingRainWater.cpp in Sources */,
				501368FE2423C5C800CF0C4B /* DecodeNumber.cpp in Sources */,
				501369F12423C5C800CF0C4B /* CountCompleteTreeNodes.cpp in Sources */,
				50136A002423C5C800CF0C4B /* singleNumber.cpp in Sources */,
				5013694A2423C5C800CF0C4B /* BucketSort.cpp in Sources */,
				501368F72423C5C800CF0C4B /* Jinzhi.cpp in Sources */,
				501369792423C5C800CF0C4B /* IntervalListIntersections.cpp in Sources */,
				501368FC2423C5C800CF0C4B /* PickRepre.cpp in Sources */,
				501369762423C5C800CF0C4B /* PerfectSquares.cpp in Sources */,
				501369472423C5C800CF0C4B /* MagicDepth.cpp in Sources */,
				501369832423C5C800CF0C4B /* InsertDeleteGetrandomO1.cpp in Sources */,
				501369022423C5C800CF0C4B /* ABCstr.cpp in Sources */,
				5013698F2423C5C800CF0C4B /* 135_candy.cpp in Sources */,
				50136AA52423C5C800CF0C4B /* readNCharactersGivenRead4.cpp in Sources */,
				5013692E2423C5C800CF0C4B /* Card.cpp in Sources */,
				50136ACC2423C5C800CF0C4B /* 最长公共子串.cpp in Sources */,
				501369332423C5C800CF0C4B /* PhtotoY.cpp in Sources */,
				5013695B2423C5C800CF0C4B /* removeElement.cpp in Sources */,
				50136A042423C5C800CF0C4B /* sqrt.cpp in Sources */,
				50136AC12423C5C800CF0C4B /* decodeWays.cpp in Sources */,
				501369892423C5C800CF0C4B /* 1108_defangingAnIpAddress.cpp in Sources */,
				501369C42423C5C800CF0C4B /* CountNumbersWithUniqueDigits.cpp in Sources */,
				501369DC2423C5C800CF0C4B /* longestConsecutiveSequence.cpp in Sources */,
				50136AA92423C5C800CF0C4B /* SumOfTwoIntegers.cpp in Sources */,
				50136A752423C5C800CF0C4B /* 274_h-Index.cpp in Sources */,
				501369462423C5C800CF0C4B /* MinStore.cpp in Sources */,
				50136A9D2423C5C800CF0C4B /* 744_findSmallestLetterGreaterThanTarget.cpp in Sources */,
				50136A862423C5C800CF0C4B /* RangeSumQuery2dImmutable.cpp in Sources */,
				5013696A2423C5C800CF0C4B /* SerializeAndDeserializeBinaryTree.cpp in Sources */,
				50136A2D2423C5C800CF0C4B /* main.cpp in Sources */,
				5013699A2423C5C800CF0C4B /* 78_subsets.cpp in Sources */,
				50136AD12423C5C800CF0C4B /* 最长回文子序列.cpp in Sources */,
				50136ADF2423C5C900CF0C4B /* 414_thirdMaximumNumber.cpp in Sources */,
				501369D12423C5C800CF0C4B /* 39_combinationSum.cpp in Sources */,
				50136ACA2423C5C800CF0C4B /* 单例模式_静态局部对象.cpp in Sources */,
				501369572423C5C800CF0C4B /* 557_reverseWordsInAStringIii.cpp in Sources */,
				50136AAB2423C5C800CF0C4B /* 22_generateParentheses.cpp in Sources */,
				50136A372423C5C800CF0C4B /* 21_mergeTwoSortedList.cpp in Sources */,
				50136A7D2423C5C800CF0C4B /* UglyNumber.cpp in Sources */,
				50136A112423C5C800CF0C4B /* increasingTripletSubsequence.cpp in Sources */,
				501369FC2423C5C800CF0C4B /* 50_pow(x,n).cpp in Sources */,
				5013696E2423C5C800CF0C4B /* grayCode.cpp in Sources */,
				50136AAC2423C5C800CF0C4B /* intersectionOfTwoArraysII.cpp in Sources */,
				50136A5D2423C5C800CF0C4B /* majorityElement.II.cpp in Sources */,
				501369642423C5C800CF0C4B /* 49_GroupAnagrams.cpp in Sources */,
				5013698A2423C5C800CF0C4B /* LowestCommonAncestorOfABinaryTree.cpp in Sources */,
				5013690F2423C5C800CF0C4B /* LIS.cpp in Sources */,
				5013698D2423C5C800CF0C4B /* LongestAbsoluteFilePath.cpp in Sources */,
				50136A332423C5C800CF0C4B /* uniquePaths.II.cpp in Sources */,
				50136AD92423C5C900CF0C4B /* 两个stack实现queue.cpp in Sources */,
				50136ACB2423C5C800CF0C4B /* min(K).cpp in Sources */,
				501369CC2423C5C800CF0C4B /* 44_wildcardMatching.cpp in Sources */,
				5013697F2423C5C800CF0C4B /* DecodeString.cpp in Sources */,
				501369912423C5C800CF0C4B /* validSudoku.cpp in Sources */,
				501369FB2423C5C800CF0C4B /* 15_3Sum.cpp in Sources */,
				501369FA2423C5C800CF0C4B /* 224_BasicCalculator.cpp in Sources */,
				501369F82423C5C800CF0C4B /* 107_binaryTreeLevelOrderTraversal.II.cpp in Sources */,
				5013693E2423C5C800CF0C4B /* BitCoinBuy.cpp in Sources */,
				5013693D2423C5C800CF0C4B /* sukudo.cpp in Sources */,
				50136A772423C5C800CF0C4B /* LRUCache.cpp in Sources */,
				50136A602423C5C800CF0C4B /* partitionList.cpp in Sources */,
				5013698E2423C5C800CF0C4B /* 43_multiplyStrings.cpp in Sources */,
				50136A272423C5C800CF0C4B /* insertInterval.cpp in Sources */,
				501369A02423C5C800CF0C4B /* FindMedianFromDataStream.cpp in Sources */,
				50136A562423C5C800CF0C4B /* RemoveInvalidParentheses.cpp in Sources */,
				50136A132423C5C800CF0C4B /* searchInRotatedSortedArray.cpp in Sources */,
				50136AC62423C5C800CF0C4B /* 9_palindromeNumber.cpp in Sources */,
				501369732423C5C800CF0C4B /* SlidingWindowMaximum.cpp in Sources */,
				5013699B2423C5C800CF0C4B /* evaluateReversePolishNotation.cpp in Sources */,
				501369F22423C5C800CF0C4B /* 520_detectCapital.cpp in Sources */,
				501369362423C5C800CF0C4B /* matrix.c in Sources */,
				50136A522423C5C800CF0C4B /* findMinimumInRotatedSortedArray.II.cpp in Sources */,
				5013690A2423C5C800CF0C4B /* ThirdNumber.cpp in Sources */,
				50136A062423C5C800CF0C4B /* LexicographicalNumbers.cpp in Sources */,
				501369B42423C5C800CF0C4B /* 227_BasicCalculator.II.cpp in Sources */,
				50136A762423C5C800CF0C4B /* MissingNumber.cpp in Sources */,
				5013694F2423C5C800CF0C4B /* 342_PowerOfFour.cpp in Sources */,
				50136A3C2423C5C800CF0C4B /* rotateList.cpp in Sources */,
				50136A322423C5C800CF0C4B /* uniquePaths.cpp in Sources */,
				50136A232423C5C800CF0C4B /* SumOfEvenNumbersAfterQueries.cpp in Sources */,
				50136A0B2423C5C800CF0C4B /* minimumPathSum.cpp in Sources */,
				50136AA32423C5C800CF0C4B /* SortArrayByParity.cpp in Sources */,
				50136A0A2423C5C800CF0C4B /* NthDigit.cpp in Sources */,
				501369D42423C5C800CF0C4B /* pascalTriangle.II.cpp in Sources */,
				50136ADB2423C5C900CF0C4B /* 最大子数组和.cpp in Sources */,
				501369AC2423C5C800CF0C4B /* 102_binaryTreeLevelOrderTraversal.cpp in Sources */,
				501369802423C5C800CF0C4B /* VerifyPreorderSerializationOfABinaryTree.cpp in Sources */,
				501368F42423C5C800CF0C4B /* DecodeNumber2.cpp in Sources */,
				501369B52423C5C800CF0C4B /* TheSkylineProblem.cpp in Sources */,
				50136B3324249C2500CF0C4B /* 1_2两个栈组成队列.cpp in Sources */,
				50136A442423C5C800CF0C4B /* searchInsertPosition.cpp in Sources */,
				501369402423C5C800CF0C4B /* DayOfYear.cpp in Sources */,
				50136AAD2423C5C800CF0C4B /* intersectionOfTwoArrays.cpp in Sources */,
				50136A4F2423C5C800CF0C4B /* 377_CombinationSumIV.cpp in Sources */,
				501369142423C5C800CF0C4B /* 4_迷路的牛牛.cpp in Sources */,
				501369782423C5C800CF0C4B /* maximalRectangle.cpp in Sources */,
				5013699C2423C5C800CF0C4B /* gasStation.cpp in Sources */,
				501369632423C5C800CF0C4B /* largestPerimeterTriangle.cpp in Sources */,
				5013697C2423C5C800CF0C4B /* 23_mergeKSortedLists.cpp in Sources */,
				501369B72423C5C800CF0C4B /* search2DMatrix.II.cpp in Sources */,
				50136A932423C5C800CF0C4B /* 804_UniqueMorseCodeWords.cpp in Sources */,
				50136A572423C5C800CF0C4B /* rotateArray.cpp in Sources */,
				501369992423C5C800CF0C4B /* PerfectRectangle.cpp in Sources */,
				501369702423C5C800CF0C4B /* restoreIPAddresses.cpp in Sources */,
				5013699D2423C5C800CF0C4B /* 213_houseRobber.II.cpp in Sources */,
				501369812423C5C800CF0C4B /* wordSearch.cpp in Sources */,
				501369512423C5C800CF0C4B /* RectangleArea.cpp in Sources */,
				501369352423C5C800CF0C4B /* Candy.cpp in Sources */,
				50136AC02423C5C800CF0C4B /* 405_ConvertANumberToHexadecimal.cpp in Sources */,
				50136A282423C5C800CF0C4B /* MinimumFallingPathSum.cpp in Sources */,
				50136ABA2423C5C800CF0C4B /* 231_powerOfTwo.cpp in Sources */,
				5013690D2423C5C800CF0C4B /* Find.cpp in Sources */,
				50136A192423C5C800CF0C4B /* 275_h-Index.II.cpp in Sources */,
				5013692B2423C5C800CF0C4B /* Boat.cpp in Sources */,
				501369AB2423C5C800CF0C4B /* MinimumCostForTickets.cpp in Sources */,
				5013695E2423C5C800CF0C4B /* SmallestStringStartingFromLeaf.cpp in Sources */,
				501369B22423C5C800CF0C4B /* numberOf1Bits.cpp in Sources */,
				501369D92423C5C800CF0C4B /* 13_romanToInteger.cpp in Sources */,
				501369B92423C5C800CF0C4B /* MiniParser.cpp in Sources */,
				50136A392423C5C800CF0C4B /* populatingNextRightPointersInEachNode.II.cpp in Sources */,
				501369662423C5C800CF0C4B /* PalindromicSubstrings.cpp in Sources */,
				50136A922423C5C800CF0C4B /* maximumSubArray.cpp in Sources */,
				5013690B2423C5C800CF0C4B /* AddSub.cpp in Sources */,
				50136AE22423C5C900CF0C4B /* 比特币最佳买卖时机.cpp in Sources */,
				5013698B2423C5C800CF0C4B /* interleavingString.cpp in Sources */,
				50136A3B2423C5C800CF0C4B /* PartitionEqualSubsetSum.cpp in Sources */,
				501368FD2423C5C800CF0C4B /* StrMaze.cpp in Sources */,
				50136A3F2423C5C800CF0C4B /* copyListWithRandomPointer.cpp in Sources */,
				50136A8F2423C5C800CF0C4B /* plusOne.cpp in Sources */,
				501369942423C5C800CF0C4B /* RansomNote.cpp in Sources */,
				501369D32423C5C800CF0C4B /* pascalTriangle.cpp in Sources */,
				50136A992423C5C800CF0C4B /* palindromePartitioning.II.cpp in Sources */,
				50136A432423C5C800CF0C4B /* IsomorphicStrings.cpp in Sources */,
				501369D02423C5C800CF0C4B /* 121_bestTimeToBuyAndSellStock.cpp in Sources */,
				50136A6E2423C5C800CF0C4B /* wordLadder.cpp in Sources */,
				50136AC52423C5C800CF0C4B /* VideoStitching.cpp in Sources */,
				5013696F2423C5C800CF0C4B /* mergeIntervals.cpp in Sources */,
				50136A162423C5C800CF0C4B /* ImplementQueueUsingStacks.cpp in Sources */,
				501369102423C5C800CF0C4B /* ListCombi.cpp in Sources */,
				501369262423C5C800CF0C4B /* BubbleSort.cpp in Sources */,
				50136A312423C5C800CF0C4B /* UniquePaths.III.cpp in Sources */,
				5013695D2423C5C800CF0C4B /* convertSortedListToBinarySearchTree.cpp in Sources */,
				501369C02423C5C800CF0C4B /* SquaresOfASortedArray.cpp in Sources */,
				50136A972423C5C800CF0C4B /* 19_removeNthNodeFromEndOfList.cpp in Sources */,
				50136A152423C5C800CF0C4B /* 401_BinaryWatch.cpp in Sources */,
				50136A902423C5C800CF0C4B /* 1227_numberOfEquivalentDominoPairs.cpp in Sources */,
				506F374F242DD09D00C0DD7E /* 10_4变态跳楼梯.cpp in Sources */,
				501369042423C5C800CF0C4B /* sukudo.cpp in Sources */,
				50136A882423C5C800CF0C4B /* CreateMaximumNumber.cpp in Sources */,
				5013695A2423C5C800CF0C4B /* searchForRange.cpp in Sources */,
				50136AA12423C5C800CF0C4B /* largestNumber.cpp in Sources */,
				5013692F2423C5C800CF0C4B /* MinSqr3.cpp in Sources */,
				50136AC82423C5C800CF0C4B /* 字符串分割.cpp in Sources */,
				501369E82423C5C800CF0C4B /* MinimumAsciiDeleteSumForTwoStrings.cpp in Sources */,
				501369452423C5C800CF0C4B /* OrderArray.cpp in Sources */,
				5013693A2423C5C800CF0C4B /* Latex.cpp in Sources */,
				50136AD62423C5C900CF0C4B /* 重建二叉树.cpp in Sources */,
				501368F52423C5C800CF0C4B /* Egg.cpp in Sources */,
				50136A9F2423C5C800CF0C4B /* nQueuens.II.cpp in Sources */,
				501369DB2423C5C800CF0C4B /* triangle.cpp in Sources */,
				501369062423C5C800CF0C4B /* LinkedList.cpp in Sources */,
				50136A2A2423C5C800CF0C4B /* mergeTwoSortedArray.cpp in Sources */,
				50136A7C2423C5C800CF0C4B /* UglyNumber.II.cpp in Sources */,
				50136AA42423C5C800CF0C4B /* PalindromeLinkedList.cpp in Sources */,
				50136A542423C5C800CF0C4B /* GameOfLife.cpp in Sources */,
				50136A942423C5C800CF0C4B /* intersectionOfTwoLinkedLists.cpp in Sources */,
				501369BC2423C5C800CF0C4B /* 123_bestTimeToBuyAndSellStock.III.cpp in Sources */,
				501369C52423C5C800CF0C4B /* 306_AdditiveNumber.cpp in Sources */,
				50136A5E2423C5C800CF0C4B /* majorityElement.cpp in Sources */,
				501369FE2423C5C800CF0C4B /* LowestCommonAncestorOfABinarySearchTree.cpp in Sources */,
				501369172423C5C800CF0C4B /* 1_twoSum.cpp in Sources */,
				50136A482423C5C800CF0C4B /* 199_binaryTreeRightSideView.cpp in Sources */,
				501369C62423C5C800CF0C4B /* minStack.cpp in Sources */,
				501369242423C5C800CF0C4B /* SortOne.cpp in Sources */,
				50136A292423C5C800CF0C4B /* 133_cloneGraph.cpp in Sources */,
				50136AC32423C5C800CF0C4B /* 55_jumpGame.cpp in Sources */,
				50136B3524249D1A00CF0C4B /* 1_7生成窗口最大值数组.cpp in Sources */,
				50136A2F2423C5C800CF0C4B /* KthLargestElementInAnArray.cpp in Sources */,
				5013696B2423C5C800CF0C4B /* repeatedDNASequences.cpp in Sources */,
				501369622423C5C800CF0C4B /* MostCommonWord.cpp in Sources */,
				50136AA02423C5C800CF0C4B /* nQueuens.cpp in Sources */,
				501369532423C5C800CF0C4B /* TimeBasedKeyValueStore.cpp in Sources */,
				501369A22423C5C800CF0C4B /* reorderList.cpp in Sources */,
				501369EE2423C5C800CF0C4B /* 1_twoSum.cpp in Sources */,
				501369852423C5C800CF0C4B /* longestSubstringWithAtMostTwoDistinctCharacters.cpp in Sources */,
				50136AD42423C5C800CF0C4B /* 最长公共子序列.cpp in Sources */,
				50136ABC2423C5C800CF0C4B /* fractionToRecurringDecimal.cpp in Sources */,
				501369FF2423C5C800CF0C4B /* singleNumber.III.cpp in Sources */,
				501369CB2423C5C800CF0C4B /* rangeSumQuery-Immutable.cpp in Sources */,
				501368F62423C5C800CF0C4B /* VectorOddEven.cpp in Sources */,
				50136A2B2423C5C800CF0C4B /* CourseSchedule.cpp in Sources */,
				5013691C2423C5C800CF0C4B /* MagicDepth.cpp in Sources */,
				501369BA2423C5C800CF0C4B /* convertSortedArrayToBinarySearchTree.cpp in Sources */,
				5013692C2423C5C800CF0C4B /* OrderStr.cpp in Sources */,
				501369FD2423C5C800CF0C4B /* 105_ConstructBinaryTreeFromPreorderAndInorderTraversal.cpp in Sources */,
				5013699E2423C5C800CF0C4B /* NumberOfIslands.cpp in Sources */,
				50136A6B2423C5C800CF0C4B /* 103_binaryTreeZigzagLevelOrderTraversal.cpp in Sources */,
				50136A022423C5C800CF0C4B /* PeakIndexInAMountainArray.cpp in Sources */,
				50136ADE2423C5C900CF0C4B /* 最长回文子串.cpp in Sources */,
				50136A802423C5C800CF0C4B /* 217_ContainsDuplicate.cpp in Sources */,
				501369432423C5C800CF0C4B /* CatFood.cpp in Sources */,
				50136A8A2423C5C800CF0C4B /* 198_houseRobber.cpp in Sources */,
				501369AD2423C5C800CF0C4B /* factorialTrailingZeroes.cpp in Sources */,
				501369F92423C5C800CF0C4B /* 110_balancedBinaryTree.cpp in Sources */,
				501369182423C5C800CF0C4B /* LeftStr.cpp in Sources */,
				501369272423C5C800CF0C4B /* PalStr2.cpp in Sources */,
				5013694D2423C5C800CF0C4B /* Divide.cpp in Sources */,
				50136AB52423C5C800CF0C4B /* FizzBuzz.cpp in Sources */,
				501369E52423C5C800CF0C4B /* 17_letterCombinationsOfAPhoneNumber.cpp in Sources */,
				501369152423C5C800CF0C4B /* OrderArray.cpp in Sources */,
				501369212423C5C800CF0C4B /* 1_牛牛找工作.cpp in Sources */,
				50136A202423C5C800CF0C4B /* MirrorReflection.cpp in Sources */,
				50136A0F2423C5C800CF0C4B /* 70_climbStairs.cpp in Sources */,
				501369482423C5C800CF0C4B /* Prime.c in Sources */,
				501369842423C5C800CF0C4B /* InsertDeleteGetrandomO1DuplicatesAllowed.cpp in Sources */,
				501369ED2423C5C800CF0C4B /* 859_BuddyStrings.cpp in Sources */,
				50136AD02423C5C800CF0C4B /* 汽车工厂模式.cpp in Sources */,
				50136A982423C5C800CF0C4B /* minimumDepthOfBinaryTree.cpp in Sources */,
				501369F62423C5C800CF0C4B /* maximumGap.cpp in Sources */,
				501369122423C5C800CF0C4B /* Clock.cpp in Sources */,
				501369962423C5C800CF0C4B /* validNumber.cpp in Sources */,
				501369C72423C5C800CF0C4B /* flattenBinaryTreeToLinkedList.cpp in Sources */,
				501369BD2423C5C800CF0C4B /* SatisfiabilityOfEqualityEquations.cpp in Sources */,
				50136A412423C5C800CF0C4B /* 300_longestIncreasingSubsequence.cpp in Sources */,
				50136AA82423C5C800CF0C4B /* 345_reverseVowelsOfAString.cpp in Sources */,
				50136A012423C5C800CF0C4B /* WiggleSort.II.cpp in Sources */,
				501369A32423C5C800CF0C4B /* missingRanges.cpp in Sources */,
				501368FB2423C5C800CF0C4B /* MinKSet.cpp in Sources */,
				50136A172423C5C800CF0C4B /* RemoveKDigits.cpp in Sources */,
				501369E32423C5C800CF0C4B /* sortColors.cpp in Sources */,
				501369952423C5C800CF0C4B /* 174_dungeonGame.cpp in Sources */,
				50136AD22423C5C800CF0C4B /* 字符匹配.cpp in Sources */,
				501369002423C5C800CF0C4B /* Latex.cpp in Sources */,
				5013690E2423C5C800CF0C4B /* CatFood.cpp in Sources */,
				501369EB2423C5C800CF0C4B /* maximumDepthOfBinaryTree.cpp in Sources */,
				50136A682423C5C800CF0C4B /* PatchingArray.cpp in Sources */,
				50136A182423C5C800CF0C4B /* 156_binaryTreeUpsideDown.cpp in Sources */,
				501369D82423C5C800CF0C4B /* uniqueBinarySearchTrees.cpp in Sources */,
				501369A12423C5C800CF0C4B /* distinctSubsequences.cpp in Sources */,
				501369C12423C5C800CF0C4B /* 413_ArithmeticSlices.cpp in Sources */,
				5013691F2423C5C800CF0C4B /* ArrayJump.cpp in Sources */,
				50136A2C2423C5C800CF0C4B /* course_schedule.cpp in Sources */,
				501369382423C5C800CF0C4B /* GoodNumber.cpp in Sources */,
				501369DD2423C5C800CF0C4B /* ExpressionAddOperators.cpp in Sources */,
				50136A5B2423C5C800CF0C4B /* IntegerToEnglishWords.cpp in Sources */,
				501369982423C5C800CF0C4B /* 201_BitwiseAndOfNumbersRange.cpp in Sources */,
				50136ACF2423C5C800CF0C4B /* 二叉树的遍历（递归，非递归）.cpp in Sources */,
				50136AAF2423C5C800CF0C4B /* RemoveLinkedListElements.cpp in Sources */,
				50136A1A2423C5C800CF0C4B /* 989_AddToArrayFormOfInteger.cpp in Sources */,
				50136A4C2423C5C800CF0C4B /* divideTwoInt.cpp in Sources */,
				50136A6F2423C5C800CF0C4B /* scrambleString.cpp in Sources */,
				5013692D2423C5C800CF0C4B /* StrMutiply.cpp in Sources */,
				50136A702423C5C800CF0C4B /* LongestSubstringWithAtLeastKRepeatingCharacters.cpp in Sources */,
				501369CA2423C5C800CF0C4B /* RangeSumQueryMutable.cpp in Sources */,
				50136A662423C5C800CF0C4B /* largestRectangleInHistogram.cpp in Sources */,
				50136A612423C5C800CF0C4B /* permutationSequence.cpp in Sources */,
				50136AA62423C5C800CF0C4B /* readNCharactersGivenRead4.II.cpp in Sources */,
				50136AB42423C5C800CF0C4B /* 10_regularExpressionMatching.cpp in Sources */,
				50136A872423C5C800CF0C4B /* CountPrimes.cpp in Sources */,
				50136A8B2423C5C800CF0C4B /* longestValidParentheses.cpp in Sources */,
				5013697A2423C5C800CF0C4B /* ImplementTriePrefixTree.cpp in Sources */,
				50136A532423C5C800CF0C4B /* 319_bulbSwitcher.cpp in Sources */,
				50136A6A2423C5C800CF0C4B /* LongestIncreasingPathInAMatrix.cpp in Sources */,
				501369282423C5C800CF0C4B /* BucketSort.cpp in Sources */,
				501368FA2423C5C800CF0C4B /* OrderPair.cpp in Sources */,
				50136A4A2423C5C800CF0C4B /* 90_subsets.II.cpp in Sources */,
				501369F52423C5C800CF0C4B /* MaximumAverageSubarray.I.cpp in Sources */,
				50136B392424E44F00CF0C4B /* O(n)中位数.cpp in Sources */,
				501369AA2423C5C800CF0C4B /* 11_containerWithMostWater.cpp in Sources */,
				501369232423C5C800CF0C4B /* test1.cpp in Sources */,
				50136A142423C5C800CF0C4B /* searchInRotatedSortedArray.II.cpp in Sources */,
				50136A1F2423C5C800CF0C4B /* removeDuplicatesFromSortedArray.cpp in Sources */,
				50136A052423C5C800CF0C4B /* simplifyPath.cpp in Sources */,
				50136A422423C5C800CF0C4B /* insertionSortList.cpp in Sources */,
				50136A962423C5C800CF0C4B /* FirstUniqueCharacterInAString.cpp in Sources */,
				50136A452423C5C800CF0C4B /* FindTheDifference.cpp in Sources */,
				501369442423C5C800CF0C4B /* LIS.cpp in Sources */,
				501369132423C5C800CF0C4B /* 3_安置路灯.cpp in Sources */,
				50136AC42423C5C800CF0C4B /* 45_jumpGame.II.cpp in Sources */,
				5013698C2423C5C800CF0C4B /* 5_longestPalindromicSubstring.cpp in Sources */,
				50136B112423C82600CF0C4B /* lower_bound.cpp in Sources */,
				501369CD2423C5C800CF0C4B /* 326_PowerOfThree.cpp in Sources */,
				501369902423C5C800CF0C4B /* 260_singleNumberIii.cpp in Sources */,
				50136A672423C5C800CF0C4B /* 216_combinationSum.III.cpp in Sources */,
				501369862423C5C800CF0C4B /* totalHammingDistance.cpp in Sources */,
				501369D72423C5C800CF0C4B /* uniqueBinarySearchTrees.II.cpp in Sources */,
				501369AF2423C5C800CF0C4B /* 714_BestTimeToBuyAndSellStockWithTransactionFee.cpp in Sources */,
				50136A1C2423C5C800CF0C4B /* ReconstructItinerary.cpp in Sources */,
				50136A852423C5C800CF0C4B /* wiggleSubsequence.cpp in Sources */,
				50136A122423C5C800CF0C4B /* FrogJump.cpp in Sources */,
				50136A492423C5C800CF0C4B /* 343_IntegerBreak.cpp in Sources */,
				501369E02423C5C800CF0C4B /* countAndSay.cpp in Sources */,
				501369742423C5C800CF0C4B /* textJustification.cpp in Sources */,
				501369F72423C5C800CF0C4B /* IslandPerimeter.cpp in Sources */,
				5013691E2423C5C800CF0C4B /* Poster.cpp in Sources */,
				50136A6D2423C5C800CF0C4B /* wordLadder.II.cpp in Sources */,
				501369612423C5C800CF0C4B /* excelSheetColumnTitle.cpp in Sources */,
				501369562423C5C800CF0C4B /* 211_AddAndSearchWord.cpp in Sources */,
				5013695F2423C5C800CF0C4B /* 47_permutations.II.cpp in Sources */,
				50136ABF2423C5C800CF0C4B /* 721_AccountsMerge.cpp in Sources */,
				50136A6C2423C5C800CF0C4B /* maxPointsOnALine.cpp in Sources */,
				501369192423C5C800CF0C4B /* PrimeD.cpp in Sources */,
				50136A8C2423C5C800CF0C4B /* LinkedListRandomNode.cpp in Sources */,
				50136A2E2423C5C800CF0C4B /* CourseSchedule.II.cpp in Sources */,
				5013691B2423C5C800CF0C4B /* Brackets.cpp in Sources */,
				501369A62423C5C800CF0C4B /* linkedListCycle.II.cpp in Sources */,
				50136AB32423C5C800CF0C4B /* EvaluateDivision.cpp in Sources */,
				501369582423C5C800CF0C4B /* removeDuplicatesFromSortedList.cpp in Sources */,
				50136A352423C5C800CF0C4B /* SummaryRanges.cpp in Sources */,
				50136A3E2423C5C800CF0C4B /* MaximumProductOfWordLengths.cpp in Sources */,
				50136AC22423C5C800CF0C4B /* Find-All-Anagrams-in-a-String.cpp in Sources */,
				50136A812423C5C800CF0C4B /* 67_addBinary.cpp in Sources */,
				50136AB62423C5C800CF0C4B /* 214_ShortestPalindrome.cpp in Sources */,
				50136A0C2423C5C800CF0C4B /* 40_combinationSum.II.cpp in Sources */,
				501369A42423C5C800CF0C4B /* 441_arrangingCoins.cpp in Sources */,
				501368F82423C5C800CF0C4B /* GoodNumber.cpp in Sources */,
				50136ADD2423C5C900CF0C4B /* 二叉树最远节点的距离.cpp in Sources */,
				50136ACE2423C5C800CF0C4B /* 合并两个有序链表.cpp in Sources */,
				501369CE2423C5C800CF0C4B /* 322_CoinChange.cpp in Sources */,
				50136A1D2423C5C800CF0C4B /* 188_bestTimeToBuyAndSellStock.IV.cpp in Sources */,
				50136A3A2423C5C800CF0C4B /* populatingNextRightPointersInEachNode.cpp in Sources */,
				50136AB02423C5C800CF0C4B /* CountingBits.cpp in Sources */,
				501369EC2423C5C800CF0C4B /* 41_firstMissingPositive.cpp in Sources */,
				501369202423C5C800CF0C4B /* StairsClimb.cpp in Sources */,
				50136A642423C5C800CF0C4B /* wordBreak.cpp in Sources */,
				501369502423C5C800CF0C4B /* countOfSmallerNumbersAfterSelf.cpp in Sources */,
				50136ADC2423C5C900CF0C4B /* 反转链表.cpp in Sources */,
				50136ACD2423C5C800CF0C4B /* strcmp.cpp in Sources */,
				5013699F2423C5C800CF0C4B /* MinimumSizeSubarraySum.cpp in Sources */,
				501369032423C5C800CF0C4B /* PalStr.cpp in Sources */,
				501369922423C5C800CF0C4B /* 18_4Sum.cpp in Sources */,
				50136B162423C97B00CF0C4B /* 最长上升子序列.cpp in Sources */,
				50136A732423C5C800CF0C4B /* 917_reverseOnlyLetters.cpp in Sources */,
				50136AB82423C5C800CF0C4B /* PalindromePairs.cpp in Sources */,
				50136A9B2423C5C800CF0C4B /* reverseNodesInKGroup.cpp in Sources */,
				501369322423C5C800CF0C4B /* iplusplusi.cpp in Sources */,
				50136AB72423C5C800CF0C4B /* 170_twoSum.III.cpp in Sources */,
				50136A892423C5C800CF0C4B /* WordPattern.cpp in Sources */,
				501369932423C5C800CF0C4B /* 219_ContainsDuplicate.II.cpp in Sources */,
				501369F02423C5C800CF0C4B /* 12_integerToRoman.cpp in Sources */,
				50136AD82423C5C900CF0C4B /* 送货ABCD.cpp in Sources */,
				501369052423C5C800CF0C4B /* BitCoinBuy.cpp in Sources */,
				50136A692423C5C800CF0C4B /* DistributeCoinsInBinaryTree.cpp in Sources */,
				50136A9A2423C5C800CF0C4B /* palindromePartitioning.cpp in Sources */,
				50136A7F2423C5C800CF0C4B /* spiralMatrix.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		50136AE32423C5FA00CF0C4B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				50136AEA2423C5FA00CF0C4B /* main.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		50136B062423C7D600CF0C4B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				50136B0D2423C7D600CF0C4B /* main.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		501366022423C4EA00CF0C4B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		501366032423C4EA00CF0C4B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
			};
			name = Release;
		};
		501366052423C4EA00CF0C4B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 9LD858K62M;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		501366062423C4EA00CF0C4B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 9LD858K62M;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		50136AEC2423C5FA00CF0C4B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 9LD858K62M;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		50136AED2423C5FA00CF0C4B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 9LD858K62M;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		50136B0F2423C7D600CF0C4B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 9LD858K62M;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		50136B102423C7D600CF0C4B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 9LD858K62M;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		501365F82423C4EA00CF0C4B /* Build configuration list for PBXProject "C++Learning" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				501366022423C4EA00CF0C4B /* Debug */,
				501366032423C4EA00CF0C4B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		501366042423C4EA00CF0C4B /* Build configuration list for PBXNativeTarget "C++Learning" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				501366052423C4EA00CF0C4B /* Debug */,
				501366062423C4EA00CF0C4B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		50136AEB2423C5FA00CF0C4B /* Build configuration list for PBXNativeTarget "Tree" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				50136AEC2423C5FA00CF0C4B /* Debug */,
				50136AED2423C5FA00CF0C4B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		50136B0E2423C7D600CF0C4B /* Build configuration list for PBXNativeTarget "Main" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				50136B0F2423C7D600CF0C4B /* Debug */,
				50136B102423C7D600CF0C4B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 501365F52423C4EA00CF0C4B /* Project object */;
}
